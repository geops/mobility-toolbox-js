[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "ol/Observable~Observable",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Observable-Observable.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/Observable~Observable",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "ol/Map~Map",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/Map~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "ol/coordinate~Coordinate",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_coordinate.html#~Coordinate",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/coordinate~Coordinate",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "ol/layer/Layer~Layer",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_layer_Layer-Layer.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/layer/Layer~Layer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "ol/Feature~Feature",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/Feature~Feature",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "ol/geom/Point~Point",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_Point-Point.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/geom/Point~Point",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "ol/geom/LineString~LineString",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_LineString-LineString.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/geom/LineString~LineString",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "ol/geom/MultiLineString~MultiLineString",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_MultiLineString-MultiLineString.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/geom/MultiLineString~MultiLineString",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "ol/format/GeoJSON",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_format_GeoJSON-GeoJSON.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/format/GeoJSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "ol/MapEvent~MapEvent",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_MapEvent-MapEvent.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/MapEvent~MapEvent",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "ol/events~EventsKey",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_events.html#~EventsKey",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/events~EventsKey",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "ol/Object~BaseObject",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Object-BaseObject.html",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~ol/Object~BaseObject",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "mapboxgl.Map",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "mapboxgl.Layer",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.Layer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "mapboxgl.map.event:mousemove",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map.event:mousemove",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.map.event:mousemove",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "mapboxgl.map.event:zoomend",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map.event:zoomend",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.map.event:zoomend",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "mapboxgl.MapMouseEvent",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.MapMouseEvent",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "mapboxgl.styleLayer",
    "externalLink": "https://docs.mapbox.com/help/glossary/layer/",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.styleLayer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "mapboxgl.filter",
    "externalLink": "https://docs.mapbox.com/help/glossary/filter/",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.filter",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "mapboxgl.IControl",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/markers/#icontrol",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.IControl",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "mapboxgl.position",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~mapboxgl.position",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "AbortController",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/AbortController",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~AbortController",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "GeoJSONPoint",
    "externalLink": "https://tools.ietf.org/html/rfc7946#section-3.1.2",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~GeoJSONPoint",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "GeoJSONFeature",
    "externalLink": "https://tools.ietf.org/html/rfc7946#section-3.2",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~GeoJSONFeature",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "Canvas",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~Canvas",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~CanvasRenderingContext2D",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "GetTrajectoriesParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectories",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~GetTrajectoriesParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "GetTrajectoryByIdParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectorybyid",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~GetTrajectoryByIdParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "TrajservTrajectory",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#model-single_trajectory",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~TrajservTrajectory",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "GetTrajectoryStationsParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajstations",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~GetTrajectoryStationsParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "StopsSearchParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd702a256d90001cf1361/#/default/get_",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~StopsSearchParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "HTMLElement",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/HTMLElement",
    "memberof": "src/.externals.js",
    "static": true,
    "longname": "src/.externals.js~HTMLElement",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/api/RoutingAPI.js",
    "content": "import HttpAPI from '../common/api/HttpAPI';\n\n/**\n * Access to the [Routing service](https://developer.geops.io/apis/routing).\n *\n * @example\n * import { RoutingAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new RoutingAPI({\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass RoutingAPI extends HttpAPI {\n  /**\n   * Constructor\n   *\n   * @param {Object} options Options.\n   * @param {string} [options.url='https://api.geops.io/routing/v1/'] Service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   * @param {string} options.mot Mean of transport on load.\n   */\n  constructor(options = {}) {\n    super({\n      url: 'https://api.geops.io/routing/v1/',\n      ...options,\n    });\n  }\n\n  /**\n   * Route.\n   *\n   * @param {RoutingSearchParams} params Request parameters. See [Routing service documentation](https://developer.geops.io/apis/routing/).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @return {Promise<GeoJSONFeatureCollection>} An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326).\n   */\n  route(params, abortController = new AbortController()) {\n    return this.fetch('', params, {\n      signal: abortController.signal,\n    });\n  }\n}\n\nexport default RoutingAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/api/RoutingAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "RoutingAPI",
    "memberof": "src/api/RoutingAPI.js",
    "static": true,
    "longname": "src/api/RoutingAPI.js~RoutingAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/api/RoutingAPI.js",
    "importStyle": "RoutingAPI",
    "description": "Access to the [Routing service](https://developer.geops.io/apis/routing).",
    "examples": [
      "import { RoutingAPI } from 'mobility-toolbox-js/api';\n\nconst api = new RoutingAPI({\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/common/api/HttpAPI.js~HttpAPI"
    ]
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/api/RoutingAPI.js~RoutingAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/RoutingAPI.js~RoutingAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'https://api.geops.io/routing/v1/'",
        "defaultRaw": "'https://api.geops.io/routing/v1/'",
        "name": "options.url",
        "description": "Service url."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps services](https://developer.geops.io/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.mot",
        "description": "Mean of transport on load."
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "route",
    "memberof": "src/api/RoutingAPI.js~RoutingAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/RoutingAPI.js~RoutingAPI#route",
    "access": "public",
    "description": "Route.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "RoutingSearchParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request parameters. See [Routing service documentation](https://developer.geops.io/apis/routing/)."
      },
      {
        "nullable": null,
        "types": [
          "AbortController"
        ],
        "spread": false,
        "optional": false,
        "name": "abortController",
        "description": "Abort controller used to cancel the request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<GeoJSONFeatureCollection>"
      ],
      "spread": false,
      "description": "An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326)."
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/api/StopsAPI.js",
    "content": "import HttpAPI from '../common/api/HttpAPI';\n\n/**\n * Access to the [Stops service](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n *\n * @example\n * import { StopsAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new StopsAPI({\n *   url: 'https://api.geops.io/stops/v1/',\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass StopsAPI extends HttpAPI {\n  /**\n   * Constructor\n   *\n   * @param {Object} options Options.\n   * @param {string} [options.url='https://api.geops.io/stops/v1/'] Service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   */\n  constructor(options = {}) {\n    super({ url: 'https://api.geops.io/stops/v1/', ...options });\n  }\n\n  /**\n   * Search.\n   *\n   * @param {StopsSearchParams} params Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @return {Promise<GeoJSONFeatureCollection>} An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326).\n   */\n  search(params, abortController = {}) {\n    return this.fetch('', params, {\n      signal: abortController.signal,\n    });\n  }\n}\n\nexport default StopsAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/api/StopsAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "class",
    "name": "StopsAPI",
    "memberof": "src/api/StopsAPI.js",
    "static": true,
    "longname": "src/api/StopsAPI.js~StopsAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/api/StopsAPI.js",
    "importStyle": "StopsAPI",
    "description": "Access to the [Stops service](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).",
    "examples": [
      "import { StopsAPI } from 'mobility-toolbox-js/api';\n\nconst api = new StopsAPI({\n  url: 'https://api.geops.io/stops/v1/',\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/common/api/HttpAPI.js~HttpAPI"
    ]
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/api/StopsAPI.js~StopsAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/StopsAPI.js~StopsAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'https://api.geops.io/stops/v1/'",
        "defaultRaw": "'https://api.geops.io/stops/v1/'",
        "name": "options.url",
        "description": "Service url."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps services](https://developer.geops.io/)."
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "search",
    "memberof": "src/api/StopsAPI.js~StopsAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/StopsAPI.js~StopsAPI#search",
    "access": "public",
    "description": "Search.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "StopsSearchParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/)."
      },
      {
        "nullable": null,
        "types": [
          "AbortController"
        ],
        "spread": false,
        "optional": false,
        "name": "abortController",
        "description": "Abort controller used to cancel the request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<GeoJSONFeatureCollection>"
      ],
      "spread": false,
      "description": "An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326)."
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/api/TralisAPI.js",
    "content": "import WebSocketAPI from '../common/api/WebSocketAPI';\nimport {\n  getModeSuffix,\n  cleanStopTime,\n  compareDepartures,\n} from './TralisAPIUtils';\n\n/**\n * Enum for Tralis modes.\n * @readonly\n * @typedef {string} TralisMode\n * @property {string} RAW \"raw\"\n * @property {string} SCHEMATIC \"schematic\"\n * @property {string} TOPOGRAPHIC \"topographic\"\n * @enum {TralisMode}\n */\nexport const TralisModes = {\n  RAW: 'raw',\n  TOPOGRAPHIC: 'topographic',\n  SCHEMATIC: 'schematic',\n};\n\n/**\n * This class provides convenience methods to access to the [geOps realtime api](https://developer.geops.io/apis/realtime/).\n *\n * @example\n * import { TralisAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new TralisAPI({\n *   url: \"yourUrl\",\n *   apiKey: \"yourApiKey\"\n * });\n *\n * @example\n * import { TralisAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new TralisAPI(\"yourUrl\");\n */\nclass TralisAPI {\n  /**\n   * Constructor\n   *\n   * @param {Object|string} options A string representing the url of the service or an object containing the url and the apiKey.\n   * @param {string} options.url Url to the [geOps realtime api](https://developer.geops.io/apis/realtime/).\n   * @param {string} options.apiKey Access key for [geOps apis](https://developer.geops.io/).\n   * @param {string} [options.prefix=''] Service prefix to specify tenant.\n   * @param {string} [options.projection] The epsg code of the projection for features. Default to EPSG:3857.\n   * @param {number[4]} [options.bbox=[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.\n   */\n  constructor(options = {}) {\n    this.defineProperties(options);\n\n    /** @ignore */\n    this.subscribedStationUic = null;\n\n    /** @ignore */\n    this.departureUpdateTimeout = null;\n\n    /** @ignore */\n    this.maxDepartureAge = 30;\n\n    /** @ignore */\n    this.extraGeoms = {};\n\n    /** @ignore */\n    this.prefix = options.prefix || '';\n\n    /** @ignore */\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  defineProperties(options) {\n    let opt = options;\n\n    if (typeof options === 'string') {\n      opt = { url: options };\n    }\n\n    const { apiKey } = opt;\n    let { url, projection, bbox, buffer = [100, 100] } = opt;\n    const wsApi = new WebSocketAPI();\n\n    if (apiKey) {\n      url = `${url || 'wss://api.geops.io/tracker-ws/v1/'}?key=${apiKey}`;\n    }\n\n    Object.defineProperties(this, {\n      url: {\n        get: () => url,\n        set: (newUrl) => {\n          url = newUrl;\n          this.open();\n        },\n      },\n      projection: {\n        get: () => projection,\n        set: (newProjection) => {\n          if (newProjection !== projection) {\n            projection = newProjection;\n            if (this.wsApi) {\n              this.wsApi.send(`PROJECTION ${projection}`);\n            }\n          }\n        },\n      },\n      bbox: {\n        get: () => bbox,\n        set: (newBbox) => {\n          if (JSON.stringify(newBbox) !== JSON.stringify(bbox)) {\n            bbox = newBbox;\n            if (this.wsApi) {\n              this.wsApi.send(`BBOX ${bbox.join(' ')}`);\n            }\n          }\n        },\n      },\n      buffer: {\n        get: () => buffer,\n        set: (newBuffer) => {\n          if (JSON.stringify(newBuffer) !== JSON.stringify(buffer)) {\n            buffer = newBuffer;\n            if (this.wsApi) {\n              this.wsApi.send(`BUFFER ${buffer.join(' ')}`);\n            }\n          }\n        },\n      },\n      /**\n       * The websocket helper class to connect the websocket.\n       *\n       * @private\n       */\n      wsApi: {\n        value: wsApi,\n        writable: true,\n      },\n      /**\n       * Interval between PING request in ms.\n       * If equal to 0,  no PING request are sent.\n       * @type {number}\n       * @private\n       */\n      pingIntervalMs: {\n        value: options.pingIntervalMs || 10000,\n        writable: true,\n      },\n      /**\n       * Timeout in ms after an automatic reconnection when the websoscket has been closed by the server.\n       * @type {number}\n       */\n      reconnectTimeoutMs: {\n        value: options.pingIntervalMs || 100,\n        writable: true,\n      },\n    });\n  }\n\n  open() {\n    this.close();\n    // Register BBOX and PROJECTION messages must be send before previous subscriptions.\n    this.wsApi.connect(this.url, this.onOpen);\n\n    // Register reconnection on close.\n    this.wsApi.websocket.onclose = () => {\n      this.onClose();\n    };\n  }\n\n  /**\n   * Close the websocket connection without reconnection.\n   */\n  close() {\n    this.wsApi.close();\n  }\n\n  /**\n   * Unsubscribe trajectory and deleted_vehicles channels. To resubscribe you have to set a new BBOX.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  reset() {\n    this.wsApi.send('RESET');\n  }\n\n  /**\n   * Callback when the websocket is opened and ready.\n   * It applies the bbox and the projection.\n   */\n  onOpen() {\n    if (this.projection) {\n      this.wsApi.send(`PROJECTION ${this.projection}`);\n    }\n\n    if (this.bbox) {\n      this.wsApi.send(`BBOX ${this.bbox.join(' ')}`);\n    }\n\n    if (this.buffer) {\n      this.wsApi.send(`BUFFER ${this.buffer.join(' ')}`);\n    }\n\n    /**\n     * Keep websocket alive\n     */\n    if (this.pingIntervalMs) {\n      window.clearInterval(this.pingInterval);\n      /** @ignore */\n      this.pingInterval = setInterval(() => {\n        this.wsApi.send('PING');\n      }, this.pingIntervalMs);\n    }\n  }\n\n  /**\n   * Callback when the websocket is closed by the server.\n   * It auto reconnects after a timeout.\n   */\n  onClose() {\n    window.clearTimeout(this.pingInterval);\n    window.clearTimeout(this.reconnectTimeout);\n\n    if (this.reconnectTimeoutMs) {\n      /** @ignore */\n      this.reconnectTimeout = window.setTimeout(\n        () => this.open(),\n        this.reconnectTimeoutMs,\n      );\n    }\n  }\n\n  /**\n   * Subscribe to a channel.\n   *\n   * @param {string} channel Name of the websocket channel to subscribe.\n   * @param {function} onSuccess Callback when the subscription succeeds.\n   * @param {function} onError Callback when the subscription fails.\n   * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n   * @private\n   */\n  subscribe(channel, onSuccess, onError, quiet = false) {\n    this.wsApi.subscribe({ channel }, onSuccess, onError, quiet);\n  }\n\n  /**\n   * Unsubscribe both modes of a channel.\n   *\n   * @param {string} channel Name of the websocket channel to unsubscribe.\n   * @param {string} suffix Suffix to add to the channel name.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   * @private\n   */\n  unsubscribe(channel, suffix, cb) {\n    this.wsApi.unsubscribe(\n      `${channel}${getModeSuffix(TralisModes.SCHEMATIC, TralisModes)}${suffix}`,\n      cb,\n    );\n    this.wsApi.unsubscribe(\n      `${channel}${getModeSuffix(TralisModes.TOPOGRAPHIC, TralisModes)}${\n        suffix || ''\n      }`,\n      cb,\n    );\n  }\n\n  /**\n   * Filter departures and return an array.\n   *\n   * @param {Object} depObject The object containing departures by id.\n   * @param {boolean} [sortByMinArrivalTime=false] If true sort departures by arrival time.\n   * @return {Array<departure>} Return departures array.\n   * @private\n   */\n  filterDepartures(depObject, sortByMinArrivalTime = false) {\n    const departures = Object.keys(depObject).map((k) => depObject[k]);\n    departures.sort((a, b) => compareDepartures(a, b, sortByMinArrivalTime));\n\n    let future = new Date();\n    future.setMinutes(future.getMinutes() + this.maxDepartureAge);\n    future = future.getTime();\n\n    let past = new Date();\n    past.setMinutes(past.getMinutes() - this.maxDepartureAge);\n    past = past.getTime();\n\n    const departureArray = [];\n    const platformsBoarding = [];\n    let previousDeparture = null;\n\n    for (let i = departures.length - 1; i >= 0; i -= 1) {\n      const d = departures[i];\n      const t = new Date(d.time).getTime();\n\n      // Only show departures within the next 30 minutes\n      if (t > past && t < future) {\n        // If 2 trains are boarding at the same platform,\n        // remove the older one.\n        if (d.state === 'BOARDING') {\n          if (platformsBoarding.indexOf(d.platform) === -1) {\n            platformsBoarding.push(d.platform);\n          } else {\n            d.state = 'HIDDEN';\n          }\n        }\n\n        // If two trains with the same line number and destinatin\n        // and a departure difference < 1 minute, hide the second one.\n        if (\n          previousDeparture &&\n          d.to[0] === previousDeparture.to[0] &&\n          Math.abs(t - previousDeparture.time) < 1000 &&\n          d.line.name === previousDeparture.line.name\n        ) {\n          d.state = 'HIDDEN';\n        }\n\n        if (/(STOP_CANCELLED|JOURNEY_CANCELLED)/.test(d.state)) {\n          d.cancelled = true;\n        }\n\n        previousDeparture = d;\n        previousDeparture.time = t;\n        departureArray.unshift(d);\n      }\n    }\n\n    return departureArray;\n  }\n\n  /**\n   * Subscribe to departures channel of a given station.\n   *\n   * @param {number} stationId UIC of the station.\n   * @param {Boolean} sortByMinArrivalTime Sort by minimum arrival time\n   * @param {function(departures:Departure[])} onMessage Function called on each message of the channel.\n   */\n  subscribeDepartures(stationId, sortByMinArrivalTime, onMessage) {\n    window.clearTimeout(this.departureUpdateTimeout);\n    this.unsubscribeDepartures();\n    this.subscribedStationUic = stationId;\n    const channel = stationId ? `timetable_${stationId}` : null;\n    const departureObject = {};\n    this.subscribe(\n      channel,\n      (data) => {\n        if (data.source === channel) {\n          const content = data.content || {};\n          const tDiff = new Date(content.timestamp).getTime() - Date.now();\n          content.timediff = tDiff;\n          departureObject[content.call_id] = content;\n\n          window.clearTimeout(this.departureUpdateTimeout);\n          this.departureUpdateTimeout = window.setTimeout(() => {\n            const departures = this.filterDepartures(\n              departureObject,\n              sortByMinArrivalTime || false,\n            );\n            onMessage(departures);\n          }, 100);\n        }\n      },\n      () => {\n        onMessage([]);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from current departures channel.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeDepartures(cb) {\n    if (this.subscribedStationUic) {\n      this.unsubscribe(`timetable_${this.subscribedStationUic}`, '', cb);\n      this.subscribedStationUic = null;\n    }\n  }\n\n  /**\n   * Subscribe to the disruptions channel for tenant.\n   *\n   * @param {function} onMessage Function called on each message of the channel.\n   */\n  subscribeDisruptions(onMessage) {\n    this.subscribe(`${this.prefix}newsticker`, (data) => {\n      onMessage(data.content);\n    });\n  }\n\n  /**\n   * Unsubscribe disruptions.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeDisruptions(cb) {\n    this.unsubscribe(`${this.prefix}newsticker`, '', cb);\n  }\n\n  /**\n   * Return a station with a given uic number and a mode.\n   *\n   * @param {number} uic UIC of the station.\n   * @param {TralisMode} mode Tralis mode.\n   * @return {Promise<Station>} A station.\n   */\n  getStation(uic, mode) {\n    const params = {\n      channel: `station${getModeSuffix(mode, TralisModes)}`,\n      args: uic,\n    };\n\n    return new Promise((resolve, reject) => {\n      this.wsApi.get(params, (data) => {\n        if (data.content) {\n          resolve(data.content);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * Update the model's station list for a given mode and a bbox.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @return {Promise<Array<Station>>} An array of stations.\n   */\n  getStations(mode) {\n    const stations = [];\n    const params = {\n      channel: `station${getModeSuffix(mode, TralisModes)}`,\n    };\n    window.clearTimeout(this.stationUpdateTimeout);\n    return new Promise((resolve, reject) => {\n      this.wsApi.get(params, (data) => {\n        if (data.content) {\n          stations.push(data.content);\n          window.clearTimeout(this.stationUpdateTimeout);\n          /** @ignore */\n          this.stationUpdateTimeout = window.setTimeout(() => {\n            resolve(stations);\n          }, 50);\n        } else {\n          reject(data.content);\n        }\n      });\n    });\n  }\n\n  /**\n   * Subscribe to stations channel.\n   * One message pro station.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(station: Station)} onMessage Function called on each message of the channel.\n   */\n  subscribeStations(mode, onMessage) {\n    this.unsubscribeStations();\n    this.subscribe(`station${getModeSuffix(mode, TralisModes)}`, (data) => {\n      if (data.content) {\n        onMessage(data.content);\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to stations channel.\n   * @param {function} cb The listener callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribe.\n   */\n  unsubscribeStations(cb) {\n    window.clearTimeout(this.stationUpdateTimeout);\n    this.unsubscribe('station', '', cb);\n  }\n\n  /**\n   * Subscribe to extra_geoms channel.\n   *\n   * @param {function(extraGeoms: GeosJSONFeature[])} onMessage Function called on each message of the channel.\n   */\n  subscribeExtraGeoms(onMessage) {\n    this.subscribe('extra_geoms', (data) => {\n      const extraGeom = data.content;\n\n      if (extraGeom) {\n        const { ref } = extraGeom.properties;\n\n        if (extraGeom.type === 'Feature') {\n          this.extraGeoms[ref] = extraGeom;\n        } else {\n          delete this.extraGeoms[ref];\n        }\n\n        onMessage(\n          Object.keys(this.extraGeoms).map((key) => this.extraGeoms[key]),\n        );\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to extra_geoms channel.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeExtraGeoms(cb) {\n    this.unsubscribe('extra_geoms', '', cb);\n  }\n\n  /**\n   * Subscribe to trajectory channel.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(trajectory: TralisTrajectory)} onMessage Function called on each message of the channel.\n   * @param {boolean} quiet If true, the subscription will not send GET and SUB requests to the websocket.\n   */\n  subscribeTrajectory(mode, onMessage, quiet = false) {\n    this.unsubscribeTrajectory(onMessage);\n    this.subscribe(\n      `trajectory${getModeSuffix(mode, TralisModes)}`,\n      onMessage,\n      null,\n      quiet,\n    );\n  }\n\n  /**\n   * Unsubscribe to trajectory channels.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeTrajectory(cb) {\n    this.unsubscribe(`trajectory`, '', cb);\n  }\n\n  /**\n   * Subscribe to deleted_vhicles channel.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(response: { content: Vehicle })} onMessage Function called on each message of the channel.\n   * @param {boolean} quiet If true, the subscription will not send GET and SUB requests to the websocket.\n   */\n  subscribeDeletedVehicles(mode, onMessage, quiet = false) {\n    this.unsubscribeDeletedVehicles(onMessage);\n    this.subscribe(\n      `deleted_vehicles${getModeSuffix(mode, TralisModes)}`,\n      onMessage,\n      null,\n      quiet,\n    );\n  }\n\n  /**\n   * Unsubscribe to deleted_vhicles channels.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeDeletedVehicles(cb) {\n    this.unsubscribe('deleted_vehicles', '', cb);\n  }\n\n  /**\n   * Get a full trajectory of a vehicule .\n   *\n   * @param {string} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   * @param {string} generalizationLevel The generalization level to request. Can be one of 5 (more generalized), 10, 30, 100, undefined (less generalized).\n   * @return {Promise<FullTrajectory>} Return a full trajectory.\n   */\n  getFullTrajectory(id, mode, generalizationLevel) {\n    const channel = [`full_trajectory${getModeSuffix(mode, TralisModes)}`];\n    if (id) {\n      channel.push(id);\n    }\n\n    if ((!mode || mode === TralisModes.TOPOGRAPHIC) && generalizationLevel) {\n      channel.push(`gen${generalizationLevel}`);\n    }\n\n    const params = {\n      channel: channel.join('_'),\n    };\n\n    return new Promise((resolve) => {\n      this.wsApi.get(params, (data) => {\n        if (data.content) {\n          resolve(data.content);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get full trajectories of a vehicules .\n   *\n   * @param {string[]} ids List of vehicles ids.\n   * @param {TralisMode} mode Tralis mode.\n   * @param {string} generalizationLevel The generalization level to request. Can be one of '', 'gen5', 'gen10', 'gen30', 'gen100'.\n   * @return {Promise<Array<FullTrajectory>>} Return an array of full trajectories.\n   */\n  getFullTrajectories(ids, mode, generalizationLevel) {\n    const promises = ids.map((id) =>\n      this.getFullTrajectory(id, mode, generalizationLevel),\n    );\n    return Promise.all(promises);\n  }\n\n  /**\n   * Subscribe to full_trajectory channel of a given vehicle.\n   *\n   * @param {string} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   */\n  subscribeFullTrajectory(id, mode) {\n    // window.clearTimeout(this.fullTrajectoryUpdateTimeout);\n    this.unsubscribeFullTrajectory(id);\n    this.subscribe(\n      `full_trajectory${getModeSuffix(mode, TralisModes)}_${id}`,\n      (data) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe full_trajectory', data);\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe full_trajectory error', err);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from full_trajectory channel\n   *\n   * @param {string} id A vehicle id.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeFullTrajectory(id, cb) {\n    this.unsubscribe('full_trajectory', `_${id}`, cb);\n  }\n\n  /**\n   * Get the list of stops for this vehicle.\n   *\n   * @param {string} id A vehicle id.\n   * @return {Promise<StopSequence>} Returns a stop sequence object.\n   */\n  getStopSequence(id) {\n    const params = {\n      channel: `stopsequence_${id}`,\n    };\n    return new Promise((resolve, reject) => {\n      this.wsApi.get(\n        params,\n        (data) => {\n          if (data.content && data.content.length) {\n            const content = data.content.map((stopSequence) =>\n              cleanStopTime(stopSequence),\n            );\n\n            // Remove the delay from arrivalTime and departureTime\n            resolve(content);\n          }\n          resolve([]);\n        },\n        (err) => {\n          reject(err);\n        },\n      );\n    });\n  }\n\n  /**\n   * Get a list of stops for a list of vehicles.\n   *\n   * @param {string[]} ids List of vehicles ids.\n   * @return {Promise<Array<StopSequence>>} Return an array of stop sequences.\n   */\n  getStopSequences(ids) {\n    const promises = ids.map((id) => this.getStopSequence(id));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Subscribe to stopsequence channel of a given vehicle.\n   *\n   * @param {string} id A vehicle id.\n   * @param {function(stopSequence: StopSequence)} onMessage Function called on each message of the channel.\n   */\n  subscribeStopSequence(id, onMessage) {\n    window.clearTimeout(this.fullTrajectoryUpdateTimeout);\n    this.unsubscribeStopSequence(id);\n\n    this.subscribe(\n      `stopsequence_${id}`,\n      (data) => {\n        if (data.content && data.content.length) {\n          const content = data.content.map((stopSequence) =>\n            cleanStopTime(stopSequence),\n          );\n\n          // Remove the delay from arrivalTime and departureTime\n          onMessage(content);\n        }\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe stopsequence error', err);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from stopsequence channel\n   *\n   * @param {string} id A vehicle id.\n   * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n   */\n  unsubscribeStopSequence(id, cb) {\n    this.unsubscribe(`stopsequence`, `_${id}`, cb);\n  }\n\n  /**\n   * Subscribe to healthcheck channel.\n   * @param {function} onMessage Callback when the subscribe to healthcheck channel succeeds.\n   */\n  subscribeHealthCheck(onMessage) {\n    this.unsubscribeHealthCheck();\n    this.subscribe('healthcheck', onMessage);\n  }\n\n  /**\n   * Unsubscribe to healthcheck channel.\n   */\n  unsubscribeHealthCheck() {\n    this.unsubscribe('healthcheck');\n  }\n}\nexport default TralisAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/api/TralisAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "typedef",
    "name": "TralisMode",
    "memberof": "src/api/TralisAPI.js",
    "static": true,
    "longname": "src/api/TralisAPI.js~TralisMode",
    "access": "public",
    "description": "Enum for Tralis modes.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      },
      {
        "tagName": "@enum",
        "tagValue": "{TralisMode}"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "RAW",
        "description": "\"raw\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "SCHEMATIC",
        "description": "\"schematic\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "TOPOGRAPHIC",
        "description": "\"topographic\""
      }
    ],
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "TralisMode"
    }
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "TralisAPI",
    "memberof": "src/api/TralisAPI.js",
    "static": true,
    "longname": "src/api/TralisAPI.js~TralisAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/api/TralisAPI.js",
    "importStyle": "TralisAPI",
    "description": "This class provides convenience methods to access to the [geOps realtime api](https://developer.geops.io/apis/realtime/).",
    "examples": [
      "import { TralisAPI } from 'mobility-toolbox-js/api';\n\nconst api = new TralisAPI({\n  url: \"yourUrl\",\n  apiKey: \"yourApiKey\"\n});",
      "import { TralisAPI } from 'mobility-toolbox-js/api';\n\nconst api = new TralisAPI(\"yourUrl\");"
    ],
    "lineNumber": 39,
    "interface": false
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "A string representing the url of the service or an object containing the url and the apiKey."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "Url to the [geOps realtime api](https://developer.geops.io/apis/realtime/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps apis](https://developer.geops.io/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "options.prefix",
        "description": "Service prefix to specify tenant."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.projection",
        "description": "The epsg code of the projection for features. Default to EPSG:3857."
      },
      {
        "nullable": null,
        "types": [
          "number[4]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.",
        "defaultRaw": "[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.",
        "name": "options.bbox",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "subscribedStationUic",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribedStationUic",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "departureUpdateTimeout",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#departureUpdateTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "maxDepartureAge",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#maxDepartureAge",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "ignore": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "extraGeoms",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#extraGeoms",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "prefix",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#prefix",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#defineProperties",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "open",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#open",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "close",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#close",
    "access": "public",
    "description": "Close the websocket connection without reconnection.",
    "lineNumber": 172,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "reset",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#reset",
    "access": "public",
    "description": "Unsubscribe trajectory and deleted_vehicles channels. To resubscribe you have to set a new BBOX.",
    "lineNumber": 180,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "onOpen",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#onOpen",
    "access": "public",
    "description": "Callback when the websocket is opened and ready.\nIt applies the bbox and the projection.",
    "lineNumber": 188,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "pingInterval",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#pingInterval",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "onClose",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#onClose",
    "access": "public",
    "description": "Callback when the websocket is closed by the server.\nIt auto reconnects after a timeout.",
    "lineNumber": 217,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "reconnectTimeout",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#reconnectTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribe",
    "access": "private",
    "description": "Subscribe to a channel.",
    "lineNumber": 239,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "Name of the websocket channel to subscribe."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onSuccess",
        "description": "Callback when the subscription succeeds."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribe",
    "access": "private",
    "description": "Unsubscribe both modes of a channel.",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "Name of the websocket channel to unsubscribe."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suffix",
        "description": "Suffix to add to the channel name."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "filterDepartures",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#filterDepartures",
    "access": "private",
    "description": "Filter departures and return an array.",
    "lineNumber": 272,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "depObject",
        "description": "The object containing departures by id."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "sortByMinArrivalTime",
        "description": "If true sort departures by arrival time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<departure>"
      ],
      "spread": false,
      "description": "Return departures array."
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "subscribeDepartures",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeDepartures",
    "access": "public",
    "description": "Subscribe to departures channel of a given station.",
    "lineNumber": 335,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "stationId",
        "description": "UIC of the station."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sortByMinArrivalTime",
        "description": "Sort by minimum arrival time"
      },
      {
        "nullable": null,
        "types": [
          "function(departures:Departure[])"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "unsubscribeDepartures",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeDepartures",
    "access": "public",
    "description": "Unsubscribe from current departures channel.",
    "lineNumber": 370,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "subscribeDisruptions",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeDisruptions",
    "access": "public",
    "description": "Subscribe to the disruptions channel for tenant.",
    "lineNumber": 382,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "unsubscribeDisruptions",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeDisruptions",
    "access": "public",
    "description": "Unsubscribe disruptions.",
    "lineNumber": 392,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "getStation",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getStation",
    "access": "public",
    "description": "Return a station with a given uic number and a mode.",
    "lineNumber": 403,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "uic",
        "description": "UIC of the station."
      },
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Station>"
      ],
      "spread": false,
      "description": "A station."
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "getStations",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getStations",
    "access": "public",
    "description": "Update the model's station list for a given mode and a bbox.",
    "lineNumber": 426,
    "params": [
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array<Station>>"
      ],
      "spread": false,
      "description": "An array of stations."
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "stationUpdateTimeout",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#stationUpdateTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 438,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "subscribeStations",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeStations",
    "access": "public",
    "description": "Subscribe to stations channel.\nOne message pro station.",
    "lineNumber": 455,
    "params": [
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      },
      {
        "nullable": null,
        "types": [
          "function(station: Station)"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "unsubscribeStations",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeStations",
    "access": "public",
    "description": "Unsubscribe to stations channel.",
    "lineNumber": 468,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "The listener callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribe."
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "subscribeExtraGeoms",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeExtraGeoms",
    "access": "public",
    "description": "Subscribe to extra_geoms channel.",
    "lineNumber": 478,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(extraGeoms: GeosJSONFeature[])"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "unsubscribeExtraGeoms",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeExtraGeoms",
    "access": "public",
    "description": "Unsubscribe to extra_geoms channel.",
    "lineNumber": 502,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "subscribeTrajectory",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeTrajectory",
    "access": "public",
    "description": "Subscribe to trajectory channel.",
    "lineNumber": 513,
    "params": [
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      },
      {
        "nullable": null,
        "types": [
          "function(trajectory: TralisTrajectory)"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "quiet",
        "description": "If true, the subscription will not send GET and SUB requests to the websocket."
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "unsubscribeTrajectory",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeTrajectory",
    "access": "public",
    "description": "Unsubscribe to trajectory channels.",
    "lineNumber": 527,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "subscribeDeletedVehicles",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeDeletedVehicles",
    "access": "public",
    "description": "Subscribe to deleted_vhicles channel.",
    "lineNumber": 538,
    "params": [
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      },
      {
        "nullable": null,
        "types": [
          "function(response: { content: Vehicle })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "quiet",
        "description": "If true, the subscription will not send GET and SUB requests to the websocket."
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "unsubscribeDeletedVehicles",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeDeletedVehicles",
    "access": "public",
    "description": "Unsubscribe to deleted_vhicles channels.",
    "lineNumber": 552,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "getFullTrajectory",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getFullTrajectory",
    "access": "public",
    "description": "Get a full trajectory of a vehicule .",
    "lineNumber": 564,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "generalizationLevel",
        "description": "The generalization level to request. Can be one of 5 (more generalized), 10, 30, 100, undefined (less generalized)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FullTrajectory>"
      ],
      "spread": false,
      "description": "Return a full trajectory."
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "getFullTrajectories",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getFullTrajectories",
    "access": "public",
    "description": "Get full trajectories of a vehicules .",
    "lineNumber": 595,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "ids",
        "description": "List of vehicles ids."
      },
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "generalizationLevel",
        "description": "The generalization level to request. Can be one of '', 'gen5', 'gen10', 'gen30', 'gen100'."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array<FullTrajectory>>"
      ],
      "spread": false,
      "description": "Return an array of full trajectories."
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "subscribeFullTrajectory",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeFullTrajectory",
    "access": "public",
    "description": "Subscribe to full_trajectory channel of a given vehicle.",
    "lineNumber": 608,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "TralisMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Tralis mode."
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "unsubscribeFullTrajectory",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeFullTrajectory",
    "access": "public",
    "description": "Unsubscribe from full_trajectory channel",
    "lineNumber": 630,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "getStopSequence",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getStopSequence",
    "access": "public",
    "description": "Get the list of stops for this vehicle.",
    "lineNumber": 640,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<StopSequence>"
      ],
      "spread": false,
      "description": "Returns a stop sequence object."
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "getStopSequences",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#getStopSequences",
    "access": "public",
    "description": "Get a list of stops for a list of vehicles.",
    "lineNumber": 671,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "ids",
        "description": "List of vehicles ids."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array<StopSequence>>"
      ],
      "spread": false,
      "description": "Return an array of stop sequences."
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "subscribeStopSequence",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeStopSequence",
    "access": "public",
    "description": "Subscribe to stopsequence channel of a given vehicle.",
    "lineNumber": 682,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function(stopSequence: StopSequence)"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "unsubscribeStopSequence",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeStopSequence",
    "access": "public",
    "description": "Unsubscribe from stopsequence channel",
    "lineNumber": 711,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "subscribeHealthCheck",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#subscribeHealthCheck",
    "access": "public",
    "description": "Subscribe to healthcheck channel.",
    "lineNumber": 719,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback when the subscribe to healthcheck channel succeeds."
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "unsubscribeHealthCheck",
    "memberof": "src/api/TralisAPI.js~TralisAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/api/TralisAPI.js~TralisAPI#unsubscribeHealthCheck",
    "access": "public",
    "description": "Unsubscribe to healthcheck channel.",
    "lineNumber": 727,
    "params": [],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/api/index.js",
    "content": "export { default as RoutingAPI } from './RoutingAPI';\nexport { default as StopsAPI } from './StopsAPI';\nexport { default as TralisAPI, TralisModes } from './TralisAPI';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/api/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/api/typedefs.js",
    "content": "/**\n * @typedef {Object} Departure\n * @property {number} time Timestamp in ms.\n * @property {boolean} no_stop_between\n * @property {number} train_number\n * @property {string[]} to\n * @property {number} ris_aimed_time Timestamp in ms.\n * @property {number} updated_at Timestamp in ms.\n * @property {boolean} new_to\n * @property {number} min_arrival_time Timestamp in ms.\n * @property {string[]} next_stoppoints List of next stops. Like value in at_station_ds100.\n * @property {number} ris_estimated_time Timestamp in ms.\n * @property {NetworkLine} line\n * @property {boolean} has_fzo if true this departure has realtime data.\n * @property {number} train_id\n * @property {string} platform\n * @property {?*} state\n * @property {number} fzo_estimated_time Timestamp in ms.\n * @property {?*} formation\n * @property {?*} no_stop_till\n * @property {number} train_type\n * @property {number} call_id\n * @property {string} created_at Timestamp in ms.\n * @property {string} at_station_ds100\n * @property {number} timediff Timestamp in ms.\n *\n */\n\n/**\n * @typedef {GeoJSONFeature} Station\n * @property {StationProperties} properties Returns the station's properties.\n * @property {GeoJSONPoint} geometry Returns a point.\n */\n\n/**\n * @typedef {Object} StationProperties\n * @property {Transfer[]} transfers\n * @property {boolean} elevatorOutOfOrder\n * @property {number} uic\n * @property {string} name\n * @property {NetworkLine[]} networkLines\n * @property {boolean} hasElevator\n * @property {boolean} hasZOB\n * @property {boolean} hasAccessibility\n * @property {string} type\n */\n\n/**\n * @typedef {Object} NetworkLine\n * @property {number} id Identifier of the line.\n * @property {string} color Color of the line (CSS color string).\n * @property {string} stroke Stroke color of the line (CSS color string).\n * @property {string} name Name of the line.\n * @property {string} text_color  Text color of the line  (CSS color string).\n */\n\n/**\n * @typedef {Object} Transfer\n * @property {string} mot Mode of transportation (ex: U-Bahn).\n * @property {string[]} lines Array of lines name (ex: [\"U4\", \"U5\"]).\n */\n\n/**\n * @typedef {GeoJSONFeature} StopSequence\n */\n\n/**\n * @typedef {GeoJSONFeature} TralisTrajectory\n */\n\n/**\n * @typedef {GeoJSONFeature} FullTrajectory\n */\n\n/**\n * @typedef {GeoJSONFeature} Vehicle\n */\n\n/**\n * @typedef {GeoJSONFeature} ExtraGeom\n */\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/api/typedefs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "typedef",
    "name": "Departure",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~Departure",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "no_stop_between",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_number",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ris_aimed_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "updated_at",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "new_to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min_arrival_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "next_stoppoints",
        "description": "List of next stops. Like value in at_station_ds100."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ris_estimated_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "NetworkLine"
        ],
        "spread": false,
        "optional": false,
        "name": "line",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "has_fzo",
        "description": "if true this departure has realtime data."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "platform",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fzo_estimated_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "formation",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "no_stop_till",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "call_id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "created_at",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "at_station_ds100",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timediff",
        "description": "Timestamp in ms."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Departure"
    }
  },
  {
    "__docId__": 141,
    "kind": "typedef",
    "name": "Station",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~Station",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "StationProperties"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Returns the station's properties."
      },
      {
        "nullable": null,
        "types": [
          "GeoJSONPoint"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "Returns a point."
      }
    ],
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "Station"
    }
  },
  {
    "__docId__": 142,
    "kind": "typedef",
    "name": "StationProperties",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~StationProperties",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Transfer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "transfers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "elevatorOutOfOrder",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "uic",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NetworkLine[]"
        ],
        "spread": false,
        "optional": false,
        "name": "networkLines",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasElevator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasZOB",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasAccessibility",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StationProperties"
    }
  },
  {
    "__docId__": 143,
    "kind": "typedef",
    "name": "NetworkLine",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~NetworkLine",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the line."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Color of the line (CSS color string)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stroke",
        "description": "Stroke color of the line (CSS color string)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the line."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text_color",
        "description": "Text color of the line  (CSS color string)."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "NetworkLine"
    }
  },
  {
    "__docId__": 144,
    "kind": "typedef",
    "name": "Transfer",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~Transfer",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mot",
        "description": "Mode of transportation (ex: U-Bahn)."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "lines",
        "description": "Array of lines name (ex: [\"U4\", \"U5\"])."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Transfer"
    }
  },
  {
    "__docId__": 145,
    "kind": "typedef",
    "name": "StopSequence",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~StopSequence",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "StopSequence"
    }
  },
  {
    "__docId__": 146,
    "kind": "typedef",
    "name": "TralisTrajectory",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~TralisTrajectory",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "TralisTrajectory"
    }
  },
  {
    "__docId__": 147,
    "kind": "typedef",
    "name": "FullTrajectory",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~FullTrajectory",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "FullTrajectory"
    }
  },
  {
    "__docId__": 148,
    "kind": "typedef",
    "name": "Vehicle",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~Vehicle",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "Vehicle"
    }
  },
  {
    "__docId__": 149,
    "kind": "typedef",
    "name": "ExtraGeom",
    "memberof": "src/api/typedefs.js",
    "static": true,
    "longname": "src/api/typedefs.js~ExtraGeom",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "ExtraGeom"
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/common/Tracker.js",
    "content": "/* eslint-disable no-param-reassign */\nimport { compose, apply, create } from 'ol/transform';\nimport getVehiclePosition from './utils/getVehiclePosition';\n\n/**\n * Tracker. This class stores and allows to draw trajectories on a canvas.\n * @class\n * @param {Object} options\n * @private\n */\nexport default class Tracker {\n  /**\n   * @private\n   */\n  constructor(options) {\n    /**\n     * Function use to style the features displayed.\n     * @type {function}\n     */\n    this.style = options.style;\n\n    // we draw directly on the canvas since openlayers is too slow.\n    /**\n     * HTML <canvas> element.\n     * @type {Canvas}\n     */\n    this.canvas = options.canvas || document.createElement('canvas');\n  }\n\n  /**\n   * Draw all the trajectories available to the canvas.\n   * @param {ViewState} trajectories An array of trajectories.\n   * @param {ViewState} viewState The view state of the map.\n   * @param {boolean} options.hoverVehicleId The id of the vehicle to highlight.\n   * @param {boolean} options.selectedVehicleId The id of the vehicle to select.\n   * @param {boolean} options.noInterpolate If true trajectories are not interpolated but\n   *   drawn at the last known coordinate. Use this for performance optimization\n   *   during map navigation.\n   * @private\n   */\n  renderTrajectories(trajectories, viewState, options) {\n    const {\n      time = Date.now(),\n      size = [],\n      center,\n      resolution,\n      rotation = 0,\n      pixelRatio,\n    } = viewState;\n    const {\n      noInterpolate = false,\n      hoverVehicleId,\n      selectedVehicleId,\n    } = options;\n\n    const { canvas } = this;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    const [width, height] = size;\n    if (\n      width &&\n      height &&\n      (canvas.width !== width || canvas.height !== height)\n    ) {\n      [canvas.width, canvas.height] = [width * pixelRatio, height * pixelRatio];\n    }\n\n    const coordinateToPixelTransform = compose(\n      create(),\n      size[0] / 2,\n      size[1] / 2,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n\n    // Offscreen canvas has not style attribute\n    if (canvas.style) {\n      canvas.style.width = `${canvas.width / pixelRatio}px`;\n      canvas.style.height = `${canvas.height / pixelRatio}px`;\n    }\n\n    let hoverVehicleImg;\n    let hoverVehiclePx;\n    let hoverVehicleWidth;\n    let hoverVehicleHeight;\n    let selectedVehicleImg;\n    let selectedVehiclePx;\n    let selectedVehicleWidth;\n    let selectedVehicleHeight;\n    let nbRendered = 0;\n\n    for (let i = trajectories.length - 1; i >= 0; i -= 1) {\n      const trajectory = trajectories[i];\n\n      // We simplify the trajectory object\n      const { train_id: id, timeOffset } = trajectory.properties;\n      // We set the rotation and the timeFraction of the trajectory (used by tralis).\n      // if rotation === null that seems there is no rotation available.\n      const { coord, rotation: rotationIcon } = getVehiclePosition(\n        time - (timeOffset || 0),\n        trajectory,\n        noInterpolate,\n      );\n\n      // We store  the current vehicle position to the trajectory.\n      trajectories[i].properties.coordinate = coord;\n      trajectories[i].properties.rotation = rotationIcon;\n\n      if (!coord) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      let px = apply(coordinateToPixelTransform, [...coord]);\n      if (!px) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      px = px.map((p) => p * pixelRatio);\n\n      if (\n        px[0] < 0 ||\n        px[0] > canvas.width ||\n        px[1] < 0 ||\n        px[1] > canvas.height\n      ) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      const vehicleImg = this.style(trajectory, viewState, options);\n      if (!vehicleImg) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      nbRendered += 1;\n\n      const imgWidth = vehicleImg.width;\n      const imgHeight = vehicleImg.height;\n\n      if (hoverVehicleId !== id && selectedVehicleId !== id) {\n        context.drawImage(\n          vehicleImg,\n          px[0] - imgWidth / 2,\n          px[1] - imgHeight / 2,\n          imgWidth,\n          imgHeight,\n        );\n      }\n\n      if (hoverVehicleId && hoverVehicleId === id) {\n        // Store the canvas to draw it at the end\n        hoverVehicleImg = vehicleImg;\n        hoverVehiclePx = px;\n        hoverVehicleWidth = imgWidth;\n        hoverVehicleHeight = imgHeight;\n      }\n\n      if (selectedVehicleId && selectedVehicleId === id) {\n        // Store the canvas to draw it at the end\n        selectedVehicleImg = vehicleImg;\n        selectedVehiclePx = px;\n        selectedVehicleWidth = imgWidth;\n        selectedVehicleHeight = imgHeight;\n      }\n    }\n\n    if (selectedVehicleImg) {\n      context.drawImage(\n        selectedVehicleImg,\n        selectedVehiclePx[0] - selectedVehicleWidth / 2,\n        selectedVehiclePx[1] - selectedVehicleHeight / 2,\n        selectedVehicleWidth,\n        selectedVehicleHeight,\n      );\n    }\n\n    if (hoverVehicleImg) {\n      context.drawImage(\n        hoverVehicleImg,\n        hoverVehiclePx[0] - hoverVehicleWidth / 2,\n        hoverVehiclePx[1] - hoverVehicleHeight / 2,\n        hoverVehicleWidth,\n        hoverVehicleHeight,\n      );\n    }\n    return {\n      nbTrajectoriesRendered: nbRendered,\n    };\n  }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/Tracker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "Tracker",
    "memberof": "src/common/Tracker.js",
    "static": true,
    "longname": "src/common/Tracker.js~Tracker",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/Tracker.js",
    "importStyle": "Tracker",
    "description": "Tracker. This class stores and allows to draw trajectories on a canvas.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/common/Tracker.js~Tracker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/Tracker.js~Tracker#constructor",
    "access": "private",
    "description": "",
    "lineNumber": 15
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "style",
    "memberof": "src/common/Tracker.js~Tracker",
    "static": false,
    "longname": "src/common/Tracker.js~Tracker#style",
    "access": "public",
    "description": "Function use to style the features displayed.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "canvas",
    "memberof": "src/common/Tracker.js~Tracker",
    "static": false,
    "longname": "src/common/Tracker.js~Tracker#canvas",
    "access": "public",
    "description": "HTML <canvas> element.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Canvas"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "src/common/Tracker.js~Tracker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/Tracker.js~Tracker#renderTrajectories",
    "access": "private",
    "description": "Draw all the trajectories available to the canvas.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "ViewState"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectories",
        "description": "An array of trajectories."
      },
      {
        "nullable": null,
        "types": [
          "ViewState"
        ],
        "spread": false,
        "optional": false,
        "name": "viewState",
        "description": "The view state of the map."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.hoverVehicleId",
        "description": "The id of the vehicle to highlight."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.selectedVehicleId",
        "description": "The id of the vehicle to select."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.noInterpolate",
        "description": "If true trajectories are not interpolated but\n  drawn at the last known coordinate. Use this for performance optimization\n  during map navigation."
      }
    ],
    "return": {
      "types": [
        "{\"nbTrajectoriesRendered\": *}"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/common/api/HttpAPI.js",
    "content": "import qs from 'query-string';\nimport BaseObject from 'ol/Object';\n\n/**\n * Common class to access to a geOps api.\n *\n * @example\n * import { API } from 'mobility-toolbox-js/api';\n *\n * const api = new HttpApi({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey]\n * });\n *\n * @classproperty {string} url Url of the service.\n * @classproperty {string} apiKey Api key to access the service.\n */\nclass HttpApi extends BaseObject {\n  constructor(options = {}) {\n    super();\n    /** @ignore */\n    this.url = options.url;\n\n    /** @ignore */\n    this.apiKey = options.apiKey;\n  }\n\n  /**\n   * Append the apiKey before sending the request.\n   * @ignore\n   */\n  fetch(path, params, config) {\n    // Clean requets parameters, removing undefined and null values.\n    const urlParams = { ...(params || {}), key: this.apiKey };\n    const clone = { ...urlParams };\n    Object.keys(urlParams).forEach(\n      (key) =>\n        (clone[key] === undefined || clone[key] === null) && delete clone[key],\n    );\n    if (!this.apiKey) {\n      // eslint-disable-next-line no-console\n      return Promise.reject(\n        new Error(`No apiKey defined for request to ${this.url}`),\n      );\n    }\n    return fetch(\n      `${this.url}${path || ''}?${qs.stringify(clone)}`,\n      config,\n    ).then((response) => {\n      try {\n        return response.json().then((data) => {\n          if (data.error) {\n            throw new Error(data.error);\n          }\n          return data;\n        });\n      } catch (err) {\n        return Promise.reject(new Error(err));\n      }\n    });\n  }\n}\n\nexport default HttpApi;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/api/HttpAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "HttpApi",
    "memberof": "src/common/api/HttpAPI.js",
    "static": true,
    "longname": "src/common/api/HttpAPI.js~HttpApi",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/api/HttpAPI.js",
    "importStyle": "HttpApi",
    "description": "Common class to access to a geOps api.",
    "examples": [
      "import { API } from 'mobility-toolbox-js/api';\n\nconst api = new HttpApi({\n  url: [yourUrl],\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{string} url Url of the service."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} apiKey Api key to access the service."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Object~BaseObject"
    ]
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "url",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#url",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "apiKey",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#apiKey",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "fetch",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#fetch",
    "access": "public",
    "description": "Append the apiKey before sending the request.",
    "lineNumber": 32,
    "ignore": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/common/controls/Control.js",
    "content": "import BaseObject from 'ol/Object';\n\n/**\n * A class representing a control to display on map.\n *\n * @example\n * const control = new Control();\n *\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map which the control refers to.\n * @classproperty {boolean} active - Active the control.\n * @classproperty {HTMLElement} element - The HTML element used to render the control.\n * @classproperty {HTMLElement} target - The HTML element where to render the element property. Default is the map's element. Read only.\n */\nclass Control extends BaseObject {\n  /**\n   * Constructor\n   *\n   * @param {Object} [options] Control options.\n   * @param {boolean} [options.active = true] Whether the control is active or not.\n   * @param {HTMLElement} [options.element] The HTML element used to render the control.\n   * @param {HTMLElement} [options.target] The HTML element where to render the element property. Default is the map's element.\n   * @param {function} [options.render] Render function called whenever the control needs to be rerendered.\n   */\n  constructor(options = {}) {\n    super(options);\n    this.defineProperties(options);\n\n    const { active } = {\n      active: options.active !== false,\n      ...options,\n    };\n\n    /**\n     * @ignore\n     */\n    this.active = active;\n  }\n\n  /**\n   * Define control's properties.\n   *\n   * @private\n   */\n  defineProperties(options) {\n    const { target, element, render } = {\n      ...options,\n    };\n\n    Object.defineProperties(this, {\n      active: {\n        get: () => this.get('active'),\n        set: (newActive) => {\n          this.set('active', newActive);\n          if (newActive) {\n            this.activate();\n          } else {\n            this.deactivate();\n          }\n          this.render();\n        },\n      },\n      map: {\n        get: () => this.get('map'),\n        set: (map) => {\n          // Remove previous node.\n          if (this.map && this.element && this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n          }\n\n          // Clean listeners\n          this.deactivate();\n\n          this.set('map', map);\n\n          if (this.map) {\n            // Add new node\n            const targett =\n              this.target ||\n              (this.map.getTargetElement && this.map.getTargetElement()) ||\n              (this.map.getContainer && this.map.getContainer());\n\n            if (!this.element) {\n              this.createDefaultElement();\n            }\n\n            if (this.element) {\n              targett.appendChild(this.element);\n            }\n\n            // Add listeners\n            if (this.active) {\n              this.activate();\n            }\n          }\n          this.render();\n        },\n      },\n      target: {\n        value: target,\n      },\n      element: {\n        value: element,\n        writable: true,\n      },\n      render: {\n        /** @ignore */\n        value: render || this.render,\n        writable: true,\n      },\n    });\n  }\n\n  /**\n   * Attach the control to the map. Add events, html element ...\n   */\n  attachToMap(map) {\n    this.map = map;\n  }\n\n  /**\n   * Detach the control From the map. Remove events, html element ..\n   */\n  detachFromMap() {\n    this.map = null;\n  }\n\n  /**\n   * Add listeners then renders the control.\n   * To be defined in inherited classes.\n   */\n  activate() {\n    this.deactivate();\n  }\n\n  /**\n   * Remove listeners added by activate() function then renders the control.\n   * To be defined in inherited classes.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  deactivate() {}\n\n  /**\n   * The default render function. It renders content in the HTML element.\n   * To be defined in inherited classes.\n   *\n   * @private\n   */\n  render() {}\n\n  /**\n   * The default element to display if this.element is not defined.\n   * To be defined in inherited classes.\n   *\n   * @private\n   */\n  // eslint-disable-next-line class-methods-use-this\n  createDefaultElement() {}\n}\n\nexport default Control;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/controls/Control.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "Control",
    "memberof": "src/common/controls/Control.js",
    "static": true,
    "longname": "src/common/controls/Control.js~Control",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/controls/Control.js",
    "importStyle": "Control",
    "description": "A class representing a control to display on map.",
    "examples": [
      "const control = new Control();"
    ],
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map|mapboxgl.Map} map - The map which the control refers to."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} active - Active the control."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{HTMLElement} element - The HTML element used to render the control."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{HTMLElement} target - The HTML element where to render the element property. Default is the map's element. Read only."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Object~BaseObject"
    ]
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Control options."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "options.active",
        "description": "Whether the control is active or not."
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "options.element",
        "description": "The HTML element used to render the control."
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "options.target",
        "description": "The HTML element where to render the element property. Default is the map's element."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.render",
        "description": "Render function called whenever the control needs to be rerendered."
      }
    ]
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "active",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#active",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#defineProperties",
    "access": "private",
    "description": "Define control's properties.",
    "lineNumber": 44,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#attachToMap",
    "access": "public",
    "description": "Attach the control to the map. Add events, html element ...",
    "lineNumber": 116,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "map",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#map",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#detachFromMap",
    "access": "public",
    "description": "Detach the control From the map. Remove events, html element ..",
    "lineNumber": 123,
    "params": [],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "activate",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#activate",
    "access": "public",
    "description": "Add listeners then renders the control.\nTo be defined in inherited classes.",
    "lineNumber": 131,
    "params": [],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "deactivate",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#deactivate",
    "access": "public",
    "description": "Remove listeners added by activate() function then renders the control.\nTo be defined in inherited classes.",
    "lineNumber": 140,
    "params": [],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "render",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#render",
    "access": "private",
    "description": "The default render function. It renders content in the HTML element.\nTo be defined in inherited classes.",
    "lineNumber": 148,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "createDefaultElement",
    "memberof": "src/common/controls/Control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/controls/Control.js~Control#createDefaultElement",
    "access": "private",
    "description": "The default element to display if this.element is not defined.\nTo be defined in inherited classes.",
    "lineNumber": 157,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "src/common/index.js",
    "content": "export { default as Tracker } from './Tracker';\nexport * as trackerConfig from './trackerConfig';\n\nexport * from './utils';\nexport * from './styles';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "src/common/layers/Layer.js",
    "content": "import Observable from 'ol/Observable';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * A class representing a layer to display on map.\n *\n * @example\n * const layer = new Layer({\n *   name: 'myLayer',\n * });\n *\n * @classproperty {string} name - Name of the layer\n * @classproperty {string} key - Identifier of the layer. Must be unique.\n * @classproperty {string[]} copyrights - Array of copyrights.\n * @classproperty {boolean} isBaseLayer - Define if the layer is a base layer. Read-only.\n * @classproperty {boolean} isQueryable - Define if the layer can be queried. If false, it will set isHoverActive and isClickActive to false. Read-only.\n * @classproperty {boolean} isClickActive - If true feature information will be queried on user click event. See inherited layers for more informations. Read-only.\n * @classproperty {boolean} isHoverActive - If true feature information will be queried on pointer move event. See inherited layers for more informations. Read-only.\n * @classproperty {boolean} isMobilityLayer - Custom property for duck typing since `instanceof` is not working when the instance was created on different bundles. Read-only.\n * @classproperty {Layer[]} children - List of children.\n * @classproperty {boolean} visible - Define if the layer is visible or not.\n * @classproperty {number} hitTolerance - Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.\n * @classproperty {Object} properties - Custom properties.\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map where the layer is displayed.\n */\nexport default class Layer extends Observable {\n  /**\n   * Constructor\n   *\n   * @param {Object} options\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string[]} [options.copyrights=undefined] Array of copyrights.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is visible on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] Define if the layer can be queried. If false, it will also set isHoverActive and isClickActive to false. Read-only.\n   * @param {boolean} [options.isClickActive=true] If true feature information will be queried on click event. See inherited layers for more informations. Read-only.\n   * @param {boolean} [options.isHoverActive=true] If true feature information will be queried on pointer move event. See inherited layers for more informations. Read-only.\n   * @param {number} [options.hitTolerance=5] Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.\n   */\n  constructor(options = {}) {\n    super();\n    this.defineProperties(options);\n\n    // Add mouse event callbacks\n    const { onClick, onHover } = options;\n\n    if (onHover) {\n      this.onHover(onHover);\n    }\n\n    if (onClick) {\n      this.onClick(onClick);\n    }\n\n    // This if is very important if you remove it you break the copyright control.\n    if (options.copyrights) {\n      /** @ignore */\n      this.copyrights = options.copyrights;\n    }\n\n    /** @ignore */\n    this.onUserClickCallback = this.onUserClickCallback.bind(this);\n\n    /** @ignore */\n    this.onUserMoveCallback = this.onUserMoveCallback.bind(this);\n  }\n\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    const {\n      name,\n      key,\n      children,\n      visible,\n      properties,\n      isBaseLayer,\n      isQueryable,\n      isClickActive,\n      isHoverActive,\n      hitTolerance,\n    } = {\n      isQueryable: true,\n      isClickActive: true,\n      isHoverActive: true,\n      ...options,\n    };\n    const uid = uuid();\n    const dfltName = name || uid;\n    Object.defineProperties(this, {\n      // options is used for clone function.\n      options: {\n        value: options,\n      },\n      name: {\n        value: dfltName,\n      },\n      key: {\n        value: key || dfltName.toLowerCase(),\n      },\n      isBaseLayer: {\n        value: !!isBaseLayer,\n      },\n      isQueryable: {\n        value: !!isQueryable,\n        writable: true,\n      },\n      isClickActive: {\n        value: !!isQueryable && !!isClickActive,\n        writable: true,\n      },\n      isHoverActive: {\n        value: !!isQueryable && !!isHoverActive,\n        writable: true,\n      },\n      hitTolerance: {\n        value: hitTolerance || 5,\n        writable: true,\n      },\n      // Custom property for duck typing since `instanceof` is not working\n      // when the instance was created on different bundles.\n      isMobilityLayer: {\n        value: true,\n      },\n      children: {\n        value: children || [],\n        writable: true,\n      },\n      copyrights: {\n        get: () => this.get('copyrights'),\n        set: (newCopyrights) => {\n          const arrValue = !Array.isArray(newCopyrights)\n            ? [newCopyrights]\n            : newCopyrights;\n          this.set('copyrights', arrValue);\n        },\n      },\n      visible: {\n        value: visible === undefined ? true : visible,\n        writable: true,\n      },\n      properties: {\n        value: { ...(properties || {}) },\n      },\n      map: {\n        writable: true,\n      },\n      /**\n       * Callback function when a user click on a feature.\n       */\n      clickCallbacks: {\n        value: [],\n      },\n      /**\n       * Callback function when a user hover on a feature.\n       */\n      hoverCallbacks: {\n        value: [],\n      },\n    });\n  }\n\n  /**\n   * Initialize the layer with the map passed in parameters.\n   *\n   * @param {ol/Map~Map|mapboxgl.Map} map A map.\n   */\n  attachToMap(map) {\n    this.detachFromMap();\n    /** @ignore */\n    this.map = map;\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  // eslint-disable-next-line class-methods-use-this\n  detachFromMap() {}\n\n  /**\n   * Get a layer property.\n   *\n   * @param {string} name Property name.\n   * @return {property} Property\n   */\n  get(name) {\n    return this.properties[name];\n  }\n\n  /**\n   * Set a layer property.\n   *\n   * @param {string} name Property name.\n   * @param {string} value Value.\n   */\n  set(name, value) {\n    if (value !== this.properties[name]) {\n      this.properties[name] = value;\n      this.dispatchEvent({\n        type: `change:${name}`,\n        target: this,\n      });\n    }\n  }\n\n  /**\n   * Change the visibility of the layer\n   *\n   * @param {boolean} visible Defines the visibility of the layer\n   * @param {boolean} [stopPropagationDown]\n   * @param {boolean} [stopPropagationUp]\n   * @param {boolean} [stopPropagationSiblings]\n   */\n  setVisible(\n    visible,\n    stopPropagationDown = false,\n    stopPropagationUp = false,\n    stopPropagationSiblings = false,\n  ) {\n    if (visible === this.visible) {\n      return;\n    }\n\n    /** @ignore */\n    this.visible = visible;\n\n    this.dispatchEvent({\n      type: 'change:visible',\n      target: this,\n      stopPropagationDown,\n      stopPropagationUp,\n      stopPropagationSiblings,\n    });\n  }\n\n  /**\n   * Returns an array with visible child layers\n   *\n   * @return {Layer[]} Visible children\n   */\n  getVisibleChildren() {\n    return this.children.filter((child) => child.visible);\n  }\n\n  /**\n   * Checks whether the layer has child layers with visible set to True\n   *\n   * @return {boolean} True if the layer has visible child layers\n   * @deprecated\n   */\n  hasVisibleChildren() {\n    return !!this.children.find((child) => child.visible === true);\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * This function must be implemented by inheriting layers.\n   *\n   * @param {ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {Object} options Some options. See child classes to see which are supported.\n   * @return {Promise<FeatureInfo>} An empty response.\n   */\n  // eslint-disable-next-line no-unused-vars\n  getFeatureInfoAtCoordinate(coordinate, options) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'getFeatureInfoAtCoordinate must be implemented by inheriting layers',\n      this.key,\n    );\n\n    // No response so we modify the properties accordingly, to avoid spaming the console.\n    this.isQueryable = false;\n    // this.isClickActive = false;\n    // this.isHoverActive = false;\n\n    // This layer returns no feature info.\n    // The function is implemented by inheriting layers.\n    return Promise.resolve({\n      layer: this,\n      features: [],\n      coordinate,\n    });\n  }\n\n  /**\n   * Listens to click events on the layer.\n   * @param {function} callback Callback function, called with the clicked\n   *   features,\n   *   the layer instance and the click event.\n   */\n  onClick(callback) {\n    if (typeof callback === 'function') {\n      if (!this.clickCallbacks.includes(callback)) {\n        this.clickCallbacks.push(callback);\n      }\n    } else {\n      throw new Error('onClick callback must be of type function:', callback);\n    }\n  }\n\n  /**\n   * Unlistens to click events on the layer.\n   * @param {function} callback Callback function, called with the clicked\n   *   features,\n   *   the layer instance and the click event.\n   */\n  unClick(callback) {\n    if (typeof callback === 'function') {\n      const idx = this.clickCallbacks.indexOf(callback);\n      if (idx > -1) {\n        this.clickCallbacks.splice(idx, 1);\n      }\n    }\n  }\n\n  /**\n   * Function triggered when the user click the map.\n   * @private\n   */\n  onUserClickCallback(evt) {\n    const emptyFeatureInfo = {\n      features: [],\n      layer: this,\n      coordinate: evt.coordinate,\n      event: evt,\n    };\n\n    if (!this.isClickActive || !this.clickCallbacks.length) {\n      return Promise.resolve(emptyFeatureInfo);\n    }\n\n    return this.getFeatureInfoAtCoordinate(evt.coordinate)\n      .then((featureInfo) => {\n        const { features, layer, coordinate } = featureInfo;\n        this.clickCallbacks.forEach((callback) =>\n          callback(features, layer, coordinate),\n        );\n        return featureInfo;\n      })\n      .catch(() => emptyFeatureInfo);\n  }\n\n  /**\n   * Listens to hover events on the layer.\n   * @param {function} callback Callback function, called with the clicked\n   *   features, the layer instance and the click event.\n   */\n  onHover(callback) {\n    if (typeof callback === 'function') {\n      if (!this.hoverCallbacks.includes(callback)) {\n        this.hoverCallbacks.push(callback);\n      }\n    } else {\n      throw new Error('callback must be of type function.');\n    }\n  }\n\n  /**\n   * Unlistens to hover events on the layer.\n   * @param {function} callback Callback function, called with the hovered\n   *   features, the layer instance and the click event.\n   */\n  unHover(callback) {\n    if (typeof callback === 'function') {\n      const idx = this.hoverCallbacks.indexOf(callback);\n      if (idx > -1) {\n        this.hoverCallbacks.splice(idx, 1);\n      }\n    }\n  }\n\n  /**\n   * Function triggered when the user move the cursor.\n   * @private\n   */\n  onUserMoveCallback(evt) {\n    const emptyFeatureInfo = {\n      features: [],\n      layer: this,\n      coordinate: evt.coordinate,\n      event: evt,\n    };\n\n    if (!this.isHoverActive || !this.hoverCallbacks.length) {\n      return Promise.resolve(emptyFeatureInfo);\n    }\n\n    return this.getFeatureInfoAtCoordinate(evt.coordinate)\n      .then((featureInfo) => {\n        const { features, layer, coordinate } = featureInfo;\n        this.hoverCallbacks.forEach((callback) =>\n          callback(features, layer, coordinate),\n        );\n        return featureInfo;\n      })\n      .catch(() => emptyFeatureInfo);\n  }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/layers/Layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "class",
    "name": "Layer",
    "memberof": "src/common/layers/Layer.js",
    "static": true,
    "longname": "src/common/layers/Layer.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/layers/Layer.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on map.",
    "examples": [
      "const layer = new Layer({\n  name: 'myLayer',\n});"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{string} name - Name of the layer"
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} key - Identifier of the layer. Must be unique."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string[]} copyrights - Array of copyrights."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} isBaseLayer - Define if the layer is a base layer. Read-only."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} isQueryable - Define if the layer can be queried. If false, it will set isHoverActive and isClickActive to false. Read-only."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} isClickActive - If true feature information will be queried on user click event. See inherited layers for more informations. Read-only."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} isHoverActive - If true feature information will be queried on pointer move event. See inherited layers for more informations. Read-only."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} isMobilityLayer - Custom property for duck typing since `instanceof` is not working when the instance was created on different bundles. Read-only."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{Layer[]} children - List of children."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} visible - Define if the layer is visible or not."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{number} hitTolerance - Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{Object} properties - Custom properties."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map|mapboxgl.Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Observable~Observable"
    ]
  },
  {
    "__docId__": 178,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid()",
        "defaultRaw": "uuid()",
        "name": "options.name",
        "description": "Layer name. Default use a generated uuid."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid().toLowerCase()",
        "defaultRaw": "uuid().toLowerCase()",
        "name": "options.key",
        "description": "Layer key, will use options.name.toLowerCase() if not specified."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "options.copyrights",
        "description": "Array of copyrights."
      },
      {
        "nullable": null,
        "types": [
          "Array<Layer>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.children",
        "description": "Sublayers."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.properties",
        "description": "Application-specific layer properties."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.visible",
        "description": "If true this layer is visible on the map."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.isBaseLayer",
        "description": "If true this layer is a baseLayer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.isQueryable",
        "description": "Define if the layer can be queried. If false, it will also set isHoverActive and isClickActive to false. Read-only."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.isClickActive",
        "description": "If true feature information will be queried on click event. See inherited layers for more informations. Read-only."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.isHoverActive",
        "description": "If true feature information will be queried on pointer move event. See inherited layers for more informations. Read-only."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "options.hitTolerance",
        "description": "Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features."
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "copyrights",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#copyrights",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#defineProperties",
    "access": "public",
    "description": "Define layer's properties.",
    "lineNumber": 76,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer with the map passed in parameters.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map",
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A map."
      }
    ],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "map",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#map",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 184,
    "params": [],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "get",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#get",
    "access": "public",
    "description": "Get a layer property.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Property name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "property"
      ],
      "spread": false,
      "description": "Property"
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "set",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#set",
    "access": "public",
    "description": "Set a layer property.",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Property name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Value."
      }
    ],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "setVisible",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#setVisible",
    "access": "public",
    "description": "Change the visibility of the layer",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "Defines the visibility of the layer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationDown",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationUp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationSiblings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "visible",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#visible",
    "access": "public",
    "description": null,
    "lineNumber": 231,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "getVisibleChildren",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#getVisibleChildren",
    "access": "public",
    "description": "Returns an array with visible child layers",
    "lineNumber": 247,
    "return": {
      "nullable": null,
      "types": [
        "Layer[]"
      ],
      "spread": false,
      "description": "Visible children"
    },
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "hasVisibleChildren",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#hasVisibleChildren",
    "access": "public",
    "description": "Checks whether the layer has child layers with visible set to True",
    "lineNumber": 257,
    "deprecated": true,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the layer has visible child layers"
    },
    "params": []
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.\nThis function must be implemented by inheriting layers.",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options. See child classes to see which are supported."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "An empty response."
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "isQueryable",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isQueryable",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "onClick",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#onClick",
    "access": "public",
    "description": "Listens to click events on the layer.",
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function, called with the clicked\n  features,\n  the layer instance and the click event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "unClick",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#unClick",
    "access": "public",
    "description": "Unlistens to click events on the layer.",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function, called with the clicked\n  features,\n  the layer instance and the click event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "onUserClickCallback",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#onUserClickCallback",
    "access": "private",
    "description": "Function triggered when the user click the map.",
    "lineNumber": 326,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "onHover",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#onHover",
    "access": "public",
    "description": "Listens to hover events on the layer.",
    "lineNumber": 354,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function, called with the clicked\n  features, the layer instance and the click event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "unHover",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#unHover",
    "access": "public",
    "description": "Unlistens to hover events on the layer.",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function, called with the hovered\n  features, the layer instance and the click event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "onUserMoveCallback",
    "memberof": "src/common/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#onUserMoveCallback",
    "access": "private",
    "description": "Function triggered when the user move the cursor.",
    "lineNumber": 382,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/common/mixins/CopyrightMixin.js",
    "content": "/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\n\n/**\n * Copyright control interface.\n *\n */\nexport class CopyrightInterface {\n  /**\n   * Return an array of layer's copyright.\n   *\n   * @return {String[]} A list of copyrights to render.\n   */\n  getCopyrights() {}\n}\n\n/**\n * Mixin for CopyrightInterface.\n *\n * @param {Class} Base  A class to extend with {CopyrightInterface} functionnalities.\n * @return {Class}  A class that implements <CopyrightInterface> class and extends Base;\n * @private\n */\nconst CopyrightMixin = (Base) =>\n  class extends Base {\n    render() {\n      if (!this.element) {\n        return;\n      }\n      this.element.innerHTML = this.active\n        ? this.getCopyrights().join(' | ')\n        : '';\n    }\n\n    createDefaultElement() {\n      this.element = document.createElement('div');\n      this.element.id = 'mbt-copyright';\n      Object.assign(this.element.style, {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        fontSize: '.8rem',\n        padding: '0 10px',\n      });\n    }\n  };\n\nexport default CopyrightMixin;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/mixins/CopyrightMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "class",
    "name": "CopyrightInterface",
    "memberof": "src/common/mixins/CopyrightMixin.js",
    "static": true,
    "longname": "src/common/mixins/CopyrightMixin.js~CopyrightInterface",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/mixins/CopyrightMixin.js",
    "importStyle": "{CopyrightInterface}",
    "description": "Copyright control interface.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "src/common/mixins/CopyrightMixin.js~CopyrightInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/mixins/CopyrightMixin.js~CopyrightInterface#getCopyrights",
    "access": "public",
    "description": "Return an array of layer's copyright.",
    "lineNumber": 14,
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": "A list of copyrights to render."
    },
    "params": []
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "CopyrightMixin",
    "memberof": "src/common/mixins/CopyrightMixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/mixins/CopyrightMixin.js~CopyrightMixin",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/mixins/CopyrightMixin.js",
    "importStyle": "CopyrightMixin",
    "description": "Mixin for CopyrightInterface.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "Base",
        "description": "A class to extend with {CopyrightInterface} functionnalities."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "A class that implements <CopyrightInterface> class and extends Base;"
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/common/styles/index.js",
    "content": "export { default as trackerDefaultStyle } from './trackerDefaultStyle';\nexport { default as trackerDelayStyle } from './trackerDelayStyle';\nexport { default as trackerSimpleStyle } from './trackerSimpleStyle';\nexport * from './trackerDefaultStyle';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/styles/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "file",
    "name": "src/common/styles/trackerDefaultStyle.js",
    "content": "import {\n  getRadius,\n  getBgColor,\n  getDelayColor,\n  getDelayText,\n  getTextColor,\n  getTextSize,\n} from '../trackerConfig';\n\nconst createCanvas = (width, height) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\n// Draw circle delay background\nconst cacheDelayBg = {};\nexport const getDelayBgCanvas = (origin, radius, color) => {\n  const key = `${origin}, ${radius}, ${color}`;\n  if (!cacheDelayBg[key]) {\n    const canvas = createCanvas(origin * 2, origin * 2);\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.arc(origin, origin, radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = color;\n    ctx.filter = 'blur(1px)';\n    ctx.fill();\n    cacheDelayBg[key] = canvas;\n  }\n  return cacheDelayBg[key];\n};\n\n// Draw delay text\nconst cacheDelayText = {};\nexport const getDelayTextCanvas = (\n  width,\n  text,\n  fontSize,\n  font,\n  delayColor,\n  delayOutlineColor,\n  pixelRatio,\n) => {\n  const key = `${width}, ${text}, ${font}, ${delayColor}, ${delayOutlineColor}, ${pixelRatio}`;\n  if (!cacheDelayText[key]) {\n    const canvas = createCanvas(width, fontSize + 8 * pixelRatio);\n    const ctx = canvas.getContext('2d');\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.font = font;\n    ctx.fillStyle = delayColor;\n    ctx.strokeStyle = delayOutlineColor;\n    ctx.lineWidth = 1.5 * pixelRatio;\n    const delayText = text;\n    ctx.strokeText(delayText, 0, fontSize);\n    ctx.fillText(delayText, 0, fontSize);\n    cacheDelayText[key] = canvas;\n  }\n  return cacheDelayText[key];\n};\n\n// Draw colored circle with black border\nconst cacheCircle = {};\nexport const getCircleCanvas = (\n  origin,\n  radius,\n  color,\n  hasStroke,\n  hasDash,\n  pixelRatio,\n) => {\n  const key = `${origin}, ${radius}, ${color}, ${hasStroke},  ${hasDash}, ${pixelRatio}`;\n  if (!cacheCircle[key]) {\n    const canvas = createCanvas(origin * 2, origin * 2);\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = color;\n\n    if (hasStroke) {\n      ctx.lineWidth = 1 * pixelRatio;\n      ctx.strokeStyle = '#000000';\n    }\n\n    ctx.beginPath();\n    ctx.arc(origin, origin, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n\n    if (hasDash) {\n      ctx.setLineDash([5, 3]);\n    }\n\n    if (hasStroke) {\n      ctx.stroke();\n    }\n\n    cacheCircle[key] = canvas;\n  }\n  return cacheCircle[key];\n};\n\n// Draw text in the circle\nconst cacheText = {};\nexport const getTextCanvas = (\n  text,\n  origin,\n  textSize,\n  fillColor,\n  strokeColor,\n  hasStroke,\n  pixelRatio,\n) => {\n  const key = `${text}, ${origin}, ${textSize}, ${fillColor},${strokeColor}, ${hasStroke}, ${pixelRatio}`;\n  if (!cacheText[key]) {\n    const canvas = createCanvas(origin * 2, origin * 2);\n    const ctx = canvas.getContext('2d');\n\n    // Draw a stroke to the text only if a provider provides realtime but we don't use it.\n    if (hasStroke) {\n      ctx.save();\n      ctx.textBaseline = 'middle';\n      ctx.textAlign = 'center';\n      ctx.font = `bold ${textSize + 2}px Arial`;\n      ctx.strokeStyle = strokeColor;\n      ctx.strokeText(text, origin, origin);\n      ctx.restore();\n    }\n\n    // Draw a text\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.fillStyle = fillColor;\n    ctx.font = `bold ${textSize}px Arial`;\n    ctx.strokeStyle = strokeColor;\n    ctx.strokeText(text, origin, origin);\n    ctx.fillText(text, origin, origin);\n\n    cacheText[key] = canvas;\n  }\n  return cacheText[key];\n};\n\n/**\n * A tracker style that take in account the delay.\n *\n * @param {*} trajectory The trajectory to render.\n * @param {*} viewState The view state of the map.\n * @param {*} options Some options to change the rendering\n * @return a canvas\n */\nconst styleCache = {};\nconst style = (trajectory, viewState, options) => {\n  const {\n    hoverVehicleId,\n    selectedVehicleId,\n    useDelayStyle,\n    delayOutlineColor,\n    delayDisplay,\n  } = options;\n\n  const { zoom, pixelRatio } = viewState;\n  let { type, cancelled } = trajectory.properties;\n  const {\n    train_id: id,\n    line,\n    delay,\n    state,\n    operator_provides_realtime_journey: operatorProvidesRealtime,\n  } = trajectory.properties;\n  let { name, text_color: textColor, color } = line || {};\n\n  // In the future, the cancelled property will be removed we still managed it\n  // until the backend change is on prod.\n  cancelled = cancelled === true || state === 'JOURNEY_CANCELLED';\n\n  if (!type) {\n    type = 'Rail';\n  }\n\n  if (!name) {\n    name = 'I';\n  }\n\n  if (!textColor) {\n    textColor = '#000000';\n  }\n\n  if (color && color[0] !== '#') {\n    color = `#${color}`;\n  }\n\n  if (textColor[0] !== '#') {\n    textColor = `#${textColor}`;\n  }\n\n  const z = Math.min(Math.floor(zoom || 1), 16);\n  const hover = hoverVehicleId && hoverVehicleId === id;\n  const selected = selectedVehicleId && selectedVehicleId === id;\n\n  // Calcul the radius of the circle\n  let radius = getRadius(type, z) * pixelRatio;\n  const isDisplayStrokeAndDelay = radius >= 7 * pixelRatio;\n  if (hover || selected) {\n    radius = isDisplayStrokeAndDelay\n      ? radius + 5 * pixelRatio\n      : 14 * pixelRatio;\n  }\n  const mustDrawText = radius > 10 * pixelRatio;\n\n  // Optimize the cache key, very important in high zoom level\n  let key = `${radius}${type}${color}${hover}${selected}${cancelled}${delay}`;\n\n  if (useDelayStyle) {\n    key += `${operatorProvidesRealtime}`;\n  }\n\n  if (mustDrawText) {\n    key += `${name}${textColor}`;\n  }\n\n  if (!styleCache[key]) {\n    if (radius === 0) {\n      styleCache[key] = null;\n      return null;\n    }\n\n    const margin = 1 * pixelRatio;\n    const radiusDelay = radius + 2;\n    const markerSize = radius * 2;\n    const size = radiusDelay * 2 + margin * 2 + 100 * pixelRatio; // add space for delay information\n    const origin = size / 2;\n\n    // Create the canvas\n    const canvas = createCanvas(size, size);\n    const ctx = canvas.getContext('2d');\n\n    if (isDisplayStrokeAndDelay && delay !== null) {\n      // Draw circle delay background\n      const delayBg = getDelayBgCanvas(\n        origin,\n        radiusDelay,\n        getDelayColor(delay, cancelled),\n      );\n      ctx.drawImage(delayBg, 0, 0);\n    }\n\n    // Show delay if feature is hovered or if delay is above 5mins.\n    if (\n      isDisplayStrokeAndDelay &&\n      (hover || delay >= delayDisplay || cancelled)\n    ) {\n      // Draw delay text\n      const fontSize =\n        Math.max(\n          cancelled ? 19 : 14,\n          Math.min(cancelled ? 19 : 17, radius * 1.2),\n        ) * pixelRatio;\n      const text = getDelayText(delay, cancelled);\n\n      if (text) {\n        const textWidth = text.length * fontSize;\n        const delayText = getDelayTextCanvas(\n          textWidth,\n          text,\n          fontSize,\n          `bold ${fontSize}px arial, sans-serif`,\n          getDelayColor(delay, cancelled, true),\n          delayOutlineColor,\n          pixelRatio,\n        );\n        ctx.drawImage(\n          delayText,\n          origin + radiusDelay + margin,\n          origin - fontSize,\n        );\n      }\n    }\n\n    // Draw colored circle with black border\n    let circleFillColor;\n    if (useDelayStyle) {\n      circleFillColor = getDelayColor(delay, cancelled);\n    } else {\n      circleFillColor = color || getBgColor(type);\n    }\n\n    const hasStroke = isDisplayStrokeAndDelay || hover || selected;\n\n    const hasDash =\n      isDisplayStrokeAndDelay &&\n      useDelayStyle &&\n      delay === null &&\n      operatorProvidesRealtime === 'yes';\n\n    const circle = getCircleCanvas(\n      origin,\n      radius,\n      circleFillColor,\n      hasStroke,\n      hasDash,\n      pixelRatio,\n    );\n\n    ctx.drawImage(circle, 0, 0);\n\n    // Draw text in the circle\n    if (mustDrawText) {\n      const fontSize = Math.max(radius, 10);\n      const textSize = getTextSize(ctx, markerSize, name, fontSize);\n      const textColor2 = !useDelayStyle\n        ? textColor || getTextColor(type)\n        : '#000000';\n      const hasStroke2 =\n        useDelayStyle && delay === null && operatorProvidesRealtime === 'yes';\n\n      const text = getTextCanvas(\n        name,\n        origin,\n        textSize,\n        textColor2,\n        circleFillColor,\n        hasStroke2,\n        pixelRatio,\n      );\n\n      ctx.drawImage(text, 0, 0);\n    }\n\n    styleCache[key] = canvas;\n  }\n\n  return styleCache[key];\n};\nexport default style;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "createCanvas",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~createCanvas",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "width",
        "types": [
          "*"
        ]
      },
      {
        "name": "height",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "cacheDelayBg",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~cacheDelayBg",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "getDelayBgCanvas",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~getDelayBgCanvas",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": "{getDelayBgCanvas}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "cacheDelayText",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~cacheDelayText",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "getDelayTextCanvas",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~getDelayTextCanvas",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": "{getDelayTextCanvas}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "width",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "fontSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "font",
        "types": [
          "*"
        ]
      },
      {
        "name": "delayColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "delayOutlineColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "pixelRatio",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "cacheCircle",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~cacheCircle",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "getCircleCanvas",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~getCircleCanvas",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": "{getCircleCanvas}",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasStroke",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasDash",
        "types": [
          "*"
        ]
      },
      {
        "name": "pixelRatio",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "cacheText",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~cacheText",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "getTextCanvas",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~getTextCanvas",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": "{getTextCanvas}",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "textSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "fillColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "strokeColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasStroke",
        "types": [
          "*"
        ]
      },
      {
        "name": "pixelRatio",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "styleCache",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~styleCache",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": null,
    "description": "A tracker style that take in account the delay.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "The trajectory to render."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "viewState",
        "description": "The view state of the map."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options to change the rendering"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a canvas"
    },
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "style",
    "memberof": "src/common/styles/trackerDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDefaultStyle.js~style",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDefaultStyle.js",
    "importStyle": "style",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [
      {
        "name": "trajectory",
        "types": [
          "*"
        ]
      },
      {
        "name": "viewState",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "file",
    "name": "src/common/styles/trackerDelayStyle.js",
    "content": "import trackerDefaultStyle from './trackerDefaultStyle';\n\n/**\n * A tracker style that display the delay as backgroundColor.\n *\n * @param {*} trajectory The trajectory to render.\n * @param {*} viewState The view state of the map.\n * @param {*} options Some options to change the rendering\n * @return a canvas\n */\nconst style = (trajectory, viewState, options) => {\n  return trackerDefaultStyle(trajectory, viewState, {\n    ...options,\n    useDelayStyle: true,\n  });\n};\nexport default style;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/styles/trackerDelayStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "style",
    "memberof": "src/common/styles/trackerDelayStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerDelayStyle.js~style",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerDelayStyle.js",
    "importStyle": "style",
    "description": "A tracker style that display the delay as backgroundColor.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "The trajectory to render."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "viewState",
        "description": "The view state of the map."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options to change the rendering"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a canvas"
    }
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "src/common/styles/trackerSimpleStyle.js",
    "content": "/**\n * A very simple tracker style.\n * Display blue point for each train.\n */\nlet canvas;\nconst style = () => {\n  if (!canvas) {\n    document.createElement('canvas');\n    canvas.width = 15;\n    canvas.height = 15;\n    const ctx = canvas.getContext('2d');\n    ctx.arc(8, 8, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = '#8ED6FF';\n    ctx.fill();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    ctx.lineWidth = 3;\n  }\n  return canvas;\n};\nexport default style;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/styles/trackerSimpleStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "style",
    "memberof": "src/common/styles/trackerSimpleStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/styles/trackerSimpleStyle.js~style",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/styles/trackerSimpleStyle.js",
    "importStyle": "style",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/common/trackerConfig.js",
    "content": "const trackerRadiusMapping = {\n  0: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  1: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  2: [0, 0, 0, 0, 0, 2, 2, 3, 7, 7, 7, 12, 15, 15, 15, 15, 15],\n  3: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  4: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  5: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  6: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  7: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  8: [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  9: [0, 0, 0, 0, 0, 2, 2, 3, 7, 7, 7, 12, 15, 15, 15, 15, 15],\n};\n\n/**\n * Trajserv value: 'Tram',  'Subway / Metro / S-Bahn',  'Train', 'Bus', 'Ferry', 'Cable Car', 'Gondola', 'Funicular', 'Long distance bus', 'Rail',\n * New endpoint use Rail instead of Train.\n * New tracker values:  null, \"tram\", \"subway\", \"rail\", \"bus\", \"ferry\", \"cablecar\", \"gondola\", \"funicular\", \"coach\".\n *\n * @ignore\n */\nexport const types = [\n  /^Tram/i,\n  /^Subway( \\/ Metro \\/ S-Bahn)?/i,\n  /^Train/i,\n  /^Bus/i,\n  /^Ferry/i,\n  /^Cable ?Car/i,\n  /^Gondola/i,\n  /^Funicular/i,\n  /^(Long distance bus|coach)/i,\n  /^Rail/i, // New endpoint use Rail instead of Train.\n];\n\n/**\n * @ignore\n */\nexport const bgColors = [\n  '#ffb400',\n  '#ff5400',\n  '#ff8080',\n  '#ea0000',\n  '#3000ff',\n  '#ffb400',\n  '#41a27b',\n  '#00d237',\n  '#b5b5b5',\n  '#ff8080',\n];\n\n/**\n * @ignore\n */\nexport const textColors = [\n  '#000000',\n  '#ffffff',\n  '#000000',\n  '#ffffff',\n  '#ffffff',\n  '#000000',\n  '#ffffff',\n  '#000000',\n  '#000000',\n  '#000000',\n];\n\n/**\n * @ignore\n */\nexport const timeSteps = [\n  100000, 50000, 40000, 30000, 20000, 15000, 10000, 5000, 2000, 1000, 400, 300,\n  250, 180, 90, 60, 50, 50, 50, 50, 50,\n];\n\n/**\n * @ignore\n */\nexport const getTypeIndex = (type) => {\n  if (typeof type === 'string') {\n    return types.findIndex((t) => t.test(type));\n  }\n  return type;\n};\n\n/**\n * @ignore\n */\nexport const getRadius = (type, zoom) => {\n  try {\n    const typeIdx = getTypeIndex(type || 0);\n    return trackerRadiusMapping[typeIdx][zoom];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getBgColor = (type = 0) => {\n  try {\n    const typeIdx = getTypeIndex(type);\n    return bgColors[typeIdx];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getTextColor = (type = 0) => {\n  try {\n    const typeIdx = getTypeIndex(type);\n    return textColors[typeIdx];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getTextSize = (ctx, markerSize, text, fontSize) => {\n  ctx.font = `bold ${fontSize}px Arial`;\n  let newText = ctx.measureText(text);\n\n  const maxiter = 25;\n  let i = 0;\n\n  while (newText.width > markerSize - 6 && i < maxiter) {\n    // eslint-disable-next-line no-param-reassign\n    fontSize -= 0.5;\n    ctx.font = `bold ${fontSize}px arial, sans-serif`;\n    newText = ctx.measureText(text);\n    i += 1;\n  }\n  return fontSize;\n};\n\n/**\n * @ignore\n * @param {number} delayInMs Delay in milliseconds.\n * @param {boolean} cancelled true if the journey is cancelled.\n * @param {boolean} isDelayText true if the color is used for delay text of the symbol.\n */\nexport const getDelayColor = (delayInMs, cancelled, isDelayText) => {\n  if (cancelled) {\n    return isDelayText ? '#ff0000' : '#a0a0a0'; // red or gray\n  }\n  if (delayInMs >= 3600000) {\n    return '#ed004c'; // pink { r: 237, g: 0, b: 76, s: '237,0,76' };\n  }\n  if (delayInMs >= 500000) {\n    return '#e80000'; // red { r: 232, g: 0, b: 0, s: '232,0,0' };\n  }\n  if (delayInMs >= 300000) {\n    return '#ff4a00'; // orange { r: 255, g: 74, b: 0, s: '255,74,0' };\n  }\n  if (delayInMs >= 180000) {\n    return '#f7bf00'; // yellow { r: 247, g: 191, b: 0, s: '247,191,0' };\n  }\n  if (delayInMs === null) {\n    return '#a0a0a0'; // grey { r: 160, g: 160, b: 160, s: '160,160,160' };\n  }\n  return '#00a00c'; // green { r: 0, g: 160, b: 12, s: '0,160,12' };\n};\n\n/**\n * @ignore\n */\nexport const getDelayText = (delayInMs, cancelled) => {\n  if (cancelled) {\n    return String.fromCodePoint(0x00d7);\n  }\n  if (delayInMs > 3600000) {\n    const rounded = Math.round(delayInMs / 3600000);\n    return `+${rounded}h`;\n  }\n\n  if (delayInMs > 59000) {\n    const rounded = Math.round(delayInMs / 60000);\n    return `+${rounded}m`;\n  }\n\n  if (delayInMs > 0) {\n    return `+${delayInMs}s`;\n  }\n\n  return '';\n};\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/trackerConfig.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "trackerRadiusMapping",
    "memberof": "src/common/trackerConfig.js",
    "static": true,
    "longname": "src/common/trackerConfig.js~trackerRadiusMapping",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"0\": *, \"1\": *, \"2\": *, \"3\": *, \"4\": *, \"5\": *, \"6\": *, \"7\": *, \"8\": *, \"9\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "variable",
    "name": "types",
    "memberof": "src/common/trackerConfig.js",
    "static": true,
    "longname": "src/common/trackerConfig.js~types",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{types}",
    "description": "Trajserv value: 'Tram',  'Subway / Metro / S-Bahn',  'Train', 'Bus', 'Ferry', 'Cable Car', 'Gondola', 'Funicular', 'Long distance bus', 'Rail',\nNew endpoint use Rail instead of Train.\nNew tracker values:  null, \"tram\", \"subway\", \"rail\", \"bus\", \"ferry\", \"cablecar\", \"gondola\", \"funicular\", \"coach\".",
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "variable",
    "name": "bgColors",
    "memberof": "src/common/trackerConfig.js",
    "static": true,
    "longname": "src/common/trackerConfig.js~bgColors",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{bgColors}",
    "description": "",
    "lineNumber": 37,
    "ignore": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "variable",
    "name": "textColors",
    "memberof": "src/common/trackerConfig.js",
    "static": true,
    "longname": "src/common/trackerConfig.js~textColors",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{textColors}",
    "description": "",
    "lineNumber": 53,
    "ignore": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "variable",
    "name": "timeSteps",
    "memberof": "src/common/trackerConfig.js",
    "static": true,
    "longname": "src/common/trackerConfig.js~timeSteps",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{timeSteps}",
    "description": "",
    "lineNumber": 69,
    "ignore": true,
    "type": {
      "types": [
        "number[]"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "getTypeIndex",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getTypeIndex",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getTypeIndex}",
    "description": "",
    "lineNumber": 77,
    "ignore": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "getRadius",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getRadius",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getRadius}",
    "description": "",
    "lineNumber": 87,
    "ignore": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "getBgColor",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getBgColor",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getBgColor}",
    "description": "",
    "lineNumber": 99,
    "ignore": true,
    "params": [
      {
        "name": "type",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "getTextColor",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getTextColor",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getTextColor}",
    "description": "",
    "lineNumber": 111,
    "ignore": true,
    "params": [
      {
        "name": "type",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "getTextSize",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getTextSize",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getTextSize}",
    "description": "",
    "lineNumber": 123,
    "ignore": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "markerSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "fontSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "getDelayColor",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getDelayColor",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getDelayColor}",
    "description": "",
    "lineNumber": 146,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "delayInMs",
        "description": "Delay in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "cancelled",
        "description": "true if the journey is cancelled."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isDelayText",
        "description": "true if the color is used for delay text of the symbol."
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "getDelayText",
    "memberof": "src/common/trackerConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/trackerConfig.js~getDelayText",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/common/trackerConfig.js",
    "importStyle": "{getDelayText}",
    "description": "",
    "lineNumber": 171,
    "ignore": true,
    "params": [
      {
        "name": "delayInMs",
        "types": [
          "*"
        ]
      },
      {
        "name": "cancelled",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "src/common/typedefs.js",
    "content": "/**\n * @typedef {function} FilterFunction\n * @param {Object} vehicle Vehicle to filter.\n */\n\n/**\n * @typedef {Object} ViewState\n * @property {number} time A time in ms.\n * @property {number[2]} center A center in mercator coordinate.\n * @property {number[4]} extent An Extent in mercator coordinates.\n * @property {number[2]} size A size ([width, height]).\n * @property {number} rotation A rotation in radians.\n * @property {number} resolution A resolution.\n * @property {number} zoom A zoom level.\n * @property {number} pixelRatio A pixel ratio.\n */\n\n/**\n * @typedef {Object} FeatureInfo\n * @property {Layer} layer A layer.\n * @property {ol/Feature~Feature[]} features  An array of features.\n * @property {number[2]} coordinate The coordinate where to find the featue.\n */\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/common/typedefs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "typedef",
    "name": "FilterFunction",
    "memberof": "src/common/typedefs.js",
    "static": true,
    "longname": "src/common/typedefs.js~FilterFunction",
    "access": "public",
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "vehicle",
        "description": "Vehicle to filter."
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "FilterFunction"
    }
  },
  {
    "__docId__": 236,
    "kind": "typedef",
    "name": "ViewState",
    "memberof": "src/common/typedefs.js",
    "static": true,
    "longname": "src/common/typedefs.js~ViewState",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "A time in ms."
      },
      {
        "nullable": null,
        "types": [
          "number[2]"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "A center in mercator coordinate."
      },
      {
        "nullable": null,
        "types": [
          "number[4]"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": "An Extent in mercator coordinates."
      },
      {
        "nullable": null,
        "types": [
          "number[2]"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "A size ([width, height])."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": "A rotation in radians."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "resolution",
        "description": "A resolution."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": "A zoom level."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pixelRatio",
        "description": "A pixel ratio."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ViewState"
    }
  },
  {
    "__docId__": 237,
    "kind": "typedef",
    "name": "FeatureInfo",
    "memberof": "src/common/typedefs.js",
    "static": true,
    "longname": "src/common/typedefs.js~FeatureInfo",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "A layer."
      },
      {
        "nullable": null,
        "types": [
          "ol/Feature~Feature[]"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": "An array of features."
      },
      {
        "nullable": null,
        "types": [
          "number[2]"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "The coordinate where to find the featue."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "FeatureInfo"
    }
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/iife.js",
    "content": "import mbt from './index';\n\nif (typeof window !== 'undefined') {\n  window.mbt = mbt;\n}\n\nexport default mbt;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/iife.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "src/index.js",
    "content": "import * as ol from './ol';\nimport * as mapbox from './mapbox';\n\nexport * as ol from './ol';\nexport * as mapbox from './mapbox';\n\nexport default {\n  ol,\n  mapbox,\n};\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/mapbox/controls/CopyrightControl.js",
    "content": "import Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport { getMapboxMapCopyrights } from '../../common/utils';\n\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map } from 'mapbox-gl';\n * import { CopyrightControl } from 'mobility-toolbox-js/mapbox';\n *\n * const map = new Map({\n *   container: 'map',\n *   style: `https://maps.geops.io/styles/travic_v2/style.json?key=${window.apiKey}`,\n *   controls: [\n *     new CopyrightControl()\n *   ]\n * });\n *\n * const control = new CopyrightControl();\n * control.attachToMap(map);\n *\n *\n * @see <a href=\"/example/mb-copyright\">Mapbox copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\nclass CopyrightControl extends mixin(Control) {\n  constructor(options) {\n    super(options);\n    this.render = this.render.bind(this);\n  }\n\n  activate() {\n    super.activate();\n    if (this.map) {\n      this.map.on('sourcedata', this.render);\n      this.map.on('styledata', this.render);\n      this.map.on('idle', this.render);\n    }\n  }\n\n  deactivate() {\n    if (this.map) {\n      this.map.off('sourcedata', this.render);\n      this.map.off('styledata', this.render);\n      this.map.off('idle', this.render);\n    }\n    super.deactivate();\n  }\n\n  getCopyrights() {\n    return getMapboxMapCopyrights(this.map);\n  }\n}\n\nexport default CopyrightControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/controls/CopyrightControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "CopyrightControl",
    "memberof": "src/mapbox/controls/CopyrightControl.js",
    "static": true,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/mapbox/controls/CopyrightControl.js",
    "importStyle": "CopyrightControl",
    "description": "Display layer's copyrights.",
    "examples": [
      "import { Map } from 'mapbox-gl';\nimport { CopyrightControl } from 'mobility-toolbox-js/mapbox';\n\nconst map = new Map({\n  container: 'map',\n  style: `https://maps.geops.io/styles/travic_v2/style.json?key=${window.apiKey}`,\n  controls: [\n    new CopyrightControl()\n  ]\n});\n\nconst control = new CopyrightControl();\ncontrol.attachToMap(map);"
    ],
    "see": [
      "<a href=\"/example/mb-copyright\">Mapbox copyright example</a>"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "Control"
    ],
    "implements": [
      "CopyrightInterface"
    ]
  },
  {
    "__docId__": 242,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "render",
    "memberof": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "static": false,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl#render",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "activate",
    "memberof": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl#activate",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "deactivate",
    "memberof": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "src/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/controls/CopyrightControl.js~CopyrightControl#getCopyrights",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/mapbox/controls/index.js",
    "content": "// eslint-disable-next-line import/prefer-default-export\nexport { default as CopyrightControl } from './CopyrightControl';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/controls/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/mapbox/index.js",
    "content": "export * from '../api';\nexport * from '../common';\nexport * from './controls';\nexport * from './layers';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/mapbox/layers/Layer.js",
    "content": "import { unByKey } from 'ol/Observable';\nimport { transformExtent } from 'ol/proj';\nimport LayerCommon from '../../common/layers/Layer';\n\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass Layer extends LayerCommon {\n  /**\n   * Initialize the layer and listen to user events.\n   * @param {ol/Map~Map} map\n   */\n  attachToMap(map) {\n    super.attachToMap(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    if (this.isClickActive || this.isHoverActive) {\n      this.toggleVisibleListeners();\n      this.onChangeVisibleKey = this.on(\n        'change:visible',\n        this.toggleVisibleListeners,\n      );\n    }\n  }\n\n  detachFromMap(map) {\n    if (this.map) {\n      this.map.off('mousemove', this.onUserMoveCallback);\n      this.map.off('click', this.onUserClickCallback);\n      unByKey(this.onChangeVisibleKey);\n    }\n    super.detachFromMap(map);\n  }\n\n  /**\n   * Function triggered when the user click the map.\n   * @private\n   */\n  onUserClickCallback(evt) {\n    super.onUserClickCallback({ coordinate: evt.lngLat.toArray(), ...evt });\n  }\n\n  /**\n   * Function triggered when the user moves the cursor over the map.\n   * @private\n   */\n  onUserMoveCallback(evt) {\n    super.onUserMoveCallback({ coordinate: evt.lngLat.toArray(), ...evt });\n  }\n\n  /**\n   * Toggle listeners needed when a layer is avisible or not.\n   * @private\n   */\n  toggleVisibleListeners() {\n    if (this.visible) {\n      if (this.isClickActive) {\n        this.map.on('click', this.onUserClickCallback);\n      }\n\n      if (this.isHoverActive) {\n        this.map.on('mousemove', this.onUserMoveCallback);\n      }\n    } else {\n      if (this.isClickActive) {\n        this.map.off('click', this.onUserClickCallback);\n      }\n\n      if (this.isHoverActive) {\n        this.map.off('mousemove', this.onUserMoveCallback);\n      }\n    }\n  }\n\n  /**\n   * Returns the current extent in mercator coordinates.\n   */\n  getMercatorExtent() {\n    const bounds = this.map.getBounds().toArray();\n    return transformExtent(\n      [...bounds[0], ...bounds[1]],\n      'EPSG:4326',\n      'EPSG:3857',\n    );\n  }\n\n  /**\n   * Returns the equivalent zoom in Openlayers.\n   */\n  getOlZoom() {\n    return this.map.getZoom() + 1;\n  }\n\n  /**\n   * Create a copy of the Layer.\n   * @param {Object} newOptions Options to override\n   * @return {Layer} A Layer\n   */\n  clone(newOptions) {\n    return new Layer({ ...this.options, ...newOptions });\n  }\n}\nexport default Layer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/layers/Layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "class",
    "name": "Layer",
    "memberof": "src/mapbox/layers/Layer.js",
    "static": true,
    "longname": "src/mapbox/layers/Layer.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/mapbox/layers/Layer.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on an OpenLayers map.",
    "examples": [
      "import { Layer } from 'mobility-toolbox-js/ol';\n\nconst layer = new Layer({\n  olLayer: ...,\n});"
    ],
    "see": [
      "<a href=\"/example/ol-map\">Map example</a>"
    ],
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to user events.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "onChangeVisibleKey",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#onChangeVisibleKey",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#detachFromMap",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "onUserClickCallback",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#onUserClickCallback",
    "access": "private",
    "description": "Function triggered when the user click the map.",
    "lineNumber": 54,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "onUserMoveCallback",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#onUserMoveCallback",
    "access": "private",
    "description": "Function triggered when the user moves the cursor over the map.",
    "lineNumber": 62,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "toggleVisibleListeners",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#toggleVisibleListeners",
    "access": "private",
    "description": "Toggle listeners needed when a layer is avisible or not.",
    "lineNumber": 70,
    "params": [],
    "return": null
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "getMercatorExtent",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#getMercatorExtent",
    "access": "public",
    "description": "Returns the current extent in mercator coordinates.",
    "lineNumber": 93,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "getOlZoom",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#getOlZoom",
    "access": "public",
    "description": "Returns the equivalent zoom in Openlayers.",
    "lineNumber": 105,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "clone",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#clone",
    "access": "public",
    "description": "Create a copy of the Layer.",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": "A Layer"
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "src/mapbox/layers/TralisLayer.js",
    "content": "import { fromLonLat } from 'ol/proj';\nimport { unByKey } from 'ol/Observable';\nimport { getWidth, getHeight } from 'ol/extent';\nimport transformRotate from '@turf/transform-rotate';\nimport { point } from '@turf/helpers';\nimport mixin from '../../common/mixins/TralisLayerMixin';\nimport Layer from './Layer';\nimport { getSourceCoordinates, getMercatorResolution } from '../utils';\n\n/**\n * Responsible for loading and display data from a Tralis service.\n *\n * @example\n * import { TralisLayer } from 'mobility-toolbox-js/mapbox';\n *\n * const layer = new TralisLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>\n *\n * @extends {Layer}\n * @implements {TralisLayerInterface}\n */\nclass TralisLayer extends mixin(Layer) {\n  constructor(options = {}) {\n    super({\n      ...options,\n    });\n\n    /** @ignore */\n    this.onLoad = this.onLoad.bind(this);\n\n    /** @ignore */\n    this.onMove = this.onMove.bind(this);\n\n    /** @ignore */\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n\n    /** @ignore */\n    this.onZoomEnd = this.onZoomEnd.bind(this);\n\n    /** @ignore */\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  /**\n   * Initialize the layer.\n   *\n   * @param {mapboxgl.Map} map A [mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map/).\n   * @param {string} beforeId Layer's id before which we want to add the new layer.\n   * @override\n   */\n  attachToMap(map, beforeId) {\n    if (!map) {\n      return;\n    }\n\n    const canvas = map.getCanvas();\n\n    super.attachToMap(map, {\n      width: canvas.width / this.pixelRatio,\n      height: canvas.height / this.pixelRatio,\n    });\n\n    this.source = {\n      type: 'canvas',\n      canvas: this.tracker.canvas,\n      coordinates: getSourceCoordinates(map, this.pixelRatio),\n      // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\n      animate: true,\n      attribution: this.copyrights && this.copyrights.join(', '),\n    };\n\n    this.beforeId = beforeId;\n    this.layer = {\n      id: this.key,\n      type: 'raster',\n      source: this.key,\n      layout: {\n        visibility: this.visible ? 'visible' : 'none',\n      },\n      paint: {\n        'raster-opacity': 1,\n        'raster-fade-duration': 0,\n        'raster-resampling': 'nearest', // important otherwise it looks blurry\n      },\n    };\n\n    if (map.isStyleLoaded()) {\n      this.onLoad();\n    }\n\n    this.map.on('load', this.onLoad);\n\n    this.listeners = [this.on('change:visible', this.onVisibilityChange)];\n  }\n\n  /**\n   * Remove listeners from the Mapbox Map.\n   */\n  detachFromMap() {\n    if (this.map) {\n      this.map.off('load', this.onLoad);\n\n      this.listeners.forEach((listener) => {\n        unByKey(listener);\n      });\n      if (this.map.getLayer(this.key)) {\n        this.map.removeLayer(this.key);\n      }\n      if (this.map.getSource(this.key)) {\n        this.map.removeSource(this.key);\n      }\n    }\n    super.detachFromMap();\n  }\n\n  /**\n   * Start updating vehicles position.\n   *\n   * @listens {mapboxgl.map.event:zoomend} Listen to zoom end event.\n   * @listens {mapboxgl.map.event:mousemove} Listen to mousemove end.\n   * @override\n   */\n  start() {\n    super.start();\n\n    this.map.on('move', this.onMove);\n    this.map.on('moveend', this.onMoveEnd);\n    this.map.on('zoomend', this.onZoomEnd);\n  }\n\n  /**\n   * Stop updating vehicles position, and unlisten events.\n   *\n   * @override\n   */\n  stop() {\n    super.stop();\n    if (this.map) {\n      this.map.off('move', this.onMove);\n      this.map.off('moveend', this.onMoveEnd);\n      this.map.off('zoomend', this.onZoomEnd);\n    }\n  }\n\n  onLoad() {\n    if (!this.map.getSource(this.key)) {\n      this.map.addSource(this.key, this.source);\n    }\n    if (!this.map.getLayer(this.key)) {\n      this.map.addLayer(this.layer, this.beforeId);\n    }\n  }\n\n  /**\n   * Function triggered when the user click the map.\n   * @override\n   */\n  onUserClickCallback(evt) {\n    super.onUserClickCallback({\n      coordinate: fromLonLat(evt.lngLat.toArray()),\n      ...evt,\n    });\n  }\n\n  /**\n   * Function triggered when the user moves the cursor over the map.\n   * @override\n   */\n  onUserMoveCallback(evt) {\n    super.onUserMoveCallback({\n      coordinate: fromLonLat(evt.lngLat.toArray()),\n      ...evt,\n    });\n  }\n\n  /**\n   * Render the trajectories using current map's size, resolution and rotation.\n   * @param {boolean} noInterpolate if true, renders the vehicles without interpolating theirs positions.\n   * @overrides\n   */\n  renderTrajectories(noInterpolate) {\n    const { width, height } = this.map.getCanvas();\n    const center = this.map.getCenter();\n\n    // We use turf here to have good transform.\n    const leftBottom = this.map.unproject({\n      x: 0,\n      y: height / this.pixelRatio,\n    }); // southWest\n    const rightTop = this.map.unproject({ x: width / this.pixelRatio, y: 0 }); // north east\n\n    const coord0 = transformRotate(\n      point([leftBottom.lng, leftBottom.lat]),\n      -this.map.getBearing(),\n      {\n        pivot: [center.lng, center.lat],\n      },\n    ).geometry.coordinates;\n    const coord1 = transformRotate(\n      point([rightTop.lng, rightTop.lat]),\n      -this.map.getBearing(),\n      {\n        pivot: [center.lng, center.lat],\n      },\n    ).geometry.coordinates;\n\n    const bounds = [...fromLonLat(coord0), ...fromLonLat(coord1)];\n    const xResolution = getWidth(bounds) / (width / this.pixelRatio);\n    const yResolution = getHeight(bounds) / (height / this.pixelRatio);\n    const res = Math.max(xResolution, yResolution);\n\n    // Coordinate of trajectories are in mercator so we have to pass the proper resolution and center in mercator.\n    const viewState = {\n      size: [width / this.pixelRatio, height / this.pixelRatio],\n      center: fromLonLat([center.lng, center.lat]),\n      extent: bounds,\n      resolution: res,\n      zoom: this.map.getZoom(),\n      rotation: -(this.map.getBearing() * Math.PI) / 180,\n      pixelRatio: this.pixelRatio,\n    };\n\n    super.renderTrajectories(viewState, noInterpolate);\n  }\n\n  /**\n   * Return the delay in ms before the next rendering.\n   */\n  getRefreshTimeInMs() {\n    return super.getRefreshTimeInMs(this.map.getZoom());\n  }\n\n  getFeatureInfoAtCoordinate(coordinate, options = {}) {\n    const resolution = getMercatorResolution(this.map);\n    return super.getFeatureInfoAtCoordinate(coordinate, {\n      resolution,\n      ...options,\n    });\n  }\n\n  onVisibilityChange() {\n    if (this.visible && !this.map.getLayer(this.key)) {\n      this.map.addLayer(this.layer, this.beforeId);\n    } else if (this.map.getLayer(this.key)) {\n      this.map.removeLayer(this.key);\n    }\n    // We can't use setLayoutProperty it triggers an error probably a bug in mapbox\n    // this.map.setLayoutProperty(\n    //   this.key,\n    //   'visibilty',\n    //   this.visible ? 'visible' : 'none',\n    // );\n  }\n\n  /**\n   * Remove the trajectory form the list if necessary.\n   *\n   * @private\n   */\n  purgeTrajectory(trajectory, extent, zoom) {\n    return super.purgeTrajectory(\n      trajectory,\n      extent || this.getMercatorExtent(),\n      zoom || Math.floor(this.map.getZoom() + 1),\n    );\n  }\n\n  /**\n   * Send the current bbox to the websocket\n   */\n  setBbox(extent, zoom) {\n    let newExtent = extent;\n    let newZoom = zoom;\n    if (!newExtent && this.isUpdateBboxOnMoveEnd) {\n      newExtent = extent || this.getMercatorExtent();\n      newZoom = Math.floor(this.getOlZoom());\n    }\n    super.setBbox(newExtent, newZoom);\n  }\n\n  /**\n   * Callback on 'move' event.\n   *\n   * @private\n   */\n  onMove() {\n    const extent = getSourceCoordinates(this.map, this.pixelRatio);\n    const source = this.map.getSource(this.key);\n    if (source) {\n      source.setCoordinates(extent);\n    }\n    this.renderTrajectories();\n  }\n\n  /**\n   * Send the new BBOX to the websocket.\n   *\n   * @param {ol/MapEvent~MapEvent} evt Moveend event\n   * @private\n   * @override\n   */\n  onMoveEnd() {\n    this.renderTrajectories();\n\n    if (this.visible && this.isUpdateBboxOnMoveEnd) {\n      this.setBbox();\n    }\n  }\n\n  /**\n   * Update the cursor style when hovering a vehicle.\n   *\n   * @private\n   * @override\n   */\n  onFeatureHover(features, layer, coordinate) {\n    super.onFeatureHover(features, layer, coordinate);\n    this.map.getCanvasContainer().style.cursor = features.length\n      ? 'pointer'\n      : 'auto';\n  }\n}\n\nexport default TralisLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/layers/TralisLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "class",
    "name": "TralisLayer",
    "memberof": "src/mapbox/layers/TralisLayer.js",
    "static": true,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/mapbox/layers/TralisLayer.js",
    "importStyle": "TralisLayer",
    "description": "Responsible for loading and display data from a Tralis service.",
    "examples": [
      "import { TralisLayer } from 'mobility-toolbox-js/mapbox';\n\nconst layer = new TralisLayer({\n  url: [yourUrl],\n  apiKey: [yourApiKey],\n});"
    ],
    "see": [
      "<a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>"
    ],
    "lineNumber": 27,
    "interface": false,
    "extends": [
      "Layer"
    ],
    "implements": [
      "TralisLayerInterface"
    ]
  },
  {
    "__docId__": 262,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "onZoomEnd",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onZoomEnd",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A [mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "beforeId",
        "description": "Layer's id before which we want to add the new layer."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "source",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#source",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"canvas\": *, \"coordinates\": *, \"animate\": boolean, \"attribution\": *}"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "beforeId",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#beforeId",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "layer",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#layer",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"type\": string, \"source\": *, \"layout\": *, \"paint\": *}"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "listeners",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#detachFromMap",
    "access": "public",
    "description": "Remove listeners from the Mapbox Map.",
    "lineNumber": 104,
    "params": [],
    "return": null
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "start",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#start",
    "access": "public",
    "description": "Start updating vehicles position.",
    "lineNumber": 128,
    "override": true,
    "listens": [
      {
        "types": [
          "mapboxgl.map.event:zoomend"
        ],
        "description": "Listen to zoom end event."
      },
      {
        "types": [
          "mapboxgl.map.event:mousemove"
        ],
        "description": "Listen to mousemove end."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "stop",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#stop",
    "access": "public",
    "description": "Stop updating vehicles position, and unlisten events.",
    "lineNumber": 141,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "onLoad",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onLoad",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "onUserClickCallback",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onUserClickCallback",
    "access": "public",
    "description": "Function triggered when the user click the map.",
    "lineNumber": 163,
    "override": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "onUserMoveCallback",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onUserMoveCallback",
    "access": "public",
    "description": "Function triggered when the user moves the cursor over the map.",
    "lineNumber": 174,
    "override": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#renderTrajectories",
    "access": "public",
    "description": "Render the trajectories using current map's size, resolution and rotation.",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@overrides",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "noInterpolate",
        "description": "if true, renders the vehicles without interpolating theirs positions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "getRefreshTimeInMs",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#getRefreshTimeInMs",
    "access": "public",
    "description": "Return the delay in ms before the next rendering.",
    "lineNumber": 234,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "params": [
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "onVisibilityChange",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onVisibilityChange",
    "access": "public",
    "description": null,
    "lineNumber": 246,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "purgeTrajectory",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#purgeTrajectory",
    "access": "private",
    "description": "Remove the trajectory form the list if necessary.",
    "lineNumber": 265,
    "params": [
      {
        "name": "trajectory",
        "types": [
          "*"
        ]
      },
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "setBbox",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#setBbox",
    "access": "public",
    "description": "Send the current bbox to the websocket",
    "lineNumber": 276,
    "params": [
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "onMove",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onMove",
    "access": "private",
    "description": "Callback on 'move' event.",
    "lineNumber": 291,
    "params": [],
    "return": null
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "onMoveEnd",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onMoveEnd",
    "access": "private",
    "description": "Send the new BBOX to the websocket.",
    "lineNumber": 307,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/MapEvent~MapEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Moveend event"
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "onFeatureHover",
    "memberof": "src/mapbox/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapbox/layers/TralisLayer.js~TralisLayer#onFeatureHover",
    "access": "private",
    "description": "Update the cursor style when hovering a vehicle.",
    "lineNumber": 321,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/mapbox/layers/index.js",
    "content": "export { default as Layer } from './Layer';\nexport { default as TralisLayer } from './TralisLayer';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/mapbox/layers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "src/ol/controls/CopyrightControl.js",
    "content": "import { inView } from 'ol/layer/Layer';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport removeDuplicate from '../../common/utils/removeDuplicate';\n\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map } from 'ol';\n * import { CopyrightControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n * });\n * const control = new CopyrightControl();\n * control.attachToMap(map)\n *\n *\n * @see <a href=\"/example/ol-copyright\">Openlayers copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\nclass CopyrightControl extends mixin(Control) {\n  constructor(options) {\n    super(options);\n    this.onPostRender = this.onPostRender.bind(this);\n  }\n\n  getCopyrights() {\n    if (!this.frameState) {\n      return [];\n    }\n    let copyrights = [];\n\n    // This code loop comes mainly from ol.\n    this.frameState.layerStatesArray.forEach((layerState) => {\n      const { layer } = layerState;\n      if (\n        inView(layerState, this.frameState.viewState) &&\n        layer &&\n        layer.getSource &&\n        layer.getSource() &&\n        layer.getSource().getAttributions()\n      ) {\n        copyrights = copyrights.concat(\n          layer.getSource().getAttributions()(this.frameState),\n        );\n      }\n    });\n    return removeDuplicate(copyrights);\n  }\n\n  activate() {\n    super.activate();\n    if (this.map) {\n      this.map.on('postrender', this.onPostRender);\n    }\n  }\n\n  deactivate() {\n    if (this.map) {\n      this.map.un('postrender', this.onPostRender);\n    }\n    super.deactivate();\n  }\n\n  onPostRender(evt) {\n    if (this.map && this.element) {\n      /**\n       * @ignore\n       */\n      this.frameState = evt.frameState;\n      this.render();\n    }\n  }\n}\n\nexport default CopyrightControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/controls/CopyrightControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "class",
    "name": "CopyrightControl",
    "memberof": "src/ol/controls/CopyrightControl.js",
    "static": true,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/controls/CopyrightControl.js",
    "importStyle": "CopyrightControl",
    "description": "Display layer's copyrights.",
    "examples": [
      "import { Map } from 'ol';\nimport { CopyrightControl } from 'mobility-toolbox-js/ol';\n\nconst map = new Map({\n  target: 'map',\n});\nconst control = new CopyrightControl();\ncontrol.attachToMap(map)"
    ],
    "see": [
      "<a href=\"/example/ol-copyright\">Openlayers copyright example</a>"
    ],
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "Control"
    ],
    "implements": [
      "CopyrightInterface"
    ]
  },
  {
    "__docId__": 291,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#getCopyrights",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "activate",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#activate",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "deactivate",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "onPostRender",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#onPostRender",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "frameState",
    "memberof": "src/ol/controls/CopyrightControl.js~CopyrightControl",
    "static": false,
    "longname": "src/ol/controls/CopyrightControl.js~CopyrightControl#frameState",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "src/ol/controls/StopFinderControl.js",
    "content": "import { fromLonLat } from 'ol/proj';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/SearchMixin';\n\n/**\n * Search stations.\n *\n * @example\n * import { Map } from 'ol';\n * import { StopFinderControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n * });\n *\n * const control = new StopFinderControl({\n *   apiKey: [yourApiKey]\n * });\n *\n * control.attachToMap(map);\n *\n *\n * @see <a href=\"/example/ol-search\">Openlayers search example</a>\n *\n * @extends {Control}\n * @implements {SearchInterface}\n */\nclass StopFinderControl extends mixin(Control) {\n  /**\n   * @private\n   */\n  onSuggestionClick({ geometry }) {\n    const coord = fromLonLat(geometry.coordinates);\n    this.map.getView().setCenter(coord);\n  }\n}\n\nexport default StopFinderControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/controls/StopFinderControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "StopFinderControl",
    "memberof": "src/ol/controls/StopFinderControl.js",
    "static": true,
    "longname": "src/ol/controls/StopFinderControl.js~StopFinderControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/controls/StopFinderControl.js",
    "importStyle": "StopFinderControl",
    "description": "Search stations.",
    "examples": [
      "import { Map } from 'ol';\nimport { StopFinderControl } from 'mobility-toolbox-js/ol';\n\nconst map = new Map({\n  target: 'map',\n});\n\nconst control = new StopFinderControl({\n  apiKey: [yourApiKey]\n});\n\ncontrol.attachToMap(map);"
    ],
    "see": [
      "<a href=\"/example/ol-search\">Openlayers search example</a>"
    ],
    "lineNumber": 28,
    "interface": false,
    "extends": [
      "Control"
    ],
    "implements": [
      "SearchInterface"
    ]
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "onSuggestionClick",
    "memberof": "src/ol/controls/StopFinderControl.js~StopFinderControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/controls/StopFinderControl.js~StopFinderControl#onSuggestionClick",
    "access": "private",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"geometry\": *}"
        ],
        "defaultRaw": {
          "geometry": null
        },
        "defaultValue": "{\"geometry\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 301,
    "kind": "file",
    "name": "src/ol/controls/index.js",
    "content": "export { default as CopyrightControl } from './CopyrightControl';\nexport { default as RoutingControl } from './RoutingControl';\nexport { default as StopFinderControl } from './StopFinderControl';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/controls/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/ol/index.js",
    "content": "export * from '../api';\nexport * from '../common';\nexport * from './controls';\nexport * from './layers';\nexport * from './styles';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "src/ol/layers/Layer.js",
    "content": "import { unByKey } from 'ol/Observable';\nimport Group from 'ol/layer/Group';\nimport LayerCommon from '../../common/layers/Layer';\n\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass Layer extends LayerCommon {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {ol/layer/Layer~Layer} options.olLayer The layer (required).\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string} [options.copyright=undefined] Copyright-Statement.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is the currently visible layer on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] If true feature information can be queried by the react-spatial LayerService. Default is true.\n   * @param {boolean} [options.isClickActive=true] If true feature information will be queried on 'singleclick' event. All results will be passed to function registered using `onClick` function. Default is true.\n   */\n  constructor(options) {\n    super(options);\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    super.defineProperties(options);\n    Object.defineProperties(this, {\n      olLayer: { value: options.olLayer, writable: true },\n      olListenersKeys: {\n        value: [],\n      },\n    });\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  attachToMap(map) {\n    super.attachToMap(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    if (this.map && this.olLayer) {\n      this.map.addLayer(this.olLayer);\n    }\n\n    this.olListenersKeys.push(\n      this.map.getLayers().on('remove', (evt) => {\n        if (evt.element === this.olLayer) {\n          this.detachFromMap();\n        }\n      }),\n    );\n\n    if (this.isClickActive || this.isHoverActive) {\n      this.toggleVisibleListeners();\n      this.olListenersKeys.push(\n        this.on('change:visible', this.toggleVisibleListeners),\n      );\n    }\n\n    // We set the copyright to the source used by the layer.\n    if (this.copyrights && this.olLayer) {\n      const attributions = this.copyrights || [];\n      if (this.olLayer instanceof Group) {\n        this.olLayer\n          .getLayers()\n          .getArray()\n          .forEach((layer) => {\n            layer.getSource().setAttributions(attributions);\n          });\n      } else if (this.olLayer.getSource) {\n        this.olLayer.getSource().setAttributions(attributions);\n      }\n    }\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  detachFromMap() {\n    unByKey(this.olListenersKeys);\n\n    if (this.map && this.olLayer) {\n      this.map.removeLayer(this.olLayer);\n    }\n\n    super.detachFromMap();\n  }\n\n  /**\n   * Change the visibility of the layer\n   *\n   * @param {boolean} visible Defines the visibility of the layer\n   * @param {boolean} [stopPropagationDown]\n   * @param {boolean} [stopPropagationUp]\n   * @param {boolean} [stopPropagationSiblings]\n   */\n  setVisible(\n    visible,\n    stopPropagationDown = false,\n    stopPropagationUp = false,\n    stopPropagationSiblings = false,\n  ) {\n    if (visible === this.visible) {\n      return;\n    }\n\n    super.setVisible(\n      visible,\n      stopPropagationDown,\n      stopPropagationUp,\n      stopPropagationSiblings,\n    );\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Toggle listeners needed when a layer is avisible or not.\n   * @private\n   */\n  toggleVisibleListeners() {\n    // Remove previous event\n    if (this.isClickListenerKey && this.isHoverListenerKey) {\n      [this.isClickListenerKey, this.isHoverListenerKey].forEach((key) => {\n        const index = this.olListenersKeys.indexOf(key);\n        if (index > -1) {\n          this.olListenersKeys.splice(index, 1);\n        }\n        unByKey([this.isHoverListenerKey, this.isClickListenerKey]);\n      });\n    }\n\n    if (this.visible) {\n      if (this.isClickActive) {\n        this.isClickListenerKey = this.map.on(\n          'singleclick',\n          this.onUserClickCallback,\n        );\n      }\n      if (this.isHoverActive) {\n        this.isHoverListenerKey = this.map.on(\n          'pointermove',\n          this.onUserMoveCallback,\n        );\n      }\n      this.olListenersKeys.push(\n        this.isClickListenerKey,\n        this.isHoverListenerKey,\n      );\n    }\n  }\n\n  /**\n   * Create a copy of the Layer.\n   * @param {Object} newOptions Options to override\n   * @return {Layer} A Layer\n   */\n  clone(newOptions) {\n    return new Layer({ ...this.options, ...newOptions });\n  }\n}\nexport default Layer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/Layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "class",
    "name": "Layer",
    "memberof": "src/ol/layers/Layer.js",
    "static": true,
    "longname": "src/ol/layers/Layer.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/Layer.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on an OpenLayers map.",
    "examples": [
      "import { Layer } from 'mobility-toolbox-js/ol';\n\nconst layer = new Layer({\n  olLayer: ...,\n});"
    ],
    "see": [
      "<a href=\"/example/ol-map\">Map example</a>"
    ],
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 305,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol/layer/Layer~Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.olLayer",
        "description": "The layer (required)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid()",
        "defaultRaw": "uuid()",
        "name": "options.name",
        "description": "Layer name. Default use a generated uuid."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid().toLowerCase()",
        "defaultRaw": "uuid().toLowerCase()",
        "name": "options.key",
        "description": "Layer key, will use options.name.toLowerCase() if not specified."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "options.copyright",
        "description": "Copyright-Statement."
      },
      {
        "nullable": null,
        "types": [
          "Array<Layer>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.children",
        "description": "Sublayers."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.properties",
        "description": "Application-specific layer properties."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.visible",
        "description": "If true this layer is the currently visible layer on the map."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.isBaseLayer",
        "description": "If true this layer is a baseLayer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.isQueryable",
        "description": "If true feature information can be queried by the react-spatial LayerService. Default is true."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.isClickActive",
        "description": "If true feature information will be queried on 'singleclick' event. All results will be passed to function registered using `onClick` function. Default is true."
      }
    ]
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#defineProperties",
    "access": "public",
    "description": "Define layer's properties.",
    "lineNumber": 49,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to feature clicks.",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 108,
    "params": [],
    "return": null
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "setVisible",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#setVisible",
    "access": "public",
    "description": "Change the visibility of the layer",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "Defines the visibility of the layer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationDown",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationUp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPropagationSiblings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "toggleVisibleListeners",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#toggleVisibleListeners",
    "access": "private",
    "description": "Toggle listeners needed when a layer is avisible or not.",
    "lineNumber": 152,
    "params": [],
    "return": null
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "isClickListenerKey",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#isClickListenerKey",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "isHoverListenerKey",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#isHoverListenerKey",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#clone",
    "access": "public",
    "description": "Create a copy of the Layer.",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": "A Layer"
    }
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "src/ol/layers/MapboxLayer.js",
    "content": "/* eslint-disable no-underscore-dangle */\nimport { toLonLat } from 'ol/proj';\nimport { Map } from 'mapbox-gl';\nimport Source from 'ol/source/Source';\nimport OLLayer from 'ol/layer/Layer';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Layer from './Layer';\nimport { getMapboxMapCopyrights, getMapboxStyleUrl } from '../../common/utils';\n\n/**\n * A class representing Mapboxlayer to display on BasicMap\n *\n * @example\n * import { MapboxLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json',\n *   apikey: 'yourApiKey',\n * });\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nexport default class MapboxLayer extends Layer {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {boolean} [options.preserveDrawingBuffer=false] If true able to export the canvas.\n   * @param {number} [options.fadeDuration=300] Duration of the fade effect in ms.\n   */\n  constructor(options = {}) {\n    const mbLayer = new OLLayer({\n      source: new Source({}),\n      render: (frameState) => {\n        if (!this.mbMap) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Mapbox map doesn't exist.\");\n          return null;\n        }\n        let changed = false;\n        const canvas = this.mbMap.getCanvas();\n        const { viewState } = frameState;\n\n        const visible = this.olLayer.getVisible();\n        if (this.renderState.visible !== visible) {\n          canvas.style.display = visible ? 'block' : 'none';\n          this.renderState.visible = visible;\n          // Needed since mapbox-gl 1.9.0.\n          // Without you don't see others ol layers on top.\n          canvas.style.position = 'absolute';\n        }\n\n        const opacity = this.olLayer.getOpacity();\n        if (this.renderState.opacity !== opacity) {\n          canvas.style.opacity = opacity;\n          this.renderState.opacity = opacity;\n        }\n\n        // adjust view parameters in mapbox\n        const { rotation } = viewState;\n        if (this.renderState.rotation !== rotation) {\n          this.mbMap.rotateTo((-(rotation || 0) * 180) / Math.PI, {\n            animate: false,\n          });\n          changed = true;\n          this.renderState.rotation = rotation;\n        }\n\n        if (\n          this.renderState.zoom !== viewState.zoom ||\n          this.renderState.center[0] !== viewState.center[0] ||\n          this.renderState.center[1] !== viewState.center[1]\n        ) {\n          this.mbMap.jumpTo({\n            center: toLonLat(viewState.center),\n            zoom: viewState.zoom - 1,\n            animate: false,\n          });\n          changed = true;\n          this.renderState.zoom = viewState.zoom;\n          this.renderState.center = viewState.center;\n        }\n\n        const size = this.map.getSize();\n        if (\n          this.renderState.size[0] !== size[0] ||\n          this.renderState.size[1] !== size[1]\n        ) {\n          changed = true;\n          this.renderState.size = size;\n        }\n\n        // cancel the scheduled update & trigger synchronous redraw\n        // see https://github.com/mapbox/mapbox-gl-js/issues/7893#issue-408992184\n        // NOTE: THIS MIGHT BREAK WHEN UPDATING MAPBOX\n        if (\n          this.mbMap &&\n          this.mbMap.style &&\n          this.mbMap.isStyleLoaded() &&\n          changed\n        ) {\n          try {\n            if (this.mbMap._frame) {\n              this.mbMap._frame.cancel();\n              this.mbMap._frame = null;\n            }\n            this.mbMap._render();\n          } catch (err) {\n            // ignore render errors because it's probably related to\n            // a render during an update of the style.\n            // eslint-disable-next-line no-console\n            console.warn(err);\n          }\n        }\n\n        return this.mbMap.getContainer();\n      },\n    });\n\n    super({\n      ...options,\n      olLayer: mbLayer,\n    });\n\n    /**\n     * Url of the mapbox style.\n     * @type {string}\n     * @private\n     */\n    this.styleUrl = options.url;\n\n    /**\n     * Api key for the url of the mapbox style.\n     * If set to false, the apiKey is not required.\n     * @type {string}\n     * @private\n     */\n    this.apiKey = options.apiKey;\n\n    /**\n     * Name of the apiKey to set in the url request.\n     * Default is 'key'.\n     * @type {string}\n     * @private\n     */\n    this.apiKeyName = options.apiKeyName || 'key';\n\n    /** @ignore */\n    this.updateAttribution = this.updateAttribution.bind(this);\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  attachToMap(map) {\n    super.attachToMap(map);\n\n    if (!this.map || this.mbMap) {\n      return;\n    }\n\n    /**\n     * The feature format.\n     * @type {ol/format/GeoJSON}\n     */\n    this.format = new GeoJSON({\n      featureProjection: this.map.getView().getProjection(),\n    });\n\n    this.loadMbMap();\n\n    this.olListenersKeys.push(\n      this.map.on('change:size', () => {\n        try {\n          if (this.mbMap) {\n            this.mbMap.resize();\n          }\n        } catch (err) {\n          // ignore render errors\n          // eslint-disable-next-line no-console\n          console.warn(err);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  detachFromMap() {\n    if (this.mbMap) {\n      this.mbMap.off('idle', this.updateAttribution);\n      // Some asynchrone repaints are triggered even if the mbMap has been removed,\n      // to avoid display of errors we set an empty function.\n      this.mbMap.triggerRepaint = () => {};\n      this.mbMap.remove();\n      this.mbMap = null;\n    }\n    this.loaded = false;\n    super.detachFromMap();\n  }\n\n  /**\n   * Returns a style URL with apiKey & apiKeyName infos.\n   * @private\n   */\n  createStyleUrl() {\n    return getMapboxStyleUrl(this.apiKey, this.apiKeyName, this.styleUrl);\n  }\n\n  /**\n   * Create the mapbox map.\n   * @private\n   */\n  loadMbMap() {\n    this.olListenersKeys.push(\n      this.map.on('change:target', () => {\n        this.loadMbMap();\n      }),\n    );\n\n    if (!this.map.getTargetElement()) {\n      return;\n    }\n\n    if (!this.visible) {\n      // On next change of visibility we load the map\n      this.olListenersKeys.push(\n        this.once('change:visible', () => {\n          this.loadMbMap();\n        }),\n      );\n      return;\n    }\n\n    // If the map hasn't been resized, the center could be [NaN,NaN].\n    // We set default good value for the mapbox map, to avoid the app crashes.\n    let [x, y] = this.map.getView().getCenter();\n    if (!x || !y) {\n      x = 0;\n      y = 0;\n    }\n\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n\n    /**\n     * A mapbox map\n     * @type {mapboxgl.Map}\n     */\n    this.mbMap = new Map({\n      style: this.createStyleUrl(),\n      container,\n      interactive: false,\n      trackResize: false,\n      attributionControl: false,\n      ...(this.options.mapOptions || {}),\n    });\n\n    // Options the last render run did happen. If something changes\n    // we have to render again\n    /** @ignore */\n    this.renderState = {\n      center: [x, y],\n      zoom: null,\n      rotation: null,\n      visible: null,\n      opacity: null,\n      size: [0, 0],\n    };\n\n    this.mbMap.once('load', () => {\n      this.mbMap.resize();\n      /**\n       * Is the map loaded.\n       * @type {boolean}\n       */\n      this.loaded = true;\n\n      /** @ignore */\n      this.copyrights = getMapboxMapCopyrights(this.mbMap) || [];\n\n      this.olLayer.getSource().setAttributions(this.copyrights);\n\n      this.dispatchEvent({\n        type: 'load',\n        target: this,\n      });\n    });\n\n    const mapboxCanvas = this.mbMap.getCanvas();\n    if (mapboxCanvas) {\n      if (this.options.tabIndex) {\n        mapboxCanvas.setAttribute('tabindex', this.options.tabIndex);\n      } else {\n        // With a tabIndex='-1' the mouse events works but the map is not focused when we click on it\n        // so we remove completely the tabIndex attribute.\n        mapboxCanvas.removeAttribute('tabindex');\n      }\n    }\n\n    this.mbMap.on('idle', this.updateAttribution);\n  }\n\n  /**\n   * Update attributions of the source.\n   * @private\n   */\n  updateAttribution(evt) {\n    const newAttributions = getMapboxMapCopyrights(evt.target) || [];\n    if (this.copyrights.toString() !== newAttributions.toString()) {\n      this.copyrights = newAttributions;\n      this.olLayer.getSource().setAttributions(newAttributions);\n    }\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n   * @param {Object} options A [mapboxgl.Map#queryrenderedfeatures](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#queryrenderedfeatures) options parameter.\n   * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate. The original Mapbox feature is available as a property named 'mapboxFeature'.\n   */\n  getFeatureInfoAtCoordinate(coordinate, options) {\n    // Ignore the getFeatureInfo until the mapbox map is loaded\n    if (\n      !options ||\n      !this.format ||\n      !this.mbMap ||\n      !this.mbMap.isStyleLoaded()\n    ) {\n      return Promise.resolve({ coordinate, features: [], layer: this });\n    }\n\n    let pixel = coordinate && this.mbMap.project(toLonLat(coordinate));\n\n    if (this.hitTolerance) {\n      const { x, y } = pixel;\n      pixel = [\n        { x: x - this.hitTolerance, y: y - this.hitTolerance },\n        { x: x + this.hitTolerance, y: y + this.hitTolerance },\n      ];\n    }\n\n    // At this point we get GeoJSON Mapbox feature, we transform it to an OpenLayers\n    // feature to be consistent with other layers.\n    const features = this.mbMap\n      .queryRenderedFeatures(pixel, options)\n      .map((feature) => {\n        const olFeature = this.format.readFeature(feature);\n        if (olFeature) {\n          // We save the original mapbox feature to avoid losing informations\n          // potentially needed for other functionnality like highlighting\n          // (id, layer id, source, sourceLayer ...)\n          olFeature.set('mapboxFeature', feature);\n        }\n        return olFeature;\n      });\n\n    return Promise.resolve({\n      layer: this,\n      features,\n      coordinate,\n    });\n  }\n\n  /**\n   * Create a copy of the MapboxLayer.\n   * @param {Object} newOptions Options to override\n   * @return {MapboxLayer} A MapboxLayer\n   */\n  clone(newOptions) {\n    return new MapboxLayer({ ...this.options, ...newOptions });\n  }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/MapboxLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "class",
    "name": "MapboxLayer",
    "memberof": "src/ol/layers/MapboxLayer.js",
    "static": true,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/MapboxLayer.js",
    "importStyle": "MapboxLayer",
    "description": "A class representing Mapboxlayer to display on BasicMap",
    "examples": [
      "import { MapboxLayer } from 'mobility-toolbox-js/ol';\n\nconst layer = new MapboxLayer({\n  url: 'https://maps.geops.io/styles/travic_v2/style.json',\n  apikey: 'yourApiKey',\n});"
    ],
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 316,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.preserveDrawingBuffer",
        "description": "If true able to export the canvas."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "300",
        "defaultRaw": 300,
        "name": "options.fadeDuration",
        "description": "Duration of the fade effect in ms."
      }
    ]
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "styleUrl",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#styleUrl",
    "access": "private",
    "description": "Url of the mapbox style.",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "apiKey",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#apiKey",
    "access": "private",
    "description": "Api key for the url of the mapbox style.\nIf set to false, the apiKey is not required.",
    "lineNumber": 139,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "apiKeyName",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#apiKeyName",
    "access": "private",
    "description": "Name of the apiKey to set in the url request.\nDefault is 'key'.",
    "lineNumber": 147,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to feature clicks.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "format",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#format",
    "access": "public",
    "description": "The feature format.",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "ol/format/GeoJSON"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 192,
    "params": [],
    "return": null
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "mbMap",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#mbMap",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "loaded",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#loaded",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "createStyleUrl",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#createStyleUrl",
    "access": "private",
    "description": "Returns a style URL with apiKey & apiKeyName infos.",
    "lineNumber": 209,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "loadMbMap",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#loadMbMap",
    "access": "private",
    "description": "Create the mapbox map.",
    "lineNumber": 217,
    "params": [],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "renderState",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#renderState",
    "access": "public",
    "description": null,
    "lineNumber": 267,
    "ignore": true,
    "type": {
      "types": [
        "{\"center\": *, \"zoom\": *, \"rotation\": *, \"visible\": *, \"opacity\": *, \"size\": *}"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "copyrights",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#copyrights",
    "access": "public",
    "description": null,
    "lineNumber": 285,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "updateAttribution",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#updateAttribution",
    "access": "private",
    "description": "Update attributions of the source.",
    "lineNumber": 313,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 327,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate to request the information at."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "A [mapboxgl.Map#queryrenderedfeatures](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#queryrenderedfeatures) options parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate. The original Mapbox feature is available as a property named 'mapboxFeature'."
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#clone",
    "access": "public",
    "description": "Create a copy of the MapboxLayer.",
    "lineNumber": 375,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapboxLayer"
      ],
      "spread": false,
      "description": "A MapboxLayer"
    }
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "src/ol/layers/MapboxStyleLayer.js",
    "content": "/* eslint-disable no-param-reassign */\nimport Layer from './Layer';\n\n/**\n * Layer for visualizing a specific set of layer from a MapboxLayer.\n *\n * @example\n * import { MapboxLayer, MapboxStyleLayer } from 'mobility-toolbox-js/ol';\n *\n * const mapboxLayer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json?key=[yourApiKey]',\n * });\n *\n * const layer = new MapboxStyleLayer({\n *   mapboxLayer: mapboxLayer,\n *   styleLayersFilter: () => {},\n * });\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass MapboxStyleLayer extends Layer {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {MapboxLayer} [options.mapboxLayer] The MapboxLayer to use.\n   * @param {Function} [options.styleLayersFilter] Filter function to decide which style layer to display.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /**\n     * MapboxLayer provided for the style Layer.\n     * @type {MapboxLayer}\n     * @private\n     */\n    this.mapboxLayer = options.mapboxLayer;\n\n    /**\n     * Define if the layer has data to display in the current mapbox layer.\n     */\n    this.disabled = false;\n\n    /**\n     * Function to filter features to be displayed.\n     * @type {function}\n     * @private\n     */\n    this.styleLayersFilter = options.styleLayersFilter;\n\n    /**\n     * Mapbox style layer id where to add the style layers.\n     * See [mapbox.map.addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.\n     * @type {String}\n     * @private\n     */\n    this.beforeId = options.beforeId;\n\n    /**\n     * Function to filter features for getFeatureInfoAtCoordinate method.\n     * @type {function}\n     * @private\n     */\n    this.featureInfoFilter = options.featureInfoFilter || ((obj) => obj);\n\n    /**\n     * Function to query the rendered features.\n     * @type {function}\n     * @private\n     */\n    this.queryRenderedLayersFilter = options.queryRenderedLayersFilter;\n\n    /**\n     * Array of features to highlight.\n     * @type {Array<ol/Feature~Feature>}\n     * @private\n     */\n    this.highlightedFeatures = [];\n\n    /**\n     * Array of selected features.\n     * @type {Array<ol/Feature~Feature>}\n     * @private\n     */\n    this.selectedFeatures = [];\n\n    /**\n     * Array of mapbox style layers to add.\n     * @type {Array<mapboxgl.styleLayer>}\n     * @private\n     */\n    this.styleLayers =\n      (options.styleLayer ? [options.styleLayer] : options.styleLayers) || [];\n\n    /**\n     * @private\n     */\n    this.addStyleLayers = this.addStyleLayers.bind(this);\n\n    /**\n     * @private\n     */\n    this.onLoad = this.onLoad.bind(this);\n    if (options.filters) {\n      /** @private */\n      this.addDynamicFilters = () => {\n        this.setFilter(\n          typeof options.filters === 'function'\n            ? options.filters(this)\n            : options.filters,\n        );\n      };\n    }\n\n    if (!this.styleLayersFilter && this.styleLayers) {\n      const ids = this.styleLayers.map((s) => s.id);\n      this.styleLayersFilter = (styleLayer) => ids.includes(styleLayer.id);\n    }\n  }\n\n  /**\n   * Initialize the layer.\n   * @param {mapboxgl.Map} map the mapbox map.\n   * @override\n   */\n  attachToMap(map) {\n    if (!this.mapboxLayer.map) {\n      this.mapboxLayer.attachToMap(map);\n    }\n    super.attachToMap(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    // Apply the initial visibiltity.\n    const { mbMap } = this.mapboxLayer;\n    if (!mbMap) {\n      // If the mbMap is not yet created because the  map has no target yet, we\n      // relaunch the initialisation when it's the case.\n      this.olListenersKeys.push(\n        this.map.on('change:target', () => {\n          this.attachToMap(map);\n        }),\n      );\n\n      return;\n    }\n\n    // mbMap.loaded() and mbMap.isStyleLoaded() are reliable only on the first call of init.\n    // On the next call (when a topic change for example), these functions returns false because\n    // the style is being modified.\n    // That's why we rely on a property instead for the next calls.\n    if (this.mapboxLayer.loaded || mbMap.isStyleLoaded() || mbMap.loaded()) {\n      this.onLoad();\n    } else {\n      mbMap.once('load', this.onLoad);\n    }\n\n    // Apply the visibiltity when layer's visibility change.\n    this.olListenersKeys.push(\n      this.on('change:visible', (evt) => {\n        // Once the map is loaded we can apply vsiiblity without waiting\n        // the style. Mapbox take care of the application of style changes.\n        this.applyLayoutVisibility(evt);\n      }),\n    );\n\n    this.olListenersKeys.push(\n      this.mapboxLayer.on('load', () => {\n        this.onLoad();\n      }),\n    );\n  }\n\n  /**\n   * Terminate the layer.\n   * @param {mapboxgl.Map} map the mapbox map.\n   * @override\n   */\n  detachFromMap(map) {\n    const { mbMap } = this.mapboxLayer;\n    if (mbMap) {\n      mbMap.off('load', this.onLoad);\n      this.removeStyleLayers();\n    }\n    super.detachFromMap(map);\n  }\n\n  /** @ignore */\n  addStyleLayers() {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach((styleLayer) => {\n      const { id, source } = styleLayer;\n      if (mbMap.getSource(source) && !mbMap.getLayer(id)) {\n        mbMap.addLayer(styleLayer, this.beforeId);\n      }\n    });\n    this.applyLayoutVisibility();\n  }\n\n  /** @ignore */\n  removeStyleLayers() {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach((styleLayer) => {\n      if (mbMap.getLayer(styleLayer.id)) {\n        mbMap.removeLayer(styleLayer.id);\n      }\n    });\n  }\n\n  /**\n   * On Mapbox map load callback function. Add style layers and dynaimc filters.\n   * @ignore\n   */\n  onLoad() {\n    this.addStyleLayers();\n\n    if (this.addDynamicFilters) {\n      this.addDynamicFilters();\n    }\n\n    const { mbMap } = this.mapboxLayer;\n    const style = mbMap.getStyle();\n    if (style && this.styleLayersFilter) {\n      const styles = style.layers.filter(this.styleLayersFilter);\n      this.disabled = !styles.length;\n    }\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n   * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    const { mbMap } = this.mapboxLayer;\n\n    // Ignore the getFeatureInfo until the mapbox map is loaded\n    if (!mbMap || !mbMap.isStyleLoaded()) {\n      return Promise.resolve({ coordinate, features: [], layer: this });\n    }\n\n    // We query features only on style layers used by this layer.\n    let layers = this.styleLayers || [];\n\n    if (this.styleLayersFilter) {\n      layers = mbMap.getStyle().layers.filter(this.styleLayersFilter);\n    }\n\n    if (this.queryRenderedLayersFilter) {\n      layers = mbMap.getStyle().layers.filter(this.queryRenderedLayersFilter);\n    }\n\n    return this.mapboxLayer\n      .getFeatureInfoAtCoordinate(coordinate, {\n        layers: layers.map((layer) => layer && layer.id),\n        validate: false,\n      })\n      .then((featureInfo) => {\n        const features = featureInfo.features.filter((feature) =>\n          this.featureInfoFilter(feature, this.map.getView().getResolution()),\n        );\n        this.highlight(features);\n        return { ...featureInfo, features, layer: this };\n      });\n  }\n\n  /**\n   * Set filter that determines which features should be rendered in a style layer.\n   * @param {mapboxgl.filter} filter Determines which features should be rendered in a style layer.\n   */\n  setFilter(filter) {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach(({ id }) => {\n      if (mbMap.getLayer(id)) {\n        mbMap.setFilter(id, filter);\n      }\n    });\n  }\n\n  /**\n   * Set if features are hovered or not.\n   * @param {Array<ol/Feature~Feature>} features\n   * @param {boolean} state Is the feature hovered\n   * @private\n   */\n  setHoverState(features, state) {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!features || !mbMap) {\n      return;\n    }\n\n    features.forEach((feature) => {\n      const { source, sourceLayer } = feature.get('mapboxFeature') || {};\n      if ((!source && !sourceLayer) || !feature.getId()) {\n        if (!feature.getId()) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            \"No feature's id found. To use the feature state functionnality, tiles must be generated with --generate-ids. See https://github.com/mapbox/tippecanoe#adding-calculated-attributes.\",\n            feature.getId(),\n            feature.getProperties(),\n          );\n        }\n        return;\n      }\n\n      mbMap.setFeatureState(\n        {\n          id: feature.getId(),\n          source,\n          sourceLayer,\n        },\n        { hover: state },\n      );\n    });\n  }\n\n  /**\n   * Select a list of features.\n   * @param {Array<ol/Feature~Feature>} [features=[]] Features to select.\n   * @private\n   */\n  select(features = []) {\n    this.setHoverState(this.selectedFeatures, false);\n    this.selectedFeatures = features;\n    this.setHoverState(this.selectedFeatures, true);\n  }\n\n  /**\n   * Highlight a list of features.\n   * @param {Array<ol/Feature~Feature>} [features=[]] Features to highlight.\n   * @private\n   */\n  highlight(features = []) {\n    // Filter out selected features\n    const filtered = this.highlightedFeatures.filter(\n      (feature) =>\n        !this.selectedFeatures\n          .map((feat) => feat.getId())\n          .includes(feature.getId()),\n    );\n\n    // Remove previous highlight\n    this.setHoverState(filtered, false);\n    this.highlightedFeatures = features;\n\n    // Add highlight\n    this.setHoverState(this.highlightedFeatures, true);\n  }\n\n  /**\n   * Apply visibility to style layers that fits the styleLayersFilter function.\n   * @param {Event} evt Layer's event that has called the function.\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  applyLayoutVisibility(evt) {\n    const { visible } = this;\n    const { mbMap } = this.mapboxLayer;\n    const filterFunc = this.styleLayersFilter;\n\n    if (!mbMap) {\n      return;\n    }\n\n    const style = mbMap.getStyle();\n\n    if (!style) {\n      return;\n    }\n\n    if (filterFunc) {\n      const visibilityValue = visible ? 'visible' : 'none';\n      for (let i = 0; i < style.layers.length; i += 1) {\n        const styleLayer = style.layers[i];\n        if (filterFunc(styleLayer)) {\n          if (mbMap.getLayer(styleLayer.id)) {\n            mbMap.setLayoutProperty(\n              styleLayer.id,\n              'visibility',\n              visibilityValue,\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a copy of the MapboxStyleLayer.\n   * @param {Object} newOptions Options to override.\n   * @return {MapboxStyleLayer} A MapboxStyleLayer.\n   */\n  clone(newOptions) {\n    return new MapboxStyleLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default MapboxStyleLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/MapboxStyleLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "class",
    "name": "MapboxStyleLayer",
    "memberof": "src/ol/layers/MapboxStyleLayer.js",
    "static": true,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/MapboxStyleLayer.js",
    "importStyle": "MapboxStyleLayer",
    "description": "Layer for visualizing a specific set of layer from a MapboxLayer.",
    "examples": [
      "import { MapboxLayer, MapboxStyleLayer } from 'mobility-toolbox-js/ol';\n\nconst mapboxLayer = new MapboxLayer({\n  url: 'https://maps.geops.io/styles/travic_v2/style.json?key=[yourApiKey]',\n});\n\nconst layer = new MapboxStyleLayer({\n  mapboxLayer: mapboxLayer,\n  styleLayersFilter: () => {},\n});"
    ],
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 338,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapboxLayer"
        ],
        "spread": false,
        "optional": true,
        "name": "options.mapboxLayer",
        "description": "The MapboxLayer to use."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.styleLayersFilter",
        "description": "Filter function to decide which style layer to display."
      }
    ]
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "mapboxLayer",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#mapboxLayer",
    "access": "private",
    "description": "MapboxLayer provided for the style Layer.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "MapboxLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "disabled",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#disabled",
    "access": "public",
    "description": "Define if the layer has data to display in the current mapbox layer.",
    "lineNumber": 43,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "styleLayersFilter",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#styleLayersFilter",
    "access": "private",
    "description": "Function to filter features to be displayed.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "beforeId",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#beforeId",
    "access": "private",
    "description": "Mapbox style layer id where to add the style layers.\nSee [mapbox.map.addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "featureInfoFilter",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#featureInfoFilter",
    "access": "private",
    "description": "Function to filter features for getFeatureInfoAtCoordinate method.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "name": "queryRenderedLayersFilter",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#queryRenderedLayersFilter",
    "access": "private",
    "description": "Function to query the rendered features.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 345,
    "kind": "member",
    "name": "highlightedFeatures",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#highlightedFeatures",
    "access": "private",
    "description": "Array of features to highlight.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Array<ol/Feature~Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 346,
    "kind": "member",
    "name": "selectedFeatures",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#selectedFeatures",
    "access": "private",
    "description": "Array of selected features.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "Array<ol/Feature~Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "styleLayers",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#styleLayers",
    "access": "private",
    "description": "Array of mapbox style layers to add.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Array<mapboxgl.styleLayer>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "addDynamicFilters",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#addDynamicFilters",
    "access": "private",
    "description": null,
    "lineNumber": 107,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer.",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "the mapbox map."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#detachFromMap",
    "access": "public",
    "description": "Terminate the layer.",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "the mapbox map."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "addStyleLayers",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#addStyleLayers",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "removeStyleLayers",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#removeStyleLayers",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "onLoad",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#onLoad",
    "access": "public",
    "description": "On Mapbox map load callback function. Add style layers and dynaimc filters.",
    "lineNumber": 227,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "setFilter",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#setFilter",
    "access": "public",
    "description": "Set filter that determines which features should be rendered in a style layer.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.filter"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "Determines which features should be rendered in a style layer."
      }
    ],
    "return": null
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "setHoverState",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#setHoverState",
    "access": "private",
    "description": "Set if features are hovered or not.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Is the feature hovered"
      }
    ],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "select",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#select",
    "access": "private",
    "description": "Select a list of features.",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "features",
        "description": "Features to select."
      }
    ],
    "return": null
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "highlight",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#highlight",
    "access": "private",
    "description": "Highlight a list of features.",
    "lineNumber": 352,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "features",
        "description": "Features to highlight."
      }
    ],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "applyLayoutVisibility",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#applyLayoutVisibility",
    "access": "private",
    "description": "Apply visibility to style layers that fits the styleLayersFilter function.",
    "lineNumber": 375,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Layer's event that has called the function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#clone",
    "access": "public",
    "description": "Create a copy of the MapboxStyleLayer.",
    "lineNumber": 412,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapboxStyleLayer"
      ],
      "spread": false,
      "description": "A MapboxStyleLayer."
    }
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "src/ol/layers/RoutingLayer.js",
    "content": "import { Circle, Fill, Stroke, Style } from 'ol/style';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Vector } from 'ol/layer';\nimport Layer from './Layer';\n\nconst circleStyle = new Circle({\n  radius: 6,\n  fill: new Fill({\n    color: [255, 0, 0, 1],\n  }),\n  stroke: new Stroke({\n    color: [0, 0, 0, 1],\n    width: 1,\n  }),\n});\n\nconst blackBorder = new Style({\n  stroke: new Stroke({\n    color: [0, 0, 0, 1],\n    width: 5,\n  }),\n});\n\nconst redLine = new Style({\n  image: circleStyle,\n  stroke: new Stroke({\n    color: [255, 0, 0, 1],\n    width: 3,\n  }),\n});\n\nconst dashedRedLine = new Style({\n  image: circleStyle,\n  stroke: new Stroke({\n    color: [255, 0, 0, 1],\n    width: 3,\n    lineDash: [1, 10],\n  }),\n});\n\nconst defaultStyleFunction = (feature, resolution) => {\n  const minResolution = feature.get('minResolution');\n  const maxResolution = feature.get('maxResolution');\n  const inRange = resolution <= minResolution && resolution > maxResolution;\n\n  if (minResolution && maxResolution && !inRange) {\n    return null;\n  }\n  const mot = feature.get('mot');\n\n  if (mot !== 'foot') {\n    return [blackBorder, redLine];\n  }\n\n  return [dashedRedLine];\n};\n\n/**\n * A class use to display vector data.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass RoutingLayer extends Layer {\n  /**\n   * Constructor.\n   * @param {Object} [options]\n   * @param {ol/style/Style~StyleLike} [options.style] Style to be used for routes, uses (ol/StyleLike) [https://openlayers.org/en/latest/apidoc/module-ol_style_Style.html#~StyleLike] instances\n   */\n  constructor(options = {}) {\n    super(options);\n\n    this.olLayer =\n      options.olLayer ||\n      new Vector({\n        source: new VectorSource(),\n        style: options.style || defaultStyleFunction,\n      });\n  }\n\n  /**\n   * Create a copy of the RoutingLayer.\n   * @param {Object} newOptions Options to override\n   * @return {RoutingLayer} A RoutingLayer\n   */\n  clone(newOptions) {\n    return new RoutingLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default RoutingLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "name": "circleStyle",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~circleStyle",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "blackBorder",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~blackBorder",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "name": "redLine",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~redLine",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "variable",
    "name": "dashedRedLine",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~dashedRedLine",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "defaultStyleFunction",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~defaultStyleFunction",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolution",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "class",
    "name": "RoutingLayer",
    "memberof": "src/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "src/ol/layers/RoutingLayer.js~RoutingLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/RoutingLayer.js",
    "importStyle": "RoutingLayer",
    "description": "A class use to display vector data.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 374,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/RoutingLayer.js~RoutingLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/RoutingLayer.js~RoutingLayer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol/style/Style~StyleLike"
        ],
        "spread": false,
        "optional": true,
        "name": "options.style",
        "description": "Style to be used for routes, uses (ol/StyleLike) [https://openlayers.org/en/latest/apidoc/module-ol_style_Style.html#~StyleLike] instances"
      }
    ]
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "olLayer",
    "memberof": "src/ol/layers/RoutingLayer.js~RoutingLayer",
    "static": false,
    "longname": "src/ol/layers/RoutingLayer.js~RoutingLayer#olLayer",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/RoutingLayer.js~RoutingLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/RoutingLayer.js~RoutingLayer#clone",
    "access": "public",
    "description": "Create a copy of the RoutingLayer.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RoutingLayer"
      ],
      "spread": false,
      "description": "A RoutingLayer"
    }
  },
  {
    "__docId__": 377,
    "kind": "file",
    "name": "src/ol/layers/TralisLayer.js",
    "content": "import GeoJSON from 'ol/format/GeoJSON';\nimport { Layer as OLLayer, Group, Vector as VectorLayer } from 'ol/layer';\nimport Source from 'ol/source/Source';\nimport { composeCssTransform } from 'ol/transform';\nimport { Vector as VectorSource } from 'ol/source';\nimport Layer from './Layer';\nimport mixin from '../../common/mixins/TralisLayerMixin';\nimport { fullTrajectoryStyle } from '../styles';\n\nconst format = new GeoJSON();\n\n/**\n * Responsible for loading and display data from a Tralis service.\n *\n * @example\n * import { TralisLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new TralisLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>\n *\n * @extends {Layer}\n * @implements {TralisLayerInterface}\n */\nclass TralisLayer extends mixin(Layer) {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @private\n   */\n  constructor(options = {}) {\n    // We use a group to be able to add custom vector layer in extended class.\n    // For example TrajservLayer use a vectorLayer to display the complete trajectory.\n    super({\n      ...options,\n    });\n\n    /** @ignore */\n    this.olLayer =\n      options.olLayer ||\n      new Group({\n        layers: [\n          new VectorLayer({\n            source: new VectorSource({ features: [] }),\n            style: options.fullTrajectoryStyle || fullTrajectoryStyle,\n          }),\n          new OLLayer({\n            source: new Source({}),\n            render: (frameState) => {\n              if (!this.tracker || !this.tracker.canvas) {\n                return null;\n              }\n\n              if (!this.container) {\n                this.container = document.createElement('div');\n                this.container.style.position = 'absolute';\n                this.container.style.width = '100%';\n                this.container.style.height = '100%';\n                this.transformContainer = document.createElement('div');\n                this.transformContainer.style.position = 'absolute';\n                this.transformContainer.style.width = '100%';\n                this.transformContainer.style.height = '100%';\n                this.container.appendChild(this.transformContainer);\n                this.tracker.canvas.style.position = 'absolute';\n                this.tracker.canvas.style.top = '0';\n                this.tracker.canvas.style.left = '0';\n                this.tracker.canvas.style.transformOrigin = 'top left';\n                this.transformContainer.appendChild(this.tracker.canvas);\n              }\n\n              if (this.renderedViewState) {\n                const { center, resolution, rotation } = frameState.viewState;\n                const {\n                  center: renderedCenter,\n                  resolution: renderedResolution,\n                  rotation: renderedRotation,\n                } = this.renderedViewState;\n\n                if (renderedResolution / resolution >= 3) {\n                  // Avoid having really big points when zooming fast.\n                  const { canvas } = this.tracker;\n                  const context = canvas.getContext('2d');\n                  context.clearRect(0, 0, canvas.width, canvas.height);\n                } else {\n                  const pixelCenterRendered =\n                    this.map.getPixelFromCoordinate(renderedCenter);\n                  const pixelCenter = this.map.getPixelFromCoordinate(center);\n                  this.transformContainer.style.transform = composeCssTransform(\n                    pixelCenterRendered[0] - pixelCenter[0],\n                    pixelCenterRendered[1] - pixelCenter[1],\n                    renderedResolution / resolution,\n                    renderedResolution / resolution,\n                    rotation - renderedRotation,\n                    0,\n                    0,\n                  );\n                }\n              }\n              return this.container;\n            },\n          }),\n        ],\n      });\n\n    // We store the layer used to highlight the full Trajectory\n    this.vectorLayer = this.olLayer.getLayers().item(0);\n\n    // Options the last render run did happen. If something changes\n    // we have to render again\n    /** @ignore */\n    this.renderState = {\n      center: [0, 0],\n      zoom: null,\n      rotation: 0,\n    };\n  }\n\n  attachToMap(map) {\n    super.attachToMap(map);\n    if (this.map) {\n      this.olListenersKeys.push(\n        this.map.on(['moveend', 'change:target'], (evt) => {\n          const view = this.map.getView();\n          if (view.getAnimating() || view.getInteracting()) {\n            return;\n          }\n          const zoom = view.getZoom();\n\n          // Update the interval between render updates\n          if (this.currentZoom !== zoom) {\n            this.onZoomEnd(evt);\n          }\n          this.currentZoom = zoom;\n\n          this.onMoveEnd(evt);\n        }),\n      );\n    }\n  }\n\n  /**\n   * Destroy the container of the tracker.\n   */\n  detachFromMap() {\n    super.detachFromMap();\n    this.container = null;\n  }\n\n  /**\n   * Detect in the canvas if there is data to query at a specific coordinate.\n   * @param {ol/coordinate~Coordinate}  coordinate The coordinate to test\n   * @returns\n   */\n  hasFeatureInfoAtCoordinate(coordinate) {\n    if (this.map && this.tracker && this.tracker.canvas) {\n      const context = this.tracker.canvas.getContext('2d');\n      const pixel = this.map.getPixelFromCoordinate(coordinate);\n      return !!context.getImageData(\n        pixel[0] * this.pixelRatio,\n        pixel[1] * this.pixelRatio,\n        1,\n        1,\n      ).data[3];\n    }\n    return false;\n  }\n\n  /**\n   * Render the trajectories using current map's size, resolution and rotation.\n   * @param {boolean} noInterpolate if true, renders the vehicles without interpolating theirs positions.\n   * @overrides\n   */\n  renderTrajectories(noInterpolate) {\n    const view = this.map.getView();\n    super.renderTrajectories(\n      {\n        size: this.map.getSize(),\n        center: this.map.getView().getCenter(),\n        extent: view.calculateExtent(),\n        resolution: view.getResolution(),\n        rotation: view.getRotation(),\n        zoom: view.getZoom(),\n        pixelRatio: this.pixelRatio,\n      },\n      noInterpolate,\n    );\n  }\n\n  /**\n   * Launch renderTrajectories. it avoids duplicating code in renderTrajectories methhod.\n   * @private\n   * @override\n   */\n  renderTrajectoriesInternal(viewState, noInterpolate) {\n    let isRendered = false;\n\n    const blockRendering =\n      this.map.getView().getAnimating() || this.map.getView().getInteracting();\n\n    // Don't render the map when the map is animating or interacting.\n    isRendered = blockRendering\n      ? false\n      : super.renderTrajectoriesInternal(viewState, noInterpolate);\n\n    // We update the current render state.\n    if (isRendered) {\n      this.renderedViewState = { ...viewState };\n\n      if (this.transformContainer) {\n        this.transformContainer.style.transform = '';\n      }\n    }\n  }\n\n  /**\n   * Return the delay in ms before the next rendering.\n   */\n  getRefreshTimeInMs() {\n    return super.getRefreshTimeInMs(this.map.getView().getZoom());\n  }\n\n  getFeatureInfoAtCoordinate(coordinate, options = {}) {\n    const resolution = this.map.getView().getResolution();\n    return super.getFeatureInfoAtCoordinate(coordinate, {\n      resolution,\n      ...options,\n    });\n  }\n\n  /**\n   * On move end we update the websocket with the new bbox.\n   *\n   * @param {ol/MapEvent~MapEvent} evt Moveend event\n   * @private\n   * @override\n   */\n  onMoveEnd() {\n    if (this.visible && this.isUpdateBboxOnMoveEnd) {\n      this.setBbox();\n    }\n\n    if (\n      this.visible &&\n      this.isUpdateBboxOnMoveEnd &&\n      this.isClickActive &&\n      this.selectedVehicleId\n    ) {\n      this.highlightTrajectory(this.selectedVehicleId);\n    }\n  }\n\n  /**\n   * Function called on moveend event only when the zoom has changed.\n   *\n   * @param {ol/MapEvent~MapEvent} evt Moveend event.\n   * @private\n   * @override\n   */\n  // eslint-disable-next-line no-unused-vars\n  onZoomEnd(evt) {\n    super.onZoomEnd(evt);\n  }\n\n  /**\n   * Update the cursor style when hovering a vehicle.\n   *\n   * @private\n   * @override\n   */\n  onFeatureHover(features, layer, coordinate) {\n    super.onFeatureHover(features, layer, coordinate);\n    this.map.getTargetElement().style.cursor = features.length\n      ? 'pointer'\n      : 'auto';\n  }\n\n  /**\n   * Display the complete trajectory of the vehicle.\n   *\n   * @private\n   * @override\n   */\n  onFeatureClick(features, layer, coordinate) {\n    super.onFeatureClick(features, layer, coordinate);\n    if (!features.length && this.vectorLayer) {\n      this.vectorLayer.getSource().clear();\n    }\n    if (this.selectedVehicleId) {\n      this.highlightTrajectory(this.selectedVehicleId);\n    }\n  }\n\n  /**\n   * Remove the trajectory form the list if necessary.\n   *\n   * @private\n   */\n  purgeTrajectory(trajectory, extent, zoom) {\n    return super.purgeTrajectory(\n      trajectory,\n      extent || this.map.getView().calculateExtent(),\n      zoom || this.map.getView().getZoom(),\n    );\n  }\n\n  /**\n   * Send the current bbox to the websocket\n   *\n   * @private\n   */\n  setBbox(extent, zoom) {\n    let newExtent = extent;\n    let newZoom = zoom;\n    if (!newExtent && this.isUpdateBboxOnMoveEnd) {\n      newExtent = extent || this.map.getView().calculateExtent();\n      newZoom = Math.floor(this.map.getView().getZoom());\n    }\n    super.setBbox(newExtent, newZoom);\n  }\n\n  /**\n   * Highlight the trajectory of journey.\n   * @private\n   */\n  highlightTrajectory(id) {\n    this.api\n      .getFullTrajectory(id, this.mode, this.generalizationLevel)\n      .then((fullTrajectory) => {\n        const vectorSource = this.vectorLayer.getSource();\n        vectorSource.clear();\n\n        if (\n          !fullTrajectory ||\n          !fullTrajectory.features ||\n          !fullTrajectory.features.length\n        ) {\n          return;\n        }\n        const features = format.readFeatures(fullTrajectory);\n        this.vectorLayer.getSource().addFeatures(features);\n      });\n  }\n\n  /**\n   * Create a copy of the TralisLayer.\n   * @param {Object} newOptions Options to override\n   * @return {TralisLayer} A TralisLayer\n   */\n  clone(newOptions) {\n    return new TralisLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default TralisLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/TralisLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 378,
    "kind": "variable",
    "name": "format",
    "memberof": "src/ol/layers/TralisLayer.js",
    "static": true,
    "longname": "src/ol/layers/TralisLayer.js~format",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/layers/TralisLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "class",
    "name": "TralisLayer",
    "memberof": "src/ol/layers/TralisLayer.js",
    "static": true,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/TralisLayer.js",
    "importStyle": "TralisLayer",
    "description": "Responsible for loading and display data from a Tralis service.",
    "examples": [
      "import { TralisLayer } from 'mobility-toolbox-js/ol';\n\nconst layer = new TralisLayer({\n  url: [yourUrl],\n  apiKey: [yourApiKey],\n});"
    ],
    "see": [
      "<a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "Layer"
    ],
    "implements": [
      "TralisLayerInterface"
    ]
  },
  {
    "__docId__": 380,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#constructor",
    "access": "private",
    "description": "Constructor.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "olLayer",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#olLayer",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "container",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#container",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "transformContainer",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#transformContainer",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "vectorLayer",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#vectorLayer",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "renderState",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#renderState",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "ignore": true,
    "type": {
      "types": [
        "{\"center\": *, \"zoom\": *, \"rotation\": *}"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#attachToMap",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "currentZoom",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#currentZoom",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#detachFromMap",
    "access": "public",
    "description": "Destroy the container of the tracker.",
    "lineNumber": 149,
    "params": [],
    "return": null
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "hasFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#hasFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Detect in the canvas if there is data to query at a specific coordinate.",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "The coordinate to test"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#renderTrajectories",
    "access": "public",
    "description": "Render the trajectories using current map's size, resolution and rotation.",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@overrides",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "noInterpolate",
        "description": "if true, renders the vehicles without interpolating theirs positions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "renderTrajectoriesInternal",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#renderTrajectoriesInternal",
    "access": "private",
    "description": "Launch renderTrajectories. it avoids duplicating code in renderTrajectories methhod.",
    "lineNumber": 199,
    "override": true,
    "params": [
      {
        "name": "viewState",
        "types": [
          "*"
        ]
      },
      {
        "name": "noInterpolate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 393,
    "kind": "member",
    "name": "renderedViewState",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#renderedViewState",
    "access": "public",
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "type": {
      "types": [
        "{...viewState: Object}"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "getRefreshTimeInMs",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#getRefreshTimeInMs",
    "access": "public",
    "description": "Return the delay in ms before the next rendering.",
    "lineNumber": 223,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "onMoveEnd",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#onMoveEnd",
    "access": "private",
    "description": "On move end we update the websocket with the new bbox.",
    "lineNumber": 242,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/MapEvent~MapEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Moveend event"
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "onZoomEnd",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#onZoomEnd",
    "access": "private",
    "description": "Function called on moveend event only when the zoom has changed.",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/MapEvent~MapEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Moveend event."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "onFeatureHover",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#onFeatureHover",
    "access": "private",
    "description": "Update the cursor style when hovering a vehicle.",
    "lineNumber": 275,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "onFeatureClick",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#onFeatureClick",
    "access": "private",
    "description": "Display the complete trajectory of the vehicle.",
    "lineNumber": 288,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "purgeTrajectory",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#purgeTrajectory",
    "access": "private",
    "description": "Remove the trajectory form the list if necessary.",
    "lineNumber": 303,
    "params": [
      {
        "name": "trajectory",
        "types": [
          "*"
        ]
      },
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "setBbox",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#setBbox",
    "access": "private",
    "description": "Send the current bbox to the websocket",
    "lineNumber": 316,
    "params": [
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "highlightTrajectory",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#highlightTrajectory",
    "access": "private",
    "description": "Highlight the trajectory of journey.",
    "lineNumber": 330,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/TralisLayer.js~TralisLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/TralisLayer.js~TralisLayer#clone",
    "access": "public",
    "description": "Create a copy of the TralisLayer.",
    "lineNumber": 354,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TralisLayer"
      ],
      "spread": false,
      "description": "A TralisLayer"
    }
  },
  {
    "__docId__": 404,
    "kind": "file",
    "name": "src/ol/layers/VectorLayer.js",
    "content": "import Layer from './Layer';\n\n/**\n * A class use to display vector data.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass VectorLayer extends Layer {\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate the coordinate to request the information at.\n   * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    let features = [];\n\n    if (this.map) {\n      const pixel = this.map.getPixelFromCoordinate(coordinate);\n      features = this.map.getFeaturesAtPixel(pixel, {\n        layerFilter: (l) => l === this.olLayer,\n        hitTolerance: this.hitTolerance,\n      });\n    }\n\n    return Promise.resolve({\n      features,\n      layer: this,\n      coordinate,\n    });\n  }\n\n  /**\n   * Create a copy of the VectorLayer.\n   * @param {Object} newOptions Options to override\n   * @return {VectorLayer} A VectorLayer\n   */\n  clone(newOptions) {\n    return new VectorLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default VectorLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/VectorLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "class",
    "name": "VectorLayer",
    "memberof": "src/ol/layers/VectorLayer.js",
    "static": true,
    "longname": "src/ol/layers/VectorLayer.js~VectorLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/VectorLayer.js",
    "importStyle": "VectorLayer",
    "description": "A class use to display vector data.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/VectorLayer.js~VectorLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/VectorLayer.js~VectorLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "the coordinate to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/VectorLayer.js~VectorLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/VectorLayer.js~VectorLayer#clone",
    "access": "public",
    "description": "Create a copy of the VectorLayer.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VectorLayer"
      ],
      "spread": false,
      "description": "A VectorLayer"
    }
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "src/ol/layers/WMSLayer.js",
    "content": "import GeoJSON from 'ol/format/GeoJSON';\nimport Layer from './Layer';\n\n/**\n * Class use to display a WMS layer.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass WMSLayer extends Layer {\n  /**\n   * @override\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /** @ignore */\n    this.abortController = new AbortController();\n    /** @ignore */\n    this.format = new GeoJSON();\n  }\n\n  /**\n   * Get features infos' Url.\n   * @param {ol/coordinate~Coordinate} coord\n   * @return {ol/layer/Layer~Layer}\n   */\n  getFeatureInfoUrl(coord) {\n    const projection = this.map.getView().getProjection();\n    const resolution = this.map.getView().getResolution();\n\n    if (this.olLayer.getSource().getFeatureInfoUrl) {\n      return this.olLayer\n        .getSource()\n        .getFeatureInfoUrl(coord, resolution, projection, {\n          info_format: 'application/json',\n          query_layers: this.olLayer.getSource().getParams().layers,\n        });\n    }\n    return false;\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate to request the information at.\n   * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    this.abortController.abort();\n    this.abortController = new AbortController();\n    const { signal } = this.abortController;\n    return fetch(this.getFeatureInfoUrl(coordinate), { signal })\n      .then((resp) => resp.json())\n      .then((r) => r.features)\n      .then((data) => ({\n        layer: this,\n        coordinate,\n        features: data.map((d) => this.format.readFeature(d)),\n      }))\n      .catch(() =>\n        // resolve an empty feature array something fails\n        Promise.resolve({\n          features: [],\n          coordinate,\n          layer: this,\n        }),\n      );\n  }\n\n  /**\n   * Create a copy of the WMSLayer.\n   * @param {Object} newOptions Options to override\n   * @return {WMSLayer} A WMSLayer\n   */\n  clone(newOptions) {\n    return new WMSLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default WMSLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/WMSLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "class",
    "name": "WMSLayer",
    "memberof": "src/ol/layers/WMSLayer.js",
    "static": true,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/layers/WMSLayer.js",
    "importStyle": "WMSLayer",
    "description": "Class use to display a WMS layer.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 410,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "override": true
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "abortController",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#abortController",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "name": "format",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#format",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "getFeatureInfoUrl",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#getFeatureInfoUrl",
    "access": "public",
    "description": "Get features infos' Url.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol/layer/Layer~Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 416,
    "kind": "method",
    "name": "clone",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#clone",
    "access": "public",
    "description": "Create a copy of the WMSLayer.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "WMSLayer"
      ],
      "spread": false,
      "description": "A WMSLayer"
    }
  },
  {
    "__docId__": 417,
    "kind": "file",
    "name": "src/ol/layers/index.js",
    "content": "export { default as Layer } from './Layer';\nexport { default as MapboxLayer } from './MapboxLayer';\nexport { default as MaplibreLayer } from './MaplibreLayer';\nexport { default as MapboxStyleLayer } from './MapboxStyleLayer';\nexport { default as RoutingLayer } from './RoutingLayer';\nexport { default as TralisLayer } from './TralisLayer';\nexport { default as VectorLayer } from './VectorLayer';\nexport { default as WMSLayer } from './WMSLayer';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/layers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 418,
    "kind": "file",
    "name": "src/ol/styles/fullTrajectoryDelayStyle.js",
    "content": "import { Style, Fill, Stroke, Circle } from 'ol/style';\n\nconst stroke = new Style({\n  zIndex: 2,\n  image: new Circle({\n    radius: 5,\n    fill: new Fill({\n      color: '#000000',\n    }),\n  }),\n  stroke: new Stroke({\n    color: '#000000',\n    width: 6,\n  }),\n});\n\nconst fill = new Style({\n  zIndex: 3,\n  image: new Circle({\n    radius: 4,\n    fill: new Fill({\n      color: '#a0a0a0',\n    }),\n  }),\n  stroke: new Stroke({\n    color: '#a0a0a0',\n    width: 4,\n  }),\n});\n\nconst fullTrajectoryDelaystyle = () => {\n  return [stroke, fill];\n};\n\nexport default fullTrajectoryDelaystyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/styles/fullTrajectoryDelayStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "name": "stroke",
    "memberof": "src/ol/styles/fullTrajectoryDelayStyle.js",
    "static": true,
    "longname": "src/ol/styles/fullTrajectoryDelayStyle.js~stroke",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 420,
    "kind": "variable",
    "name": "fill",
    "memberof": "src/ol/styles/fullTrajectoryDelayStyle.js",
    "static": true,
    "longname": "src/ol/styles/fullTrajectoryDelayStyle.js~fill",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "fullTrajectoryDelaystyle",
    "memberof": "src/ol/styles/fullTrajectoryDelayStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ol/styles/fullTrajectoryDelayStyle.js~fullTrajectoryDelaystyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": "fullTrajectoryDelaystyle",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "src/ol/styles/fullTrajectoryStyle.js",
    "content": "import { Style, Fill, Stroke, Circle } from 'ol/style';\nimport { getBgColor } from '../../common/trackerConfig';\n\nconst borderStyle = new Style({\n  zIndex: 2,\n  image: new Circle({\n    radius: 5,\n    fill: new Fill({\n      color: '#000000',\n    }),\n  }),\n  stroke: new Stroke({\n    color: '#000000',\n    width: 6,\n  }),\n});\n\nconst fullTrajectorystyle = (feature) => {\n  let lineColor = '#ffffff'; // white\n\n  const type = feature.get('type');\n  let stroke = feature.get('stroke');\n\n  if (stroke && stroke[0] !== '#') {\n    stroke = `#${stroke}`;\n  }\n\n  lineColor = stroke || getBgColor(type);\n\n  // Don't allow white lines, use red instead.\n  lineColor = /#ffffff/i.test(lineColor) ? '#ff0000' : lineColor;\n\n  const style = [\n    borderStyle,\n    new Style({\n      zIndex: 3,\n      image: new Circle({\n        radius: 4,\n        fill: new Fill({\n          color: lineColor,\n        }),\n      }),\n      stroke: new Stroke({\n        color: lineColor,\n        width: 4,\n      }),\n    }),\n  ];\n  return style;\n};\nexport default fullTrajectorystyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/styles/fullTrajectoryStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "variable",
    "name": "borderStyle",
    "memberof": "src/ol/styles/fullTrajectoryStyle.js",
    "static": true,
    "longname": "src/ol/styles/fullTrajectoryStyle.js~borderStyle",
    "access": "public",
    "export": false,
    "importPath": "mobility-toolbox-js/src/ol/styles/fullTrajectoryStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "fullTrajectorystyle",
    "memberof": "src/ol/styles/fullTrajectoryStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ol/styles/fullTrajectoryStyle.js~fullTrajectorystyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/src/ol/styles/fullTrajectoryStyle.js",
    "importStyle": "fullTrajectorystyle",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "file",
    "name": "src/ol/styles/index.js",
    "content": "export { default as fullTrajectoryStyle } from './fullTrajectoryStyle';\nexport { default as fullTrajectoryDelayStyle } from './fullTrajectoryDelayStyle';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/ol/styles/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 426,
    "kind": "file",
    "name": "src/setupTests.js",
    "content": "/* eslint-disable import/no-extraneous-dependencies */\nimport 'jest-canvas-mock';\nimport fetchTrajectoryByIdResponse from '../data/fetchTrajectoryById.json';\nimport fetchTrajectoriesResponse from '../data/fetchTrajectories.json';\nimport fetchTrajectoryStationsResponse from '../data/fetchTrajectoryStations.json';\nimport stopsSearchResponse from '../data/stopsSearch.json';\nimport fetchRouteResponse from '../data/fetchRoute.json';\n\nglobal.fetchTrajectoryByIdResponse = fetchTrajectoryByIdResponse;\nglobal.fetchTrajectoriesResponse = fetchTrajectoriesResponse;\nglobal.fetchTrajectoryStationsResponse = fetchTrajectoryStationsResponse;\nglobal.stopsSearchResponse = stopsSearchResponse;\nglobal.fetchRouteResponse = fetchRouteResponse;\n\nglobal.URL.createObjectURL = jest.fn(() => 'fooblob');\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/src/setupTests.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# mobility-toolbox-js\n\nToolbox for JavaScript applications in the domains of mobility and logistics.\nThe tools in this library have been inspired by many projects realized for public transport agencies, mobility providers and logistics companies.\n\n[![npm](https://img.shields.io/npm/v/mobility-toolbox-js.svg?style=flat-square)](https://www.npmjs.com/package/mobility-toolbox-js)\n[![Build](https://github.com/geops/mobility-toolbox-js/workflows/Build/badge.svg)](https://github.com/geops/mobility-toolbox-js/actions?query=workflow%3ABuild)\n[![Netlify Status](https://api.netlify.com/api/v1/badges/b368ab18-9dbf-416c-91f6-a82076b02c10/deploy-status)](https://app.netlify.com/sites/mobility-toolbox-js/deploys)\n\n## Main Features\n\n* Display [real-time vehicle positions and prognosis data](http://tracker.geops.ch/) on a map.\n* Search for [stops and stations](https://maps2.trafimage.ch) all over the world.\n* Get [precise geographic courses](https://geops.github.io/geops-routing-demo/) for all modes of transport.\n* Generate beautiful maps for public transport, mobility and logistics\n\n## Documentation and examples\n\nVisit https://master--mobility-toolbox-js.netlify.app/\n\n## Version 1.x.x\n\nThe master branch is now open for the version 2 development. The version 1 is still available in [1.x.x](https://github.com/geops/mobility-toolbox-js/tree/1.x.x) branch.\n",
    "longname": "/home/olivier/GIT/mobility-toolbox-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"mobility-toolbox-js\",\n  \"license\": \"MIT\",\n  \"description\": \"Toolbox for JavaScript applications in the domains of mobility and logistics.\",\n  \"version\": \"2.0.0-beta.12\",\n  \"main\": \"index.js\",\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./api\": \"./api/index.js\",\n    \"./mapbox\": \"./mapbox/index.js\",\n    \"./ol\": \"./ol/index.js\"\n  },\n  \"dependencies\": {\n    \"@turf/helpers\": \"^6.5.0\",\n    \"@turf/transform-rotate\": \"^6.5.0\",\n    \"lodash.debounce\": \"4.0.8\",\n    \"lodash.throttle\": \"4.1.1\",\n    \"path\": \"^0.12.7\",\n    \"query-string\": \"7.1.0\",\n    \"turf\": \"^3.0.14\",\n    \"uuid\": \"8.3.2\"\n  },\n  \"peerDependencies\": {\n    \"mapbox-gl\": \"^1\",\n    \"maplibre-gl\": \"^1\",\n    \"ol\": \"^6\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"7.16.12\",\n    \"@babel/eslint-parser\": \"7.16.5\",\n    \"@babel/plugin-transform-runtime\": \"7.16.10\",\n    \"@babel/preset-env\": \"^7.16.11\",\n    \"@babel/preset-react\": \"7.16.7\",\n    \"@commitlint/cli\": \"17.0.2\",\n    \"@commitlint/config-conventional\": \"17.0.2\",\n    \"autoprefixer\": \"9.7.6\",\n    \"cypress\": \"9.4.1\",\n    \"deepmerge\": \"4.2.2\",\n    \"esbuild\": \"^0.14.47\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"1.0.0\",\n    \"esdoc-publish-html-plugin\": \"1.1.2\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"eslint\": \"8.8.0\",\n    \"eslint-config-airbnb\": \"19.0.4\",\n    \"eslint-config-prettier\": \"8.3.0\",\n    \"eslint-import-resolver-webpack\": \"0.13.2\",\n    \"eslint-plugin-cypress\": \"2.12.1\",\n    \"eslint-plugin-import\": \"2.25.4\",\n    \"eslint-plugin-jsx-a11y\": \"6.5.1\",\n    \"eslint-plugin-prettier\": \"4.0.0\",\n    \"eslint-plugin-react\": \"7.28.0\",\n    \"eslint-plugin-react-hooks\": \"4.3.0\",\n    \"fixpack\": \"3.0.6\",\n    \"husky\": \"8.0.1\",\n    \"jest\": \"26.6.3\",\n    \"jest-canvas-mock\": \"2.3.1\",\n    \"jest-fetch-mock\": \"3.0.3\",\n    \"jest-serializer-html\": \"7.1.0\",\n    \"jest-websocket-mock\": \"2.3.0\",\n    \"lint-staged\": \"12.3.3\",\n    \"mapbox-gl\": \"1.13.2\",\n    \"maplibre-gl\": \"2.1.9\",\n    \"mock-socket\": \"9.1.2\",\n    \"ol\": \"6.12.0\",\n    \"postcss\": \"8.3.3\",\n    \"postcss-loader\": \"3.0.0\",\n    \"prettier\": \"2.5.1\",\n    \"sass\": \"1.52.2\",\n    \"sass-loader\": \"8.0.2\",\n    \"sort-json\": \"2.0.0\",\n    \"standard-version\": \"9.5.0\",\n    \"start-server-and-test\": \"1.14.0\",\n    \"stylelint\": \"14.3.0\",\n    \"stylelint-config-recommended-scss\": \"5.0.2\",\n    \"stylelint-config-standard\": \"24.0.0\",\n    \"stylelint-scss\": \"4.1.0\"\n  },\n  \"scripts\": {\n    \"apidoc\": \"esdoc\",\n    \"build\": \"yarn esbuild\",\n    \"coverage\": \"yarn test  --watchAll=false  --coverage --coverageDirectory=coverage\",\n    \"cy:open\": \"cypress open\",\n    \"cy:run\": \"cypress run\",\n    \"cy:test\": \"start-server-and-test start http://localhost:5000 'cypress run'\",\n    \"doc\": \"yarn apidoc && cp apidoc/index.json doc/src/components/Esdoc/\",\n    \"doc:dev\": \"yarn apidoc && webpack --mode development\",\n    \"esbuild\": \"rm -rf build && yarn esbuild:all && yarn esbuild:iife && cp README.md build/ && cp package.json build/\",\n    \"esbuild:all\": \"esbuild src/index.js src/**/*.js src/**/**/*.js --target=chrome100 --outdir=build/ --loader:.js=jsx\",\n    \"esbuild:iife\": \"yarn esbuild:iife:unminify && yarn esbuild:iife:minify\",\n    \"esbuild:iife:base\": \"esbuild src/iife.js --bundle --sourcemap --target=chrome100\",\n    \"esbuild:iife:minify\": \"yarn esbuild:iife:base --minify --outfile=build/mbt.min.js\",\n    \"esbuild:iife:unminify\": \"yarn esbuild:iife:base --outfile=build/mbt.js\",\n    \"format\": \"prettier --write 'src/**/*.js' && eslint 'src/**/*.js' --fix && stylelint 'src/**/*.css' 'src/**/*.scss' --fix\",\n    \"lib\": \"REACT_APP_LIB_MODE=1  webpack --mode production\",\n    \"lib:dev\": \"REACT_APP_LIB_MODE=1  webpack --mode development\",\n    \"link2\": \"cmdToAdd=$(node ./scripts/read-pkg-json.js add) && $cmdToAdd && yarn build && cmdToRemove=$(node ./scripts/read-pkg-json.js remove) && $cmdToRemove && cd build && yarn link\",\n    \"lint\": \"eslint 'src/**/*.js' && stylelint 'src/**/*.css' 'src/**/*.scss'\",\n    \"publish:beta\": \"HUSKY=0 yarn release -- --prerelease beta --skip.changelog && git push origin HEAD && yarn run build && cd build && HUSKY=0 yarn publish --tag beta && git push --tags \",\n    \"publish:beta:dryrun\": \"yarn release -- --prerelease beta --dry-run --skip.changelog\",\n    \"publish:public:dryrun\": \"yarn release --dry-run\",\n    \"release\": \"standard-version\",\n    \"dev\": \"yarn doc && yarn dev:examples\",\n    \"dev:examples\": \"cd doc && yarn dev\",\n    \"start\": \"yarn doc && cd doc && yarn build && yarn start\",\n    \"start:examples\": \"cd doc && yarn build && yarn start\",\n    \"test:watch\": \"yarn test --watchAll\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\",\n      \"last 1 ie version\"\n    ]\n  },\n  \"eslintConfig\": {\n    \"env\": {\n      \"cypress/globals\": true,\n      \"node\": true,\n      \"browser\": true,\n      \"es6\": true,\n      \"jest\": true\n    },\n    \"parser\": \"@babel/eslint-parser\",\n    \"extends\": [\n      \"airbnb\",\n      \"airbnb/hooks\",\n      \"prettier\"\n    ],\n    \"plugins\": [\n      \"cypress\",\n      \"prettier\"\n    ],\n    \"rules\": {\n      \"arrow-body-style\": 0,\n      \"react/jsx-filename-extension\": [\n        1,\n        {\n          \"extensions\": [\n            \".js\",\n            \".jsx\"\n          ]\n        }\n      ],\n      \"prettier/prettier\": \"error\"\n    },\n    \"settings\": {\n      \"import/resolver\": \"webpack\",\n      \"react\": {\n        \"version\": \"detect\"\n      }\n    }\n  },\n  \"keywords\": [\n    \"mobility\",\n    \"toolbox\"\n  ],\n  \"lint-staged\": {\n    \"(src|__mocks__)/**/*.js\": [\n      \"eslint --fix\",\n      \"prettier --write\",\n      \"git add\",\n      \"yarn test --bail --findRelatedTests\"\n    ],\n    \"package.json\": [\n      \"fixpack --sortToTop name --sortToTop license --sortToTop description --sortToTop version --sortToTop author --sortToTop main --sortToTop module --sortToTop files --sortToTop exports --sortToTop proxy --sortToTop dependencies --sortToTop peerDependencies --sortToTop devDependencies --sortToTop resolutions --sortToTop scripts\"\n    ],\n    \"src/**/*.{css,scss}\": [\n      \"stylelint --fix\"\n    ]\n  },\n  \"prettier\": {\n    \"trailingComma\": \"all\",\n    \"singleQuote\": true\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/geops/mobility-toolbox-js\"\n  },\n  \"stylelint\": {\n    \"plugins\": [\n      \"stylelint-scss\"\n    ],\n    \"extends\": [\n      \"stylelint-config-standard\",\n      \"stylelint-config-recommended-scss\"\n    ]\n  }\n}\n",
    "longname": "/home/olivier/GIT/mobility-toolbox-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "member",
    "name": "url",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#url",
    "access": "public",
    "description": "Url of the service.",
    "lineNumber": 18,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "apiKey",
    "memberof": "src/common/api/HttpAPI.js~HttpApi",
    "static": false,
    "longname": "src/common/api/HttpAPI.js~HttpApi#apiKey",
    "access": "public",
    "description": "Api key to access the service.",
    "lineNumber": 18,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#map",
    "access": "public",
    "description": "The map which the control refers to.",
    "lineNumber": 14,
    "type": {
      "types": [
        "ol/Map~Map",
        "mapboxgl.Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "active",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#active",
    "access": "public",
    "description": "Active the control.",
    "lineNumber": 14,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "element",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#element",
    "access": "public",
    "description": "The HTML element used to render the control.",
    "lineNumber": 14,
    "type": {
      "types": [
        "HTMLElement"
      ]
    }
  },
  {
    "kind": "member",
    "name": "target",
    "memberof": "src/common/controls/Control.js~Control",
    "static": false,
    "longname": "src/common/controls/Control.js~Control#target",
    "access": "public",
    "description": "The HTML element where to render the element property. Default is the map's element. Read only.",
    "lineNumber": 14,
    "type": {
      "types": [
        "HTMLElement"
      ]
    }
  },
  {
    "kind": "member",
    "name": "name",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#name",
    "access": "public",
    "description": "Name of the layer",
    "lineNumber": 26,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "key",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#key",
    "access": "public",
    "description": "Identifier of the layer. Must be unique.",
    "lineNumber": 26,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "copyrights",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#copyrights",
    "access": "public",
    "description": "Array of copyrights.",
    "lineNumber": 26,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "kind": "member",
    "name": "isBaseLayer",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isBaseLayer",
    "access": "public",
    "description": "Define if the layer is a base layer. Read-only.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "isQueryable",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isQueryable",
    "access": "public",
    "description": "Define if the layer can be queried. If false, it will set isHoverActive and isClickActive to false. Read-only.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "isClickActive",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isClickActive",
    "access": "public",
    "description": "If true feature information will be queried on user click event. See inherited layers for more informations. Read-only.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "isHoverActive",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isHoverActive",
    "access": "public",
    "description": "If true feature information will be queried on pointer move event. See inherited layers for more informations. Read-only.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "isMobilityLayer",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#isMobilityLayer",
    "access": "public",
    "description": "Custom property for duck typing since `instanceof` is not working when the instance was created on different bundles. Read-only.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "children",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#children",
    "access": "public",
    "description": "List of children.",
    "lineNumber": 26,
    "type": {
      "types": [
        "Layer[]"
      ]
    }
  },
  {
    "kind": "member",
    "name": "visible",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#visible",
    "access": "public",
    "description": "Define if the layer is visible or not.",
    "lineNumber": 26,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "hitTolerance",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#hitTolerance",
    "access": "public",
    "description": "Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.",
    "lineNumber": 26,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "member",
    "name": "properties",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#properties",
    "access": "public",
    "description": "Custom properties.",
    "lineNumber": 26,
    "type": {
      "types": [
        "Object"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/common/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/common/layers/Layer.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 26,
    "type": {
      "types": [
        "ol/Map~Map",
        "mapboxgl.Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/mapbox/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/mapbox/layers/Layer.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 20,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "src/ol/layers/Layer.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 20,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxLayer.js~MapboxLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 24,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "src/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 22,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/RoutingLayer.js~RoutingLayer",
    "static": false,
    "longname": "src/ol/layers/RoutingLayer.js~RoutingLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 64,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/VectorLayer.js~VectorLayer",
    "static": false,
    "longname": "src/ol/layers/VectorLayer.js~VectorLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 9,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "src/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "src/ol/layers/WMSLayer.js~WMSLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 10,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  }
]