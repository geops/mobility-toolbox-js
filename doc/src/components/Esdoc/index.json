[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "build/.external-ecmascript.js",
    "static": true,
    "longname": "build/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "ol/Observable~Observable",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Observable-Observable.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/Observable~Observable",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "ol/Map~Map",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/Map~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "ol/coordinate~Coordinate",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_coordinate.html#~Coordinate",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/coordinate~Coordinate",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "ol/layer/Layer~Layer",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_layer_Layer-Layer.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/layer/Layer~Layer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "ol/Feature~Feature",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/Feature~Feature",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "ol/geom/Point~Point",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_Point-Point.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/geom/Point~Point",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "ol/geom/LineString~LineString",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_LineString-LineString.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/geom/LineString~LineString",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "ol/geom/MultiLineString~MultiLineString",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_geom_MultiLineString-MultiLineString.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/geom/MultiLineString~MultiLineString",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "ol/format/GeoJSON",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_format_GeoJSON-GeoJSON.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/format/GeoJSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "ol/MapEvent~MapEvent",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_MapEvent-MapEvent.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/MapEvent~MapEvent",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "ol/events~EventsKey",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_events.html#~EventsKey",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/events~EventsKey",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "ol/Object~BaseObject",
    "externalLink": "https://openlayers.org/en/latest/apidoc/module-ol_Object-BaseObject.html",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~ol/Object~BaseObject",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "mapboxgl.Map",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "mapboxgl.Layer",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.Layer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "mapboxgl.map.event:mousemove",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map.event:mousemove",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.map.event:mousemove",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "mapboxgl.map.event:zoomend",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map.event:zoomend",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.map.event:zoomend",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "mapboxgl.MapMouseEvent",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/events/#mapmouseevent",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.MapMouseEvent",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "mapboxgl.styleLayer",
    "externalLink": "https://docs.mapbox.com/help/glossary/layer/",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.styleLayer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "mapboxgl.filter",
    "externalLink": "https://docs.mapbox.com/help/glossary/filter/",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.filter",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "mapboxgl.IControl",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/markers/#icontrol",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.IControl",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "mapboxgl.position",
    "externalLink": "https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~mapboxgl.position",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "AbortController",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/AbortController",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~AbortController",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "GeoJSONPoint",
    "externalLink": "https://tools.ietf.org/html/rfc7946#section-3.1.2",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~GeoJSONPoint",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "GeoJSONFeature",
    "externalLink": "https://tools.ietf.org/html/rfc7946#section-3.2",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~GeoJSONFeature",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "Canvas",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~Canvas",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~CanvasRenderingContext2D",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "GetTrajectoriesParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectories",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~GetTrajectoriesParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "GetTrajectoryByIdParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectorybyid",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~GetTrajectoryByIdParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "TrajservTrajectory",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#model-single_trajectory",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~TrajservTrajectory",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "GetTrajectoryStationsParams",
    "externalLink": "https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajstations",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~GetTrajectoryStationsParams",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "HTMLElement",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/HTMLElement",
    "memberof": "build/.externals.js",
    "static": true,
    "longname": "build/.externals.js~HTMLElement",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "build/api/RealtimeAPI.js",
    "content": "import WebSocketAPI from '../common/api/WebSocketAPI';\nimport debounceWebsocketMessages from '../common/utils/debounceWebsocketMessages';\nimport getModeSuffix from '../common/utils/getRealtimeModeSuffix';\n/**\n * Enum for Realtime modes.\n * @readonly\n * @typedef {string} RealtimeMode\n * @property {string} RAW \"raw\"\n * @property {string} SCHEMATIC \"schematic\"\n * @property {string} TOPOGRAPHIC \"topographic\"\n * @enum {RealtimeMode}\n */\nexport const RealtimeModes = {\n    RAW: 'raw',\n    TOPOGRAPHIC: 'topographic',\n    SCHEMATIC: 'schematic',\n};\n/**\n * This class provides convenience methods to access to the [geOps realtime api](https://developer.geops.io/apis/realtime/).\n *\n * @example\n * import { RealtimeAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new RealtimeAPI({\n *   url: \"yourUrl\",\n *   apiKey: \"yourApiKey\"\n * });\n *\n * @example\n * import { RealtimeAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new RealtimeAPI(\"yourUrl\");\n */\nclass RealtimeAPI {\n    /**\n     * Constructor\n     *\n     * @param {Object|string} options A string representing the url of the service or an object containing the url and the apiKey.\n     * @param {string} options.url Url to the [geOps realtime api](https://developer.geops.io/apis/realtime/).\n     * @param {string} options.apiKey Access key for [geOps apis](https://developer.geops.io/).\n     * @param {string} [options.prefix=''] Service prefix to specify tenant.\n     * @param {string} [options.projection] The epsg code of the projection for features. Default to EPSG:3857.\n     * @param {number[4]} [options.bbox=[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.\n     */\n    constructor(options = {}) {\n        this.defineProperties(options);\n        /** @ignore */\n        this.prefix = options.prefix || '';\n        /** @ignore */\n        this.onOpen = this.onOpen.bind(this);\n    }\n    /* @private */\n    defineProperties(options) {\n        let opt = options;\n        if (typeof options === 'string') {\n            opt = { url: options };\n        }\n        const { apiKey } = opt;\n        let { url, projection, bbox, buffer = [100, 100] } = opt;\n        const wsApi = new WebSocketAPI();\n        if (!url) {\n            url = 'wss://api.geops.io/tracker-ws/v1/';\n        }\n        if (apiKey) {\n            url = `${url}?key=${apiKey}`;\n        }\n        Object.defineProperties(this, {\n            url: {\n                get: () => url,\n                set: (newUrl) => {\n                    url = newUrl;\n                    this.open();\n                },\n            },\n            projection: {\n                get: () => projection,\n                set: (newProjection) => {\n                    if (newProjection !== projection) {\n                        projection = newProjection;\n                        if (this.wsApi) {\n                            this.wsApi.send(`PROJECTION ${projection}`);\n                        }\n                    }\n                },\n            },\n            bbox: {\n                get: () => bbox,\n                set: (newBbox) => {\n                    if (JSON.stringify(newBbox) !== JSON.stringify(bbox)) {\n                        bbox = newBbox;\n                        if (this.wsApi && bbox) {\n                            this.wsApi.send(`BBOX ${bbox.join(' ')}`);\n                        }\n                    }\n                },\n            },\n            buffer: {\n                get: () => buffer,\n                set: (newBuffer) => {\n                    if (JSON.stringify(newBuffer) !== JSON.stringify(buffer)) {\n                        buffer = newBuffer;\n                        if (this.wsApi) {\n                            this.wsApi.send(`BUFFER ${buffer.join(' ')}`);\n                        }\n                    }\n                },\n            },\n            /**\n             * The websocket helper class to connect the websocket.\n             *\n             * @private\n             */\n            wsApi: {\n                value: wsApi,\n                writable: true,\n            },\n            /**\n             * Interval between PING request in ms.\n             * If equal to 0,  no PING request are sent.\n             * @type {number}\n             * @private\n             */\n            pingIntervalMs: {\n                value: options.pingIntervalMs || 10000,\n                writable: true,\n            },\n            /**\n             * Timeout in ms after an automatic reconnection when the websoscket has been closed by the server.\n             * @type {number}\n             */\n            reconnectTimeoutMs: {\n                value: options.pingIntervalMs || 100,\n                writable: true,\n            },\n        });\n    }\n    open() {\n        // Register BBOX and PROJECTION messages must be send before previous subscriptions.\n        this.wsApi.connect(this.url, this.onOpen);\n        // Register reconnection on close.\n        if (this.wsApi.websocket) {\n            this.wsApi.websocket.onclose = () => {\n                this.onClose();\n            };\n        }\n    }\n    /**\n     * Close the websocket connection without reconnection.\n     */\n    close() {\n        this.wsApi.close();\n    }\n    /**\n     * Unsubscribe trajectory and deleted_vehicles channels. To resubscribe you have to set a new BBOX.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    reset() {\n        this.wsApi.send('RESET');\n    }\n    /**\n     * Callback when the websocket is opened and ready.\n     * It applies the bbox and the projection.\n     */\n    onOpen() {\n        if (this.projection) {\n            this.wsApi.send(`PROJECTION ${this.projection}`);\n        }\n        if (this.bbox) {\n            this.wsApi.send(`BBOX ${this.bbox.join(' ')}`);\n        }\n        if (this.buffer) {\n            this.wsApi.send(`BUFFER ${this.buffer.join(' ')}`);\n        }\n        /**\n         * Keep websocket alive\n         */\n        if (this.pingIntervalMs) {\n            window.clearInterval(this.pingInterval);\n            /** @ignore */\n            this.pingInterval = window.setInterval(() => {\n                this.wsApi.send('PING');\n            }, this.pingIntervalMs);\n        }\n    }\n    /**\n     * Callback when the websocket is closed by the server.\n     * It auto reconnects after a timeout.\n     */\n    onClose() {\n        window.clearTimeout(this.pingInterval);\n        window.clearTimeout(this.reconnectTimeout);\n        if (this.reconnectTimeoutMs) {\n            /** @ignore */\n            this.reconnectTimeout = window.setTimeout(() => this.open(), this.reconnectTimeoutMs);\n        }\n    }\n    /**\n     * Subscribe to a channel.\n     *\n     * @param {string} channel Name of the websocket channel to subscribe.\n     * @param {function} onSuccess Callback when the subscription succeeds.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     * @private\n     */\n    subscribe(channel, onSuccess, onError = () => { }, quiet = false) {\n        if (!channel || !onSuccess) {\n            return;\n        }\n        this.wsApi.subscribe({ channel }, onSuccess, onError, quiet);\n    }\n    /**\n     * Unsubscribe both modes of a channel.\n     *\n     * @param {string} channel Name of the websocket channel to unsubscribe.\n     * @param {string} suffix Suffix to add to the channel name.\n     * @param {function} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     * @private\n     */\n    unsubscribe(channel, suffix = '', onMessage) {\n        const suffixSchenatic = getModeSuffix(RealtimeModes.SCHEMATIC, RealtimeModes);\n        const suffixTopographic = getModeSuffix(RealtimeModes.TOPOGRAPHIC, RealtimeModes);\n        this.wsApi.unsubscribe(`${channel}${suffixSchenatic}${suffix || ''}`, onMessage);\n        this.wsApi.unsubscribe(`${channel}${suffixTopographic}${suffix || ''}`, onMessage);\n    }\n    /**\n     * Subscribe to departures channel of a given station.\n     *\n     * @param {number} stationId UIC of the station.\n     * @param {Boolean} sortByMinArrivalTime Sort by minimum arrival time\n     * @param {function(departures:Departure[])} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeDepartures(stationId, onMessage, onError = () => { }, quiet = false) {\n        this.subscribe(`timetable_${stationId}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe from current departures channel.\n     * @param {RealtimeStationId} id Station's id\n     * @param {function(data: { content: RealtimeDeparture[] })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeDepartures(id, onMessage) {\n        this.unsubscribe(`timetable_${id}`, '', onMessage);\n    }\n    /**\n     * Subscribe to the disruptions channel for tenant.\n     *\n     * @param {function(data: { content: RealtimeNews[] })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeDisruptions(onMessage, onError = () => { }, quiet = false) {\n        this.subscribe(`${this.prefix}newsticker`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe disruptions.\n     *\n     * @param {function(data: { content: RealtimeNews[] })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeDisruptions(onMessage) {\n        this.unsubscribe(`${this.prefix}newsticker`, '', onMessage);\n    }\n    /**\n     * Return a station with a given uic number and a mode.\n     *\n     * @param {number} uic UIC of the station.\n     * @param {RealtimeMode} mode Realtime mode.\n     * @return {Promise<{data: { content: RealtimeStation }}>} A station.\n     */\n    getStation(uic, mode) {\n        const params = {\n            channel: `station${getModeSuffix(mode, RealtimeModes)}`,\n            args: uic,\n        };\n        return new Promise((resolve, reject) => {\n            this.wsApi.get(params, resolve, reject);\n        });\n    }\n    /**\n     * Get the list of ststions available for a specifc mode. The promise is resolved every 100ms\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {number} timeout = 100 Duration in ms between each promise resolve calls.\n     * @return {Promise<RealtimeStation[]>} An array of stations.\n     */\n    getStations(mode, timeout = 100) {\n        return new Promise((resolve) => {\n            this.wsApi.get({\n                channel: `station${getModeSuffix(mode, RealtimeModes)}`,\n            }, debounceWebsocketMessages(resolve, undefined, timeout));\n        });\n    }\n    /**\n     * Subscribe to stations channel.\n     * One message pro station.\n     *\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {function(data: { content: RealtimeStation })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeStations(mode, onMessage, onError = () => { }, quiet = false) {\n        this.subscribe(`station${getModeSuffix(mode, RealtimeModes)}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe to stations channel.\n     * @param {function(data: { content: RealtimeStation })} onMessage The listener callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribe.\n     */\n    unsubscribeStations(onMessage) {\n        this.unsubscribe('station', '', onMessage);\n    }\n    /**\n     * Subscribe to extra_geoms channel.\n     *\n     * @param {function(data: { content: RealtimeExtraGeom })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeExtraGeoms(onMessage, onError = () => { }, quiet = false) {\n        this.subscribe('extra_geoms', onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe to extra_geoms channel.\n     * @param {function(data: { content: RealtimeExtraGeom })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeExtraGeoms(onMessage) {\n        this.unsubscribe('extra_geoms', '', onMessage);\n    }\n    /**\n     * Subscribe to trajectory channel.\n     *\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {function(data: { content: RealtimeTrajectoryResponse[] })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeTrajectory(mode, onMessage, onError = () => { }, quiet = false) {\n        this.unsubscribeTrajectory(onMessage);\n        this.subscribe(`trajectory${getModeSuffix(mode, RealtimeModes)}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe to trajectory channels.\n     * @param {function(data: { content: RealtimeTrajectoryResponse[] })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeTrajectory(onMessage) {\n        this.unsubscribe(`trajectory`, '', onMessage);\n    }\n    /**\n     * Subscribe to deleted_vhicles channel.\n     *\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {function(data: { content: RealtimeTrainId })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeDeletedVehicles(mode, onMessage, onError = () => { }, quiet = false) {\n        this.unsubscribeDeletedVehicles(onMessage);\n        this.subscribe(`deleted_vehicles${getModeSuffix(mode, RealtimeModes)}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe to deleted_vhicles channels.\n     * @param {function(data: { content: RealtimeTrainId })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeDeletedVehicles(onMessage) {\n        this.unsubscribe('deleted_vehicles', '', onMessage);\n    }\n    /**\n     * Get a full trajectory of a vehicule .\n     *\n     * @param {string} id A vehicle id.\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {string} generalizationLevel The generalization level to request. Can be one of 5 (more generalized), 10, 30, 100, undefined (less generalized).\n     * @return {Promise<{ data: { content: FullTrajectory } }>} Return a full trajectory.\n     */\n    getFullTrajectory(id, mode, generalizationLevel) {\n        const channel = [`full_trajectory${getModeSuffix(mode, RealtimeModes)}`];\n        if (id) {\n            channel.push(id);\n        }\n        if ((!mode || mode === RealtimeModes.TOPOGRAPHIC) && generalizationLevel) {\n            channel.push(`gen${generalizationLevel}`);\n        }\n        const params = {\n            channel: channel.join('_'),\n        };\n        return new Promise((resolve, reject) => {\n            this.wsApi.get(params, resolve, reject);\n        });\n    }\n    /**\n     * Subscribe to full_trajectory channel of a given vehicle.\n     *\n     * @param {string} id A vehicle id.\n     * @param {RealtimeMode} mode Realtime mode.\n     * @param {function(data: { content: RealtimeFullTrajectory })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeFullTrajectory(id, mode, onMessage, onError = () => { }, quiet = false) {\n        this.subscribe(`full_trajectory${getModeSuffix(mode, RealtimeModes)}_${id}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe from full_trajectory channel\n     *\n     * @param {string} id A vehicle id.\n     * @param {function(data: { content: RealtimeFullTrajectory })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeFullTrajectory(id, onMessage) {\n        this.unsubscribe('full_trajectory', `_${id}`, onMessage);\n    }\n    /**\n     * Get the list of stops for this vehicle.\n     *\n     * @param {string} id A vehicle id.\n     * @return {Promise<{ data: { content: StopSequence[] } }>} Returns a stop sequence object.\n     */\n    getStopSequence(id) {\n        return new Promise((resolve, reject) => {\n            this.wsApi.get({\n                channel: `stopsequence_${id}`,\n            }, resolve, reject);\n        });\n    }\n    /**\n     * Subscribe to stopsequence channel of a given vehicle.\n     *\n     * @param {string} id A vehicle id.\n     * @param {function(data: { content: StopSequence[] })} onMessage Function called on each message of the channel.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeStopSequence(id, onMessage, onError = () => { }, quiet = false) {\n        this.subscribe(`stopsequence_${id}`, onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe from stopsequence channel\n     *\n     * @param {string} id A vehicle id.\n     * @param {function(data: { content: StopSequence[] })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeStopSequence(id, onMessage) {\n        this.unsubscribe(`stopsequence`, `_${id}`, onMessage);\n    }\n    /**\n     * Subscribe to healthcheck channel.\n     * @param {function(data: { content: string })} onMessage Callback when the subscribe to healthcheck channel succeeds.\n     * @param {function} onError Callback when the subscription fails.\n     * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n     */\n    subscribeHealthCheck(onMessage, onError = () => { }, quiet = false) {\n        this.subscribe('healthcheck', onMessage, onError, quiet);\n    }\n    /**\n     * Unsubscribe to healthcheck channel.\n     * @param {function(data: { content: string })} onMessage Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     */\n    unsubscribeHealthCheck(onMessage) {\n        this.unsubscribe('healthcheck', '', onMessage);\n    }\n}\nexport default RealtimeAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/api/RealtimeAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "typedef",
    "name": "RealtimeMode",
    "memberof": "build/api/RealtimeAPI.js",
    "static": true,
    "longname": "build/api/RealtimeAPI.js~RealtimeMode",
    "access": "public",
    "description": "Enum for Realtime modes.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      },
      {
        "tagName": "@enum",
        "tagValue": "{RealtimeMode}"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "RAW",
        "description": "\"raw\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "SCHEMATIC",
        "description": "\"schematic\""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "TOPOGRAPHIC",
        "description": "\"topographic\""
      }
    ],
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "RealtimeMode"
    }
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "RealtimeAPI",
    "memberof": "build/api/RealtimeAPI.js",
    "static": true,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/api/RealtimeAPI.js",
    "importStyle": "RealtimeAPI",
    "description": "This class provides convenience methods to access to the [geOps realtime api](https://developer.geops.io/apis/realtime/).",
    "examples": [
      "import { RealtimeAPI } from 'mobility-toolbox-js/api';\n\nconst api = new RealtimeAPI({\n  url: \"yourUrl\",\n  apiKey: \"yourApiKey\"\n});",
      "import { RealtimeAPI } from 'mobility-toolbox-js/api';\n\nconst api = new RealtimeAPI(\"yourUrl\");"
    ],
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "A string representing the url of the service or an object containing the url and the apiKey."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "Url to the [geOps realtime api](https://developer.geops.io/apis/realtime/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps apis](https://developer.geops.io/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "options.prefix",
        "description": "Service prefix to specify tenant."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.projection",
        "description": "The epsg code of the projection for features. Default to EPSG:3857."
      },
      {
        "nullable": null,
        "types": [
          "number[4]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.",
        "defaultRaw": "[minX, minY, maxX, maxY, zoom, tenant] The bounding box to receive data from.",
        "name": "options.bbox",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "prefix",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#prefix",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#defineProperties",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "open",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#open",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "close",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#close",
    "access": "public",
    "description": "Close the websocket connection without reconnection.",
    "lineNumber": 150,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "reset",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#reset",
    "access": "public",
    "description": "Unsubscribe trajectory and deleted_vehicles channels. To resubscribe you have to set a new BBOX.",
    "lineNumber": 157,
    "params": [],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "onOpen",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#onOpen",
    "access": "public",
    "description": "Callback when the websocket is opened and ready.\nIt applies the bbox and the projection.",
    "lineNumber": 164,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "pingInterval",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#pingInterval",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "onClose",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#onClose",
    "access": "public",
    "description": "Callback when the websocket is closed by the server.\nIt auto reconnects after a timeout.",
    "lineNumber": 189,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "reconnectTimeout",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#reconnectTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "subscribe",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribe",
    "access": "private",
    "description": "Subscribe to a channel.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "Name of the websocket channel to subscribe."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onSuccess",
        "description": "Callback when the subscription succeeds."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribe",
    "access": "private",
    "description": "Unsubscribe both modes of a channel.",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "Name of the websocket channel to unsubscribe."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suffix",
        "description": "Suffix to add to the channel name."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "subscribeDepartures",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeDepartures",
    "access": "public",
    "description": "Subscribe to departures channel of a given station.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "stationId",
        "description": "UIC of the station."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sortByMinArrivalTime",
        "description": "Sort by minimum arrival time"
      },
      {
        "nullable": null,
        "types": [
          "function(departures:Departure[])"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "unsubscribeDepartures",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeDepartures",
    "access": "public",
    "description": "Unsubscribe from current departures channel.",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeStationId"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Station's id"
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeDeparture[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "subscribeDisruptions",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeDisruptions",
    "access": "public",
    "description": "Subscribe to the disruptions channel for tenant.",
    "lineNumber": 253,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeNews[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "unsubscribeDisruptions",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeDisruptions",
    "access": "public",
    "description": "Unsubscribe disruptions.",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeNews[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getStation",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#getStation",
    "access": "public",
    "description": "Return a station with a given uic number and a mode.",
    "lineNumber": 271,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "uic",
        "description": "UIC of the station."
      },
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{data: { content: RealtimeStation }}>"
      ],
      "spread": false,
      "description": "A station."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "getStations",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#getStations",
    "access": "public",
    "description": "Get the list of ststions available for a specifc mode. The promise is resolved every 100ms",
    "lineNumber": 286,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": "= 100 Duration in ms between each promise resolve calls."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RealtimeStation[]>"
      ],
      "spread": false,
      "description": "An array of stations."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "subscribeStations",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeStations",
    "access": "public",
    "description": "Subscribe to stations channel.\nOne message pro station.",
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeStation })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "unsubscribeStations",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeStations",
    "access": "public",
    "description": "Unsubscribe to stations channel.",
    "lineNumber": 309,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeStation })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "The listener callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribe."
      }
    ],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "subscribeExtraGeoms",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeExtraGeoms",
    "access": "public",
    "description": "Subscribe to extra_geoms channel.",
    "lineNumber": 319,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeExtraGeom })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "unsubscribeExtraGeoms",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeExtraGeoms",
    "access": "public",
    "description": "Unsubscribe to extra_geoms channel.",
    "lineNumber": 326,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeExtraGeom })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "subscribeTrajectory",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeTrajectory",
    "access": "public",
    "description": "Subscribe to trajectory channel.",
    "lineNumber": 337,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeTrajectoryResponse[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "unsubscribeTrajectory",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeTrajectory",
    "access": "public",
    "description": "Unsubscribe to trajectory channels.",
    "lineNumber": 345,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeTrajectoryResponse[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "subscribeDeletedVehicles",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeDeletedVehicles",
    "access": "public",
    "description": "Subscribe to deleted_vhicles channel.",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeTrainId })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "unsubscribeDeletedVehicles",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeDeletedVehicles",
    "access": "public",
    "description": "Unsubscribe to deleted_vhicles channels.",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeTrainId })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "getFullTrajectory",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#getFullTrajectory",
    "access": "public",
    "description": "Get a full trajectory of a vehicule .",
    "lineNumber": 375,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "generalizationLevel",
        "description": "The generalization level to request. Can be one of 5 (more generalized), 10, 30, 100, undefined (less generalized)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{ data: { content: FullTrajectory "
      ],
      "spread": false,
      "description": "}>} Return a full trajectory."
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "subscribeFullTrajectory",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeFullTrajectory",
    "access": "public",
    "description": "Subscribe to full_trajectory channel of a given vehicle.",
    "lineNumber": 399,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Realtime mode."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeFullTrajectory })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "unsubscribeFullTrajectory",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeFullTrajectory",
    "access": "public",
    "description": "Unsubscribe from full_trajectory channel",
    "lineNumber": 408,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: RealtimeFullTrajectory })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "getStopSequence",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#getStopSequence",
    "access": "public",
    "description": "Get the list of stops for this vehicle.",
    "lineNumber": 417,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{ data: { content: StopSequence[] "
      ],
      "spread": false,
      "description": "}>} Returns a stop sequence object."
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "subscribeStopSequence",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeStopSequence",
    "access": "public",
    "description": "Subscribe to stopsequence channel of a given vehicle.",
    "lineNumber": 432,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: StopSequence[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Function called on each message of the channel."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "unsubscribeStopSequence",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeStopSequence",
    "access": "public",
    "description": "Unsubscribe from stopsequence channel",
    "lineNumber": 441,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "A vehicle id."
      },
      {
        "nullable": null,
        "types": [
          "function(data: { content: StopSequence[] })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "subscribeHealthCheck",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#subscribeHealthCheck",
    "access": "public",
    "description": "Subscribe to healthcheck channel.",
    "lineNumber": 450,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: string })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback when the subscribe to healthcheck channel succeeds."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback when the subscription fails."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "quiet",
        "description": "If true avoid to store the subscription in the subscriptions list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "unsubscribeHealthCheck",
    "memberof": "build/api/RealtimeAPI.js~RealtimeAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RealtimeAPI.js~RealtimeAPI#unsubscribeHealthCheck",
    "access": "public",
    "description": "Unsubscribe to healthcheck channel.",
    "lineNumber": 457,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(data: { content: string })"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "build/api/RoutingAPI.js",
    "content": "import HttpAPI from '../common/api/HttpAPI';\n/**\n * Access to the [geOps Routing service](https://developer.geops.io/apis/routing).\n *\n * @example\n * import { RoutingAPI } from 'mobility-toolbox-js';\n *\n * const api = new RoutingAPI({\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass RoutingAPI extends HttpAPI {\n    /**\n     * Constructor\n     *\n     * @param {RoutingAPIOptions} options Options.\n     * @param {string} [options.url='https://api.geops.io/routing/v1/'] Service url.\n     * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n     */\n    constructor(options = {}) {\n        super(Object.assign({ url: 'https://api.geops.io/routing/v1/' }, options));\n    }\n    /**\n     * Route.\n     *\n     * @param {RoutingParameters} params Request parameters. See [Routing service documentation](https://developer.geops.io/apis/routing/).\n     * @param {RequestInit} config Options for the fetch request.\n     * @return {Promise<RoutingResponse>} An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326).\n     */\n    route(params, config) {\n        return this.fetch('', params, config);\n    }\n}\nexport default RoutingAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/api/RoutingAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "class",
    "name": "RoutingAPI",
    "memberof": "build/api/RoutingAPI.js",
    "static": true,
    "longname": "build/api/RoutingAPI.js~RoutingAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/api/RoutingAPI.js",
    "importStyle": "RoutingAPI",
    "description": "Access to the [geOps Routing service](https://developer.geops.io/apis/routing).",
    "examples": [
      "import { RoutingAPI } from 'mobility-toolbox-js';\n\nconst api = new RoutingAPI({\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "build/common/api/HttpAPI.js~HttpAPI"
    ]
  },
  {
    "__docId__": 120,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/api/RoutingAPI.js~RoutingAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RoutingAPI.js~RoutingAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "RoutingAPIOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'https://api.geops.io/routing/v1/'",
        "defaultRaw": "'https://api.geops.io/routing/v1/'",
        "name": "options.url",
        "description": "Service url."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps services](https://developer.geops.io/)."
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "route",
    "memberof": "build/api/RoutingAPI.js~RoutingAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/RoutingAPI.js~RoutingAPI#route",
    "access": "public",
    "description": "Route.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "RoutingParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request parameters. See [Routing service documentation](https://developer.geops.io/apis/routing/)."
      },
      {
        "nullable": null,
        "types": [
          "RequestInit"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Options for the fetch request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<RoutingResponse>"
      ],
      "spread": false,
      "description": "An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326)."
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "build/api/StopsAPI.js",
    "content": "import HttpAPI from '../common/api/HttpAPI';\n/**\n * Access to the [Stops service](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n *\n * @example\n * import { StopsAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new StopsAPI({\n *   url: 'https://api.geops.io/stops/v1/',\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass StopsAPI extends HttpAPI {\n    /**\n     * Constructor\n     *\n     * @param {StopsAPIOptions} options Options.\n     * @param {string} [options.url='https://api.geops.io/stops/v1/'] Service url.\n     * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n     */\n    constructor(options = {}) {\n        super(Object.assign({ url: 'https://api.geops.io/stops/v1/' }, options));\n    }\n    /**\n     * Search fo stops.\n     *\n     * @param {StopsParameters} params Request parameters. See [Stops service documentation](https://developer.geops.io/apis/stops).\n     * @param {RequestInit} config Options for the fetch request.\n     * @return {Promise<StopsResponse>} An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326).\n     */\n    search(params, config) {\n        return this.fetch('', params, config);\n    }\n}\nexport default StopsAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/api/StopsAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "StopsAPI",
    "memberof": "build/api/StopsAPI.js",
    "static": true,
    "longname": "build/api/StopsAPI.js~StopsAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/api/StopsAPI.js",
    "importStyle": "StopsAPI",
    "description": "Access to the [Stops service](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).",
    "examples": [
      "import { StopsAPI } from 'mobility-toolbox-js/api';\n\nconst api = new StopsAPI({\n  url: 'https://api.geops.io/stops/v1/',\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "build/common/api/HttpAPI.js~HttpAPI"
    ]
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/api/StopsAPI.js~StopsAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/StopsAPI.js~StopsAPI#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "StopsAPIOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'https://api.geops.io/stops/v1/'",
        "defaultRaw": "'https://api.geops.io/stops/v1/'",
        "name": "options.url",
        "description": "Service url."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps services](https://developer.geops.io/)."
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "search",
    "memberof": "build/api/StopsAPI.js~StopsAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/api/StopsAPI.js~StopsAPI#search",
    "access": "public",
    "description": "Search fo stops.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "StopsParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request parameters. See [Stops service documentation](https://developer.geops.io/apis/stops)."
      },
      {
        "nullable": null,
        "types": [
          "RequestInit"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Options for the fetch request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<StopsResponse>"
      ],
      "spread": false,
      "description": "An GeoJSON feature collection with coordinates in [EPSG:4326](http://epsg.io/4326)."
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "build/api/index.js",
    "content": "export { default as RoutingAPI } from './RoutingAPI';\nexport { default as StopsAPI } from './StopsAPI';\nexport { default as RealtimeAPI, RealtimeModes } from './RealtimeAPI';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/api/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "build/api/typedefs.js",
    "content": "/**\n * @typedef {Object} Departure\n * @property {number} time Timestamp in ms.\n * @property {boolean} no_stop_between\n * @property {number} train_number\n * @property {string[]} to\n * @property {number} ris_aimed_time Timestamp in ms.\n * @property {number} updated_at Timestamp in ms.\n * @property {boolean} new_to\n * @property {number} min_arrival_time Timestamp in ms.\n * @property {string[]} next_stoppoints List of next stops. Like value in at_station_ds100.\n * @property {number} ris_estimated_time Timestamp in ms.\n * @property {NetworkLine} line\n * @property {boolean} has_fzo if true this departure has realtime data.\n * @property {number} train_id\n * @property {string} platform\n * @property {?*} state\n * @property {number} fzo_estimated_time Timestamp in ms.\n * @property {?*} formation\n * @property {?*} no_stop_till\n * @property {number} train_type\n * @property {number} call_id\n * @property {string} created_at Timestamp in ms.\n * @property {string} at_station_ds100\n * @property {number} timediff Timestamp in ms.\n *\n */\n/**\n * @typedef {GeoJSONFeature} Station\n * @property {StationProperties} properties Returns the station's properties.\n * @property {GeoJSONPoint} geometry Returns a point.\n */\n/**\n * @typedef {Object} StationProperties\n * @property {Transfer[]} transfers\n * @property {boolean} elevatorOutOfOrder\n * @property {number} uic\n * @property {string} name\n * @property {NetworkLine[]} networkLines\n * @property {boolean} hasElevator\n * @property {boolean} hasZOB\n * @property {boolean} hasAccessibility\n * @property {string} type\n */\n/**\n * @typedef {Object} NetworkLine\n * @property {number} id Identifier of the line.\n * @property {string} color Color of the line (CSS color string).\n * @property {string} stroke Stroke color of the line (CSS color string).\n * @property {string} name Name of the line.\n * @property {string} text_color  Text color of the line  (CSS color string).\n */\n/**\n * @typedef {Object} Transfer\n * @property {string} mot Mode of transportation (ex: U-Bahn).\n * @property {string[]} lines Array of lines name (ex: [\"U4\", \"U5\"]).\n */\n/**\n * @typedef {GeoJSONFeature} StopSequence\n */\n/**\n * @typedef {GeoJSONFeature} RealtimeTrajectory\n */\n/**\n * @typedef {GeoJSONFeature} FullTrajectory\n */\n/**\n * @typedef {GeoJSONFeature} Vehicle\n */\n/**\n * @typedef {GeoJSONFeature} ExtraGeom\n */\n// These lines is to block TypeScript to add \"use strict;\" in the outputed file.\nconst dummy = () => { };\nexport default dummy;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/api/typedefs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "typedef",
    "name": "Departure",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~Departure",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "no_stop_between",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_number",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ris_aimed_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "updated_at",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "new_to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min_arrival_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "next_stoppoints",
        "description": "List of next stops. Like value in at_station_ds100."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ris_estimated_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "NetworkLine"
        ],
        "spread": false,
        "optional": false,
        "name": "line",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "has_fzo",
        "description": "if true this departure has realtime data."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "platform",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fzo_estimated_time",
        "description": "Timestamp in ms."
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "formation",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "no_stop_till",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "train_type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "call_id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "created_at",
        "description": "Timestamp in ms."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "at_station_ds100",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timediff",
        "description": "Timestamp in ms."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Departure"
    }
  },
  {
    "__docId__": 129,
    "kind": "typedef",
    "name": "Station",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~Station",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "StationProperties"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Returns the station's properties."
      },
      {
        "nullable": null,
        "types": [
          "GeoJSONPoint"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "Returns a point."
      }
    ],
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "Station"
    }
  },
  {
    "__docId__": 130,
    "kind": "typedef",
    "name": "StationProperties",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~StationProperties",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Transfer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "transfers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "elevatorOutOfOrder",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "uic",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NetworkLine[]"
        ],
        "spread": false,
        "optional": false,
        "name": "networkLines",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasElevator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasZOB",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasAccessibility",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StationProperties"
    }
  },
  {
    "__docId__": 131,
    "kind": "typedef",
    "name": "NetworkLine",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~NetworkLine",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the line."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Color of the line (CSS color string)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "stroke",
        "description": "Stroke color of the line (CSS color string)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the line."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text_color",
        "description": "Text color of the line  (CSS color string)."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "NetworkLine"
    }
  },
  {
    "__docId__": 132,
    "kind": "typedef",
    "name": "Transfer",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~Transfer",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mot",
        "description": "Mode of transportation (ex: U-Bahn)."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "lines",
        "description": "Array of lines name (ex: [\"U4\", \"U5\"])."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Transfer"
    }
  },
  {
    "__docId__": 133,
    "kind": "typedef",
    "name": "StopSequence",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~StopSequence",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "StopSequence"
    }
  },
  {
    "__docId__": 134,
    "kind": "typedef",
    "name": "RealtimeTrajectory",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~RealtimeTrajectory",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "RealtimeTrajectory"
    }
  },
  {
    "__docId__": 135,
    "kind": "typedef",
    "name": "FullTrajectory",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~FullTrajectory",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "FullTrajectory"
    }
  },
  {
    "__docId__": 136,
    "kind": "typedef",
    "name": "Vehicle",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~Vehicle",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "Vehicle"
    }
  },
  {
    "__docId__": 137,
    "kind": "typedef",
    "name": "ExtraGeom",
    "memberof": "build/api/typedefs.js",
    "static": true,
    "longname": "build/api/typedefs.js~ExtraGeom",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "type": {
      "types": [
        "GeoJSONFeature"
      ],
      "optional": false,
      "name": "ExtraGeom"
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "build/common/api/HttpAPI.js",
    "content": "import BaseObject from 'ol/Object';\nimport getUrlWithParams from '../utils/getUrlWithParams';\n/**\n * Common class to access to a geOps api using http.\n *\n * @example\n * import { API } from 'mobility-toolbox-js/api';\n *\n * const api = new HttpApi({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey]\n * });\n *\n * @classproperty {string} url Url of the service.\n * @classproperty {string} apiKey Api key to access the service.\n */\nclass HttpAPI extends BaseObject {\n    constructor(options) {\n        super();\n        /** @ignore */\n        this.url = options.url;\n        /** @ignore */\n        this.apiKey = options.apiKey;\n    }\n    /**\n     * Append the apiKey before sending the request.\n     * @ignore\n     */\n    fetch(path, params, config) {\n        if (!this.url) {\n            // eslint-disable-next-line no-console\n            return Promise.reject(new Error(`No url defined for request to ${this.url}/${path}`));\n        }\n        if (!this.url && !this.apiKey && !/key=/.test(this.url)) {\n            // eslint-disable-next-line no-console\n            return Promise.reject(new Error(`No apiKey defined for request to ${this.url}`));\n        }\n        // Clean requets parameters, removing undefined and null values.\n        const searchParams = params || {};\n        const url = getUrlWithParams(`${this.url}${path || ''}`, Object.assign({ key: this.apiKey }, searchParams));\n        // We use toString  because of TYpeScript bug that only accept a string in fetch method.\n        return fetch(url.toString(), config).then((response) => {\n            try {\n                return response.json().then((data) => {\n                    if (data.error) {\n                        throw new Error(data.error);\n                    }\n                    return data;\n                });\n            }\n            catch (err) {\n                return Promise.reject(new Error(err));\n            }\n        });\n    }\n}\nexport default HttpAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/api/HttpAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "class",
    "name": "HttpAPI",
    "memberof": "build/common/api/HttpAPI.js",
    "static": true,
    "longname": "build/common/api/HttpAPI.js~HttpAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/api/HttpAPI.js",
    "importStyle": "HttpAPI",
    "description": "Common class to access to a geOps api using http.",
    "examples": [
      "import { API } from 'mobility-toolbox-js/api';\n\nconst api = new HttpApi({\n  url: [yourUrl],\n  apiKey: [yourApiKey]\n});"
    ],
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{string} url Url of the service."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} apiKey Api key to access the service."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Object~BaseObject"
    ]
  },
  {
    "__docId__": 140,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "url",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#url",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "apiKey",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#apiKey",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "fetch",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#fetch",
    "access": "public",
    "description": "Append the apiKey before sending the request.",
    "lineNumber": 29,
    "ignore": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "build/common/api/WebSocketAPI.js",
    "content": "/**\n * Class used to facilitate connection to a WebSocketAPI and\n * also to manage properly messages send to the WebSocketAPI.\n * This class must not contain any specific implementation.\n */\nclass WebSocketAPI {\n    constructor() {\n        this.defineProperties();\n    }\n    defineProperties() {\n        Object.defineProperties(this, {\n            closed: {\n                get: () => !!(!this.websocket ||\n                    this.websocket.readyState === this.websocket.CLOSED),\n            },\n            closing: {\n                get: () => !!(this.websocket &&\n                    this.websocket.readyState === this.websocket.CLOSING),\n            },\n            connecting: {\n                get: () => !!(this.websocket &&\n                    this.websocket.readyState === this.websocket.CONNECTING),\n            },\n            open: {\n                get: () => !!(this.websocket && this.websocket.readyState === this.websocket.OPEN),\n            },\n            /**\n             * Array of message to send on open.\n             * @type {Array<string>}\n             * @private\n             */\n            messagesOnOpen: {\n                value: [],\n                writable: true,\n            },\n            /**\n             * Array of subscriptions.\n             * @type {Array<WebSocketSubscription>}\n             * @private\n             */\n            subscriptions: {\n                value: [],\n                writable: true,\n            },\n            /**\n             * List of channels subscribed.\n             * @type {WebSocketSubscribed}\n             * @private\n             */\n            subscribed: {\n                value: {},\n                writable: true,\n            },\n        });\n    }\n    /**\n     * Get the websocket request string.\n     *\n     * @param {string} method Request mehtod {GET, SUB}.\n     * @param {WebSocketParameters} params Request parameters.\n     * @param {string} params.channel Channel name\n     * @param {string} [params.args] Request arguments\n     * @param {Number|string} [params.id] Request identifier\n     * @return {string} request string\n     * @private\n     */\n    static getRequestString(method, params = {}) {\n        let reqStr = `${method} ${params.channel}`;\n        reqStr += params.args ? ` ${params.args}` : '';\n        reqStr += params.id ? ` ${params.id}` : '';\n        return reqStr.trim();\n    }\n    /**\n     * (Re)connect the websocket.\n     *\n     * @param {string} url Websocket url.\n     * @param {function} onOpen Callback called when the websocket connection is opened and before subscriptions of previous subscriptions.\n     * @private\n     */\n    connect(url, onOpen = () => { }) {\n        if (this.websocket && !this.closed) {\n            if (!this.closing && this.websocket.url !== url) {\n                this.websocket.close();\n            }\n            else if (this.connecting) {\n                return;\n            }\n        }\n        /** @ignore */\n        this.websocket = new WebSocket(url);\n        if (!this.open) {\n            this.websocket.addEventListener('open', () => {\n                onOpen();\n                this.subscribePreviousSubscriptions();\n            });\n        }\n        else {\n            onOpen();\n            this.subscribePreviousSubscriptions();\n        }\n    }\n    /**\n     * Close the websocket definitively.\n     *\n     * @private\n     */\n    close() {\n        if (this.websocket && (this.open || this.connecting)) {\n            this.websocket.onclose = () => { };\n            this.websocket.close();\n            this.messagesOnOpen = [];\n        }\n    }\n    /**\n     * Sends a message to the websocket.\n     *\n     * @param {message} message Message to send.\n     * @private\n     */\n    send(message) {\n        if (!this.websocket) {\n            return;\n        }\n        const send = () => {\n            var _a;\n            (_a = this.websocket) === null || _a === void 0 ? void 0 : _a.send(message);\n        };\n        if (!this.open) {\n            // This 'if' avoid sending 2 identical BBOX message on open,\n            if (!this.messagesOnOpen.includes(message)) {\n                this.messagesOnOpen.push(message);\n                this.websocket.addEventListener('open', () => {\n                    this.messagesOnOpen = [];\n                    send();\n                });\n                this.websocket.addEventListener('close', () => {\n                    this.messagesOnOpen = [];\n                });\n            }\n        }\n        else if (!this.messagesOnOpen.includes(message)) {\n            send();\n        }\n    }\n    addEvents(onMessage, onError) {\n        if (this.websocket) {\n            this.websocket.addEventListener('message', onMessage);\n            if (onError) {\n                this.websocket.addEventListener('error', onError);\n                this.websocket.addEventListener('close', onError);\n            }\n        }\n    }\n    removeEvents(onMessage, onError) {\n        if (this.websocket) {\n            this.websocket.removeEventListener('message', onMessage);\n            if (onError) {\n                this.websocket.removeEventListener('error', onError);\n                this.websocket.removeEventListener('close', onError);\n            }\n        }\n    }\n    /**\n     * Listen to websocket messages.\n     *\n     * @param {WebSocketParameters} params Parameters for the websocket get request\n     * @param {function} cb callback on listen\n     * @param {function} errorCb Callback on error\n     * @return {{onMessage: function, errorCb: function}} Object with onMessage and error callbacks\n     * @private\n     */\n    listen(params, cb, errorCb) {\n        // Remove the previous identical callback\n        this.unlisten(params, cb);\n        // We wrap the message callback to be sure we only propagate the message if it is for the right channel.\n        const onMessage = (evt) => {\n            let data;\n            try {\n                data = JSON.parse(evt.data);\n            }\n            catch (err) {\n                // eslint-disable-next-line no-console\n                console.error('WebSocket: unable to parse JSON data', err, evt.data);\n                return;\n            }\n            let source = params.channel;\n            source += params.args ? ` ${params.args}` : '';\n            // Buffer channel message return a list of other channels to propagate to proper callbacks.\n            let contents;\n            if (data.source === 'buffer') {\n                contents = data\n                    .content;\n            }\n            else {\n                contents = [data];\n            }\n            contents.forEach((content) => {\n                // Because of backend optimization, the last content is null.\n                if ((content === null || content === void 0 ? void 0 : content.source) === source &&\n                    (!params.id || params.id === data.client_reference)) {\n                    cb(content);\n                }\n            });\n        };\n        this.addEvents(onMessage, errorCb);\n        return { onMessageCb: onMessage, onErrorCb: errorCb };\n    }\n    /**\n     * Unlisten websocket messages.\n     *\n     * @param {Object} params Parameters for the websocket get request.\n     * @param {function} cb Callback used when listen.\n     * @private\n     */\n    unlisten(params, cb) {\n        [...(this.subscriptions || []), ...(this.requests || [])]\n            .filter((s) => s.params.channel === params.channel && (!cb || s.cb === cb))\n            .forEach(({ onMessageCb, onErrorCb }) => {\n            this.removeEvents(onMessageCb, onErrorCb);\n        });\n    }\n    /**\n     * Sends a get request to the websocket.\n     * The callback is called only once, when the response is received or when the call returns an error.\n     *\n     * @param {Object} params Parameters for the websocket get request\n     * @param {function} onMessage callback on message event\n     * @param {function} onError Callback on error and close event\n     * @private\n     */\n    get(params, cb, errorCb) {\n        const requestString = WebSocketAPI.getRequestString('GET', params);\n        this.send(requestString);\n        // We wrap the callbacks to make sure they are called only once.\n        const once = (callback) => \n        // @ts-ignore: Spread error\n        (...args) => {\n            // @ts-ignore: Spread error\n            callback(...args);\n            const index = this.requests.findIndex((request) => requestString === request.requestString && cb === request.cb);\n            const { onMessageCb, onErrorCb } = this.requests[index];\n            this.removeEvents(onMessageCb, onErrorCb);\n            this.requests.splice(index, 1);\n        };\n        const { onMessageCb, onErrorCb } = this.listen(params, once(cb), errorCb && once(errorCb));\n        // Store requests and callbacks to be able to remove them.\n        if (!this.requests) {\n            this.requests = [];\n        }\n        const index = this.requests.findIndex((request) => requestString === request.requestString && cb === request.cb);\n        const newReq = {\n            params,\n            requestString,\n            cb,\n            errorCb,\n            onMessageCb,\n            onErrorCb,\n        };\n        if (index > -1) {\n            this.requests[index] = newReq;\n        }\n        else {\n            this.requests.push(newReq);\n        }\n    }\n    /**\n     * Subscribe to a given channel.\n     *\n     * @param {Object} params Parameters for the websocket get request\n     * @param {function} cb callback on listen\n     * @param {function} errorCb Callback on error\n     * @param {boolean} quiet if false, no GET or SUB requests are send, only the callback is registered.\n     * @private\n     */\n    subscribe(params, cb, errorCb, quiet = false) {\n        const { onMessageCb, onErrorCb } = this.listen(params, cb, errorCb);\n        const reqStr = WebSocketAPI.getRequestString('', params);\n        const index = this.subscriptions.findIndex((subcr) => params.channel === subcr.params.channel && cb === subcr.cb);\n        const newSubscr = { params, cb, errorCb, onMessageCb, onErrorCb, quiet };\n        if (index > -1) {\n            this.subscriptions[index] = newSubscr;\n        }\n        else {\n            this.subscriptions.push(newSubscr);\n        }\n        if (!this.subscribed[reqStr]) {\n            if (!newSubscr.quiet) {\n                this.send(`GET ${reqStr}`);\n                this.send(`SUB ${reqStr}`);\n            }\n            this.subscribed[reqStr] = true;\n        }\n    }\n    /**\n     * Unsubscribe from a channel.\n     * @param {string} source source to unsubscribe from\n     * @param {function} cb Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed.\n     * @private\n     */\n    unsubscribe(source, cb) {\n        const toRemove = this.subscriptions.filter((s) => s.params.channel === source && (!cb || s.cb === cb));\n        toRemove.forEach(({ onMessageCb, onErrorCb }) => {\n            this.removeEvents(onMessageCb, onErrorCb);\n        });\n        this.subscriptions = this.subscriptions.filter((s) => s.params.channel !== source || (cb && s.cb !== cb));\n        // If there is no more subscriptions to this channel, and the removed subscriptions didn't register quietly,\n        // we DEL it.\n        if (source &&\n            this.subscribed[source] &&\n            !this.subscriptions.find((s) => s.params.channel === source) &&\n            toRemove.find((subscr) => !subscr.quiet)) {\n            this.send(`DEL ${source}`);\n            this.subscribed[source] = false;\n        }\n    }\n    /**\n     * After an auto reconnection we need to re-subscribe to the channels.\n     */\n    subscribePreviousSubscriptions() {\n        // Before to subscribe previous subscriptions we make sure they\n        // are all defined as unsubscribed, because this code is asynchrone\n        // and a subscription could have been added in between.\n        Object.keys(this.subscribed).forEach((key) => {\n            this.subscribed[key] = false;\n        });\n        // Subscribe all previous subscriptions.\n        [...this.subscriptions].forEach((s) => {\n            this.subscribe(s.params, s.cb, s.errorCb, s.quiet);\n        });\n    }\n}\nexport default WebSocketAPI;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/api/WebSocketAPI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "class",
    "name": "WebSocketAPI",
    "memberof": "build/common/api/WebSocketAPI.js",
    "static": true,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/api/WebSocketAPI.js",
    "importStyle": "WebSocketAPI",
    "description": "Class used to facilitate connection to a WebSocketAPI and\nalso to manage properly messages send to the WebSocketAPI.\nThis class must not contain any specific implementation.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 146,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#defineProperties",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "getRequestString",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI.getRequestString",
    "access": "private",
    "description": "Get the websocket request string.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "Request mehtod {GET, SUB}."
      },
      {
        "nullable": null,
        "types": [
          "WebSocketParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request parameters."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "params.channel",
        "description": "Channel name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "params.args",
        "description": "Request arguments"
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "params.id",
        "description": "Request identifier"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "request string"
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "connect",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#connect",
    "access": "private",
    "description": "(Re)connect the websocket.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Websocket url."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onOpen",
        "description": "Callback called when the websocket connection is opened and before subscriptions of previous subscriptions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "websocket",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#websocket",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "close",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#close",
    "access": "private",
    "description": "Close the websocket definitively.",
    "lineNumber": 107,
    "params": [],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "messagesOnOpen",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#messagesOnOpen",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "send",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#send",
    "access": "private",
    "description": "Sends a message to the websocket.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Message to send."
      }
    ],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "addEvents",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#addEvents",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "onMessage",
        "types": [
          "*"
        ]
      },
      {
        "name": "onError",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "removeEvents",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#removeEvents",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [
      {
        "name": "onMessage",
        "types": [
          "*"
        ]
      },
      {
        "name": "onError",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "listen",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#listen",
    "access": "private",
    "description": "Listen to websocket messages.",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "WebSocketParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Parameters for the websocket get request"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "callback on listen"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "errorCb",
        "description": "Callback on error"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{onMessage: function, errorCb: function}"
      ],
      "spread": false,
      "description": "Object with onMessage and error callbacks"
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "unlisten",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#unlisten",
    "access": "private",
    "description": "Unlisten websocket messages.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Parameters for the websocket get request."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback used when listen."
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "get",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#get",
    "access": "private",
    "description": "Sends a get request to the websocket.\nThe callback is called only once, when the response is received or when the call returns an error.",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Parameters for the websocket get request"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onMessage",
        "description": "callback on message event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Callback on error and close event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "requests",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#requests",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "subscribe",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#subscribe",
    "access": "private",
    "description": "Subscribe to a given channel.",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Parameters for the websocket get request"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "callback on listen"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "errorCb",
        "description": "Callback on error"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "quiet",
        "description": "if false, no GET or SUB requests are send, only the callback is registered."
      }
    ],
    "return": null
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#unsubscribe",
    "access": "private",
    "description": "Unsubscribe from a channel.",
    "lineNumber": 300,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "source to unsubscribe from"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function to unsubscribe. If null all subscriptions for the channel will be unsubscribed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "subscriptions",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#subscriptions",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "subscribePreviousSubscriptions",
    "memberof": "build/common/api/WebSocketAPI.js~WebSocketAPI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/api/WebSocketAPI.js~WebSocketAPI#subscribePreviousSubscriptions",
    "access": "public",
    "description": "After an auto reconnection we need to re-subscribe to the channels.",
    "lineNumber": 319,
    "params": [],
    "return": null
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "build/common/controls/ControlCommon.js",
    "content": "import BaseObject from 'ol/Object';\n/**\n * A class representing a control to display on map.\n *\n * @example\n * const control = new Control();\n *\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map which the control refers to.\n * @classproperty {boolean} active - Active the control.\n * @classproperty {HTMLElement} element - The HTML element used to render the control.\n * @classproperty {HTMLElement} target - The HTML element where to render the element property. Default is the map's element. Read only.\n */\nclass ControlCommon extends BaseObject {\n    /**\n     * Constructor\n     *\n     * @param {Object} [options] Control options.\n     * @param {boolean} [options.active = true] Whether the control is active or not.\n     * @param {HTMLElement} [options.element] The HTML element used to render the control.\n     * @param {HTMLElement} [options.target] The HTML element where to render the element property. Default is the map's element.\n     * @param {function} [options.render] Render function called whenever the control needs to be rerendered.\n     */\n    constructor(options = {}) {\n        super(options);\n        this.defineProperties(options);\n        const { active } = Object.assign({ active: options.active !== false }, options);\n        /**\n         * @ignore\n         */\n        this.active = active;\n    }\n    /**\n     * Define control's properties.\n     *\n     * @private\n     * @ignore\n     */\n    defineProperties(options) {\n        const { target, element, render } = Object.assign({}, options);\n        Object.defineProperties(this, {\n            active: {\n                get: () => this.get('active'),\n                set: (newActive) => {\n                    this.set('active', newActive);\n                    if (newActive) {\n                        this.activate();\n                    }\n                    else {\n                        this.deactivate();\n                    }\n                    this.render();\n                },\n            },\n            map: {\n                get: () => this.get('map'),\n                set: (map) => {\n                    // Remove previous node.\n                    if (this.map && this.element && this.element.parentNode) {\n                        this.element.parentNode.removeChild(this.element);\n                    }\n                    // Clean listeners\n                    this.deactivate();\n                    this.set('map', map);\n                    if (this.map) {\n                        // Add new node\n                        const targett = this.target ||\n                            (this.map.getTargetElement &&\n                                this.map.getTargetElement()) ||\n                            (this.map.getContainer &&\n                                this.map.getContainer());\n                        if (!this.element) {\n                            this.createDefaultElement();\n                        }\n                        if (this.element) {\n                            targett.appendChild(this.element);\n                        }\n                        // Add listeners\n                        if (this.active) {\n                            this.activate();\n                        }\n                    }\n                    this.render();\n                },\n            },\n            target: {\n                value: target,\n            },\n            element: {\n                value: element,\n                writable: true,\n            },\n            render: {\n                /** @ignore */\n                value: render || this.render,\n                writable: true,\n            },\n        });\n    }\n    /**\n     * Attach the control to the map. Add events, html element ...\n     */\n    attachToMap(map) {\n        this.map = map;\n    }\n    /**\n     * Detach the control From the map. Remove events, html element ..\n     */\n    detachFromMap() {\n        this.map = undefined;\n    }\n    /**\n     * Add listeners then renders the control.\n     * To be defined in inherited classes.\n     */\n    activate() {\n        this.deactivate();\n    }\n    /**\n     * Remove listeners added by activate() function then renders the control.\n     * To be defined in inherited classes.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    deactivate() {\n        // eslint-disable-next-line no-console\n        console.error('The function deactivate() must be implemented in subclasses');\n    }\n    /**\n     * The default render function. It renders content in the HTML element.\n     * To be defined in inherited classes.\n     *\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    render(options) {\n        // eslint-disable-next-line no-console\n        console.error('The function render() must be implemented in subclasses');\n    }\n    /**\n     * The default element to display if this.element is not defined.\n     * To be defined in inherited classes.\n     *\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    createDefaultElement() {\n        // eslint-disable-next-line no-console\n        console.error('The function createDefaultElement() must be implemented in subclasses');\n    }\n}\nexport default ControlCommon;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/controls/ControlCommon.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "class",
    "name": "ControlCommon",
    "memberof": "build/common/controls/ControlCommon.js",
    "static": true,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/controls/ControlCommon.js",
    "importStyle": "ControlCommon",
    "description": "A class representing a control to display on map.",
    "examples": [
      "const control = new Control();"
    ],
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map|mapboxgl.Map} map - The map which the control refers to."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} active - Active the control."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{HTMLElement} element - The HTML element used to render the control."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{HTMLElement} target - The HTML element where to render the element property. Default is the map's element. Read only."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Object~BaseObject"
    ]
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Control options."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "options.active",
        "description": "Whether the control is active or not."
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "options.element",
        "description": "The HTML element used to render the control."
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "options.target",
        "description": "The HTML element where to render the element property. Default is the map's element."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.render",
        "description": "Render function called whenever the control needs to be rerendered."
      }
    ]
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "active",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#active",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#defineProperties",
    "access": "private",
    "description": "Define control's properties.",
    "lineNumber": 38,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#attachToMap",
    "access": "public",
    "description": "Attach the control to the map. Add events, html element ...",
    "lineNumber": 102,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "map",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#map",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#detachFromMap",
    "access": "public",
    "description": "Detach the control From the map. Remove events, html element ..",
    "lineNumber": 108,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "activate",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#activate",
    "access": "public",
    "description": "Add listeners then renders the control.\nTo be defined in inherited classes.",
    "lineNumber": 115,
    "params": [],
    "return": null
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "deactivate",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#deactivate",
    "access": "public",
    "description": "Remove listeners added by activate() function then renders the control.\nTo be defined in inherited classes.",
    "lineNumber": 123,
    "params": [],
    "return": null
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "render",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#render",
    "access": "private",
    "description": "The default render function. It renders content in the HTML element.\nTo be defined in inherited classes.",
    "lineNumber": 134,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "createDefaultElement",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#createDefaultElement",
    "access": "private",
    "description": "The default element to display if this.element is not defined.\nTo be defined in inherited classes.",
    "lineNumber": 145,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "build/common/controls/CopyrightControlCommon.js",
    "content": "/* eslint-disable max-classes-per-file */\nimport ControlCommon from './ControlCommon';\n/**\n * A class representing a copyright control to display on map.\n * This class only draw an html element, with an empty string in it.\n * Use subclasses to use it in an ol or mapbox map.\n */\nclass CopyrightControlCommon extends ControlCommon {\n    render() {\n        if (!this.element) {\n            return;\n        }\n        this.element.innerHTML = this.active\n            ? this.getCopyrights().join(' | ')\n            : '';\n    }\n    createDefaultElement() {\n        this.element = document.createElement('div');\n        this.element.id = 'mbt-copyright';\n        Object.assign(this.element.style, {\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            fontSize: '.8rem',\n            padding: '0 10px',\n        });\n    }\n    getCopyrights() {\n        // eslint-disable-next-line no-console\n        console.error('The getCopyrights() function must be implemented in subclasses.', this);\n        return [];\n    }\n}\nexport default CopyrightControlCommon;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/controls/CopyrightControlCommon.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "CopyrightControlCommon",
    "memberof": "build/common/controls/CopyrightControlCommon.js",
    "static": true,
    "longname": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/controls/CopyrightControlCommon.js",
    "importStyle": "CopyrightControlCommon",
    "description": "A class representing a copyright control to display on map.\nThis class only draw an html element, with an empty string in it.\nUse subclasses to use it in an ol or mapbox map.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "build/common/controls/ControlCommon.js~ControlCommon"
    ]
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "render",
    "memberof": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon#render",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "createDefaultElement",
    "memberof": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon#createDefaultElement",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "element",
    "memberof": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon",
    "static": false,
    "longname": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon#element",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/CopyrightControlCommon.js~CopyrightControlCommon#getCopyrights",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "build/common/controls/StopFinderControlCommon.js",
    "content": "import { StopsAPI } from '../../api';\nimport ControlCommon from './ControlCommon';\n/**\n * A class representing a stop finder control to display on map.\n * This class only draw the html elements.\n * The geographic logic must be implemented by subclasses.\n */\nclass StopFinderControlCommon extends ControlCommon {\n    /**\n     * Constructor.\n     *\n     * @param {Object} options Map options\n     * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/). See StopsAPI.\n     * @param {string} [options.url='https://api.geops.io/tracker/v1'] Stops service url. See StopsAPI.\n     * @param {string} [options.placeholder='Search for a stop...'] Input field placeholder.\n     * @param {StopsSearchParams} [options.apiParams={ limit: 20 }] Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n     */\n    constructor(options) {\n        super(options);\n        const { apiParams, apiKey, url, placeholder } = options || {};\n        this.apiParams = Object.assign({ limit: 20 }, (apiParams || {}));\n        this.placeholder = placeholder || 'Search for a stop...';\n        const apiOptions = { apiKey };\n        if (url) {\n            apiOptions.url = url;\n        }\n        this.api = new StopsAPI(apiOptions);\n        this.abortController = new AbortController();\n    }\n    deactivate() { }\n    render(featureCollection) {\n        const suggestions = (featureCollection === null || featureCollection === void 0 ? void 0 : featureCollection.features) || [];\n        if (!this.suggestionsElt) {\n            return;\n        }\n        this.suggestionsElt.style.display = suggestions.length ? 'block' : 'none';\n        this.suggestionsElt.innerHTML = '';\n        suggestions.forEach((suggestion) => {\n            var _a, _b;\n            const suggElt = document.createElement('div');\n            suggElt.innerHTML = (_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.properties) === null || _a === void 0 ? void 0 : _a.name;\n            suggElt.onclick = () => {\n                // @ts-ignore\n                this.onSuggestionClick(suggestion);\n            };\n            Object.assign(suggElt.style, {\n                padding: '5px 12px',\n            });\n            (_b = this.suggestionsElt) === null || _b === void 0 ? void 0 : _b.appendChild(suggElt);\n        });\n    }\n    createDefaultElement() {\n        /**\n         * Define a default element.\n         */\n        this.element = document.createElement('div');\n        this.element.id = 'mbt-search';\n        Object.assign(this.element.style, {\n            position: 'absolute',\n            top: 0,\n            left: '50px',\n            margin: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            width: '320px',\n        });\n        // Create input element\n        this.inputElt = document.createElement('input');\n        this.inputElt.type = 'text';\n        this.inputElt.placeholder = this.placeholder;\n        this.inputElt.autocomplete = 'off';\n        this.inputElt.onkeyup = (evt) => {\n            var _a;\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = new AbortController();\n            // @ts-ignore\n            this.search(evt.target.value, this.abortController);\n        };\n        Object.assign(this.inputElt.style, {\n            padding: '10px 30px 10px 10px',\n        });\n        this.element.appendChild(this.inputElt);\n        // Create suggestions list element\n        this.suggestionsElt = document.createElement('div');\n        Object.assign(this.suggestionsElt.style, {\n            backgroundColor: 'white',\n            overflowY: 'auto',\n            cursor: 'pointer',\n        });\n        this.element.appendChild(this.suggestionsElt);\n        this.clearElt = document.createElement('div');\n        Object.assign(this.clearElt.style, {\n            display: 'none',\n            position: 'absolute',\n            right: '0',\n            padding: '0 10px',\n            fontSize: '200%',\n            cursor: 'pointer',\n        });\n        this.clearElt.innerHTML = '×';\n        this.clearElt.onclick = () => this.clear();\n        this.element.appendChild(this.clearElt);\n    }\n    /**\n     * Launch a search.\n     *\n     * @param {String} query The query to search for.\n     * @param {AbortController} abortController Abort controller used to cancel the request.\n     * @return {Promise<Array<GeoJSONFeature>>} An array of GeoJSON features with coordinates in [EPSG:4326](http://epsg.io/4326).\n     */\n    search(q, abortController) {\n        if (q !== undefined || q !== null) {\n            this.apiParams.q = q;\n        }\n        if (this.clearElt) {\n            this.clearElt.style.display = 'block';\n        }\n        return this.api\n            .search(this.apiParams, abortController && { signal: abortController.signal })\n            .then((data) => {\n            this.render(data);\n        })\n            .catch(() => {\n            this.render();\n        });\n    }\n    /**\n     * To be defined in inherited class\n     */\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    onSuggestionClick(suggestion) { }\n    /**\n     * Clear the search field and close the control.\n     */\n    clear() {\n        if (!this.suggestionsElt || !this.inputElt || !this.clearElt) {\n            return;\n        }\n        this.inputElt.value = '';\n        this.suggestionsElt.innerHTML = '';\n        this.clearElt.style.display = 'none';\n    }\n}\nexport default StopFinderControlCommon;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/controls/StopFinderControlCommon.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "class",
    "name": "StopFinderControlCommon",
    "memberof": "build/common/controls/StopFinderControlCommon.js",
    "static": true,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/controls/StopFinderControlCommon.js",
    "importStyle": "StopFinderControlCommon",
    "description": "A class representing a stop finder control to display on map.\nThis class only draw the html elements.\nThe geographic logic must be implemented by subclasses.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "build/common/controls/ControlCommon.js~ControlCommon"
    ]
  },
  {
    "__docId__": 187,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Map options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.apiKey",
        "description": "Access key for [geOps services](https://developer.geops.io/). See StopsAPI."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'https://api.geops.io/tracker/v1'",
        "defaultRaw": "'https://api.geops.io/tracker/v1'",
        "name": "options.url",
        "description": "Stops service url. See StopsAPI."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'Search for a stop...'",
        "defaultRaw": "'Search for a stop...'",
        "name": "options.placeholder",
        "description": "Input field placeholder."
      },
      {
        "nullable": null,
        "types": [
          "StopsSearchParams"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{ limit: 20 }",
        "defaultRaw": "{ limit: 20 }",
        "name": "options.apiParams",
        "description": "Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/)."
      }
    ]
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "apiParams",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#apiParams",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "placeholder",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#placeholder",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "api",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#api",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "abortController",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#abortController",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "deactivate",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "render",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#render",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "featureCollection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "createDefaultElement",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#createDefaultElement",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "element",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#element",
    "access": "public",
    "description": "Define a default element.",
    "lineNumber": 56,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "inputElt",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#inputElt",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "suggestionsElt",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#suggestionsElt",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "clearElt",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#clearElt",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "search",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#search",
    "access": "public",
    "description": "Launch a search.",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The query to search for."
      },
      {
        "nullable": null,
        "types": [
          "AbortController"
        ],
        "spread": false,
        "optional": false,
        "name": "abortController",
        "description": "Abort controller used to cancel the request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array<GeoJSONFeature>>"
      ],
      "spread": false,
      "description": "An array of GeoJSON features with coordinates in [EPSG:4326](http://epsg.io/4326)."
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "onSuggestionClick",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#onSuggestionClick",
    "access": "public",
    "description": "To be defined in inherited class",
    "lineNumber": 131,
    "params": [
      {
        "name": "suggestion",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "clear",
    "memberof": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon#clear",
    "access": "public",
    "description": "Clear the search field and close the control.",
    "lineNumber": 135,
    "params": [],
    "return": null
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "build/common/index.js",
    "content": "export * from './utils';\nexport * from './styles';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "build/common/layers/LayerCommon.js",
    "content": "import BaseObject from 'ol/Object';\nimport { v4 as uuid } from 'uuid';\nimport BaseEvent from 'ol/events/Event';\nimport getLayersAsFlatArray from '../utils/getLayersAsFlatArray';\n/**\n * A class representing a layer to display on map.\n *\n * @example\n * const layer = new Layer({\n *   name: 'My Layer',\n * });\n *\n * @classproperty {string} key - Identifier of the layer. Must be unique.\n * @classproperty {string} name - Name of the layer\n * @classproperty {string[]} copyrights - Array of copyrights.\n * @classproperty {Layer[]} children - List of children layers.\n * @classproperty {boolean} visible - Define if the layer is currently display on the map.\n * @classproperty {boolean} disabled - Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions).\n * @classproperty {number} hitTolerance - Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.\n * @classproperty {Object} properties - Custom properties.\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map where the layer is displayed.\n */\nexport default class Layer extends BaseObject {\n    /**\n     * Constructor\n     *\n     * @param {Object} options\n     * @param {string} [options.key=uuid()] Identifier of the layer. Muste be unique. Default use a generated uuid.\n     * @param {string} [options.name] Name of the layer.\n     * @param {string[]} [options.copyrights] Array of copyrights.\n     * @param {Array<Layer>} [options.children=[]] Sublayers, all child layers will have a parent property associated to this layer.\n     * @param {boolean} [options.visible=true]  Define if the layer is currently display on the map.\n     * @param {boolean} [options.disabled=false] Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions).\n     * @param {number} [options.hitTolerance=5] Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.\n     * @param {Object} [options.properties={}] Application-specific layer properties.\n     */\n    constructor(options = {}) {\n        super();\n        this.properties = {};\n        this.options = {};\n        this.defineProperties(options);\n        if (options.properties) {\n            this.setProperties(options.properties);\n        }\n        this.options = options;\n        this.visible = options.visible === undefined ? true : !!options.visible;\n        this.group = options.group;\n        this.copyrights = options.copyrights;\n        this.children = options.children;\n        // Listen for group visiblity change\n        // if a layer from a group is newly visible we hide the others.\n        /* @ts-ignore */\n        this.on(`change:visible:group`, (evt) => {\n            // We hide layer of the same group\n            if (this.group === evt.target.group &&\n                this !== evt.target &&\n                this.visible) {\n                this.visible = false;\n                // Propagate event to parent\n            }\n            else if (this.children) {\n                this.children.forEach((child) => child.dispatchEvent(evt));\n            }\n        });\n    }\n    /**\n     * Define layer's properties that needs custom get and set.\n     *\n     * @ignore\n     */\n    defineProperties(options = {}) {\n        const { name, key, properties, hitTolerance } = Object.assign({}, options);\n        const uid = uuid();\n        Object.defineProperties(this, {\n            /* Layer's information properties */\n            name: {\n                value: name,\n            },\n            key: {\n                value: key || name || uid,\n            },\n            group: {\n                get: () => this.get('group'),\n                set: (newGroup) => {\n                    this.set('group', newGroup);\n                },\n            },\n            copyrights: {\n                get: () => this.get('copyrights'),\n                set: (newCopyrights) => {\n                    const arrValue = newCopyrights && !Array.isArray(newCopyrights)\n                        ? [newCopyrights]\n                        : newCopyrights;\n                    this.set('copyrights', arrValue || []);\n                },\n            },\n            // options is used for clone function.\n            options: {\n                value: options,\n            },\n            map: {\n                writable: true,\n            },\n            /* Layer's state properties */\n            visible: {\n                get: () => this.get('visible'),\n                set: (newVisible) => {\n                    if (newVisible === this.visible) {\n                        return;\n                    }\n                    this.set('visible', newVisible);\n                    if (this.visible) {\n                        // We make the parent visible\n                        if (this.parent) {\n                            this.parent.visible = true;\n                        }\n                        // If children doesn't contain any visible layers, we display all children.\n                        if (this.children &&\n                            !this.children.some((child) => child.visible)) {\n                            this.children.forEach((child) => {\n                                // eslint-disable-next-line no-param-reassign\n                                child.visible = true;\n                            });\n                        }\n                        // Warn the same group that a new layer is visible\n                        if (this.parent && this.group) {\n                            // We search for the higher parent then it will dispatch to all the tree.\n                            let higherParent = this.parent;\n                            while (higherParent.parent) {\n                                higherParent = higherParent.parent;\n                            }\n                            const evt = new BaseEvent(`change:visible:group`);\n                            evt.target = this;\n                            higherParent.dispatchEvent(evt);\n                        }\n                    }\n                    else if (!this.visible) {\n                        // We hide all the children\n                        if (this.children) {\n                            this.children.forEach((child) => {\n                                // eslint-disable-next-line no-param-reassign\n                                child.visible = false;\n                            });\n                        }\n                        // If the parent has no more visible child we also hide it.\n                        if (this.parent &&\n                            this.parent.visible &&\n                            this.parent.children &&\n                            !this.parent.children.find((child) => child.visible)) {\n                            this.parent.visible = false;\n                        }\n                    }\n                },\n            },\n            disabled: {\n                get: () => this.get('disabled'),\n                set: (newValue) => {\n                    this.set('disabled', newValue);\n                },\n            },\n            /* Layer's hierarchy properties */\n            parent: {\n                value: null,\n                writable: true,\n            },\n            children: {\n                get: () => this.get('children') || [],\n                set: (newValue) => {\n                    (this.children || []).forEach((child) => {\n                        // eslint-disable-next-line no-param-reassign\n                        child.parent = undefined;\n                    });\n                    if (Array.isArray(newValue)) {\n                        newValue.forEach((child) => {\n                            // eslint-disable-next-line no-param-reassign\n                            child.parent = this;\n                        });\n                    }\n                    this.set('children', newValue || []);\n                },\n            },\n            /* Layer's query properties */\n            hitTolerance: {\n                value: hitTolerance || 5,\n                writable: true,\n            },\n            /* Custom app specific properties */\n            properties: {\n                value: Object.assign({}, (properties || {})),\n            },\n        });\n    }\n    /**\n     * Initialize the layer with the map passed in parameters.\n     *\n     * @param {ol/Map~Map|mapboxgl.Map} map A map.\n     */\n    attachToMap(map) {\n        this.detachFromMap();\n        /** @ignore */\n        this.map = map;\n        if (this.children) {\n            this.children.forEach((child) => {\n                child.attachToMap(map);\n            });\n        }\n    }\n    /**\n     * Terminate what was initialized in init function. Remove layer, events...\n     */\n    // eslint-disable-next-line class-methods-use-this\n    detachFromMap() {\n        /** @ignore */\n        this.map = undefined;\n    }\n    /**\n     * Request feature information for a given coordinate.\n     * This function must be implemented by inheriting layers.\n     *\n     * @param {ol/coordinate~Coordinate} coordinate Coordinate.\n     * @param {Object} options Some options. See child classes to see which are supported.\n     * @return {Promise<FeatureInfo>} An empty response.\n     */\n    // eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\n    getFeatureInfoAtCoordinate(coordinate, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        // eslint-disable-next-line no-console\n        console.error('getFeatureInfoAtCoordinate must be implemented by inheriting layers', this.key);\n        // This layer returns no feature info.\n        // The function is implemented by inheriting layers.\n        return Promise.resolve({\n            layer: this,\n            features: [],\n            coordinate,\n        });\n    }\n    /**\n     * Return the an array containing all the descendants of the layer in a flat array. Including the current layer.\n     */\n    flat() {\n        return getLayersAsFlatArray(this);\n    }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/layers/LayerCommon.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "class",
    "name": "Layer",
    "memberof": "build/common/layers/LayerCommon.js",
    "static": true,
    "longname": "build/common/layers/LayerCommon.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/layers/LayerCommon.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on map.",
    "examples": [
      "const layer = new Layer({\n  name: 'My Layer',\n});"
    ],
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{string} key - Identifier of the layer. Must be unique."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} name - Name of the layer"
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string[]} copyrights - Array of copyrights."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{Layer[]} children - List of children layers."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} visible - Define if the layer is currently display on the map."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} disabled - Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions)."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{number} hitTolerance - Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{Object} properties - Custom properties."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map|mapboxgl.Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "ol/Object~BaseObject"
    ]
  },
  {
    "__docId__": 206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid()",
        "defaultRaw": "uuid()",
        "name": "options.key",
        "description": "Identifier of the layer. Muste be unique. Default use a generated uuid."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.name",
        "description": "Name of the layer."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.copyrights",
        "description": "Array of copyrights."
      },
      {
        "nullable": null,
        "types": [
          "Array<Layer>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.children",
        "description": "Sublayers, all child layers will have a parent property associated to this layer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.visible",
        "description": "Define if the layer is currently display on the map."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.disabled",
        "description": "Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "options.hitTolerance",
        "description": "Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.properties",
        "description": "Application-specific layer properties."
      }
    ]
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "properties",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#properties",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "options",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#options",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "visible",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#visible",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "group",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#group",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "copyrights",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#copyrights",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "children",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#children",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#defineProperties",
    "access": "public",
    "description": "Define layer's properties that needs custom get and set.",
    "lineNumber": 71,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer with the map passed in parameters.",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map",
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A map."
      }
    ],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "map",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#map",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 212,
    "params": [],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.\nThis function must be implemented by inheriting layers.",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options. See child classes to see which are supported."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "An empty response."
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "flat",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#flat",
    "access": "public",
    "description": "Return the an array containing all the descendants of the layer in a flat array. Including the current layer.",
    "lineNumber": 241,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "build/common/mixins/RealtimeLayerMixin.js",
    "content": "/* eslint-disable no-empty-function,@typescript-eslint/no-empty-function */\n/* eslint-disable no-useless-constructor,@typescript-eslint/no-useless-constructor */\n/* eslint-disable no-unused-vars,@typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport { buffer, containsCoordinate, intersects } from 'ol/extent';\nimport { unByKey } from 'ol/Observable';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport { fromLonLat } from 'ol/proj';\nimport realtimeDefaultStyle from '../styles/realtimeDefaultStyle';\nimport { RealtimeAPI, RealtimeModes } from '../../api';\nimport renderTrajectories from '../utils/renderTrajectories';\nimport * as realtimeConfig from '../utils/realtimeConfig';\n/**\n * RealtimeLayerInterface.\n */\nexport class RealtimeLayerInterface {\n    /**\n     * Start the clock.\n     */\n    start() { }\n    /**\n     * Stop the clock.\n     */\n    stop() { }\n    /**\n     * Set the Realtime api's bbox.\n     *\n     * @param {Array<number>} extent  Extent to request, [minX, minY, maxX, maxY, zoom].\n     * @param {number} zoom  Zoom level to request. Must be an integer.\n     */\n    setBbox(extent, zoom) { }\n    /**\n     * Render the trajectories\n     */\n    renderTrajectories() { }\n    /**\n     * Request the stopSequence and the fullTrajectory informations for a vehicle.\n     *\n     * @param {string} id The vehicle identifier (the  train_id property).\n     * @param {RealtimeMode} mode The mode to request. If not defined, the layer´s mode propetrty will be used.\n     * @return {Promise<{stopSequence: StopSequence, fullTrajectory: FullTrajectory>} A promise that will be resolved with the trajectory informations.\n     */\n    getTrajectoryInfos(id, mode) { }\n}\n/**\n * Mixin for RealtimeLayerInterface.\n *\n * @param {Class} Base A class to extend with {RealtimeLayerInterface} functionnalities.\n * @return {Class}  A class that implements {RealtimeLayerInterface} class and extends Base;\n * @private\n */\nfunction RealtimeLayerMixin(Base) {\n    // @ts-ignore\n    return class Mixin extends Base {\n        constructor(options) {\n            super(Object.assign({ hitTolerance: 10 }, options));\n            this.debug = options.debug || false;\n            this.mode = options.mode || RealtimeModes.TOPOGRAPHIC;\n            this.api = options.api || new RealtimeAPI(options);\n            this.tenant = options.tenant || ''; // sbb,sbh or sbm\n            this.minZoomInterpolation = options.minZoomInterpolation || 8; // Min zoom level from which trains positions are not interpolated.\n            this.format = new GeoJSON();\n            // MOTs by zoom\n            const allMots = [\n                'tram',\n                'subway',\n                'rail',\n                'bus',\n                'ferry',\n                'cablecar',\n                'gondola',\n                'funicular',\n                'coach',\n            ];\n            const onlyRail = ['rail'];\n            const withoutCable = ['tram', 'subway', 'rail', 'bus'];\n            // Server will block non train before zoom 9\n            this.motsByZoom = options.motsByZoom || [\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                onlyRail,\n                withoutCable,\n                withoutCable,\n                allMots,\n                allMots,\n                allMots,\n                allMots,\n            ];\n            this.getMotsByZoom = (zoom) => {\n                return ((options.getMotsByZoom &&\n                    options.getMotsByZoom(zoom, this.motsByZoom)) ||\n                    this.motsByZoom[zoom] ||\n                    this.motsByZoom[this.motsByZoom.length - 1]);\n            };\n            // Generalization levels by zoom\n            this.generalizationLevelByZoom = options.generalizationLevelByZoom || [\n                5, 5, 5, 5, 5, 5, 5, 5, 10, 30, 30, 100, 100, 100,\n            ];\n            this.getGeneralizationLevelByZoom = (zoom) => {\n                return ((options.getGeneralizationLevelByZoom &&\n                    options.getGeneralizationLevelByZoom(zoom, this.generalizationLevelByZoom)) ||\n                    this.generalizationLevelByZoom[zoom]);\n            };\n            // Render time interval by zoom\n            this.renderTimeIntervalByZoom = options.renderTimeIntervalByZoom || [\n                100000, 50000, 40000, 30000, 20000, 15000, 10000, 5000, 2000, 1000, 400,\n                300, 250, 180, 90, 60, 50, 50, 50, 50, 50,\n            ];\n            this.getRenderTimeIntervalByZoom = (zoom) => {\n                return ((options.getRenderTimeIntervalByZoom &&\n                    options.getRenderTimeIntervalByZoom(zoom, this.renderTimeIntervalByZoom)) ||\n                    this.renderTimeIntervalByZoom[zoom]);\n            };\n            // This property will call api.setBbox on each movend event\n            this.isUpdateBboxOnMoveEnd = options.isUpdateBboxOnMoveEnd !== false;\n            // Define throttling and debounce render function\n            this.throttleRenderTrajectories = throttle(this.renderTrajectoriesInternal, 50, { leading: false, trailing: true });\n            this.debounceRenderTrajectories = debounce(this.renderTrajectoriesInternal, 50, { leading: true, trailing: true, maxWait: 5000 });\n            // Bind callbacks\n            this.onFeatureHover = this.onFeatureHover.bind(this);\n            this.onFeatureClick = this.onFeatureClick.bind(this);\n            this.renderTrajectoriesInternal =\n                this.renderTrajectoriesInternal.bind(this);\n            this.onTrajectoryMessage = this.onTrajectoryMessage.bind(this);\n            this.onDeleteTrajectoryMessage =\n                this.onDeleteTrajectoryMessage.bind(this);\n            this.onDocumentVisibilityChange =\n                this.onDocumentVisibilityChange.bind(this);\n        }\n        /**\n         * Define layer's properties.\n         *\n         * @ignore\n         */\n        defineProperties(options) {\n            const { style, speed, pixelRatio, hoverVehicleId, selectedVehicleId, filter, sort, time, live, canvas, styleOptions, mode, } = options;\n            let currCanvas = canvas;\n            let currSpeed = speed || 1;\n            let currTime = time || new Date();\n            let currMode = mode || RealtimeModes.TOPOGRAPHIC;\n            let currStyle = style || realtimeDefaultStyle;\n            super.defineProperties(options);\n            Object.defineProperties(this, {\n                isTrackerLayer: { value: true },\n                canvas: {\n                    get: () => {\n                        if (!currCanvas) {\n                            currCanvas = document.createElement('canvas');\n                        }\n                        return currCanvas;\n                    },\n                    set: (cnvas) => {\n                        currCanvas = cnvas;\n                    },\n                },\n                /**\n                 * Style function used to render a vehicle.\n                 */\n                mode: {\n                    get: () => currMode,\n                    set: (newMode) => {\n                        var _a, _b;\n                        if (newMode === currMode) {\n                            return;\n                        }\n                        currMode = newMode;\n                        if ((_b = (_a = this.api) === null || _a === void 0 ? void 0 : _a.wsApi) === null || _b === void 0 ? void 0 : _b.open) {\n                            this.stop();\n                            this.start();\n                        }\n                    },\n                },\n                /**\n                 * Style function used to render a vehicle.\n                 */\n                style: {\n                    get: () => currStyle,\n                    set: (newStyle) => {\n                        currStyle = newStyle;\n                        // @ts-ignore  function without parameters is defined in subclasses\n                        this.renderTrajectories();\n                    },\n                },\n                /**\n                 * Custom options to pass as last parameter of the style function.\n                 */\n                styleOptions: {\n                    value: Object.assign(Object.assign({}, realtimeConfig), (styleOptions || {})),\n                },\n                /**\n                 * Speed of the wheel of time.\n                 * If live property is true. The speed is ignored.\n                 */\n                speed: {\n                    get: () => currSpeed,\n                    set: (newSpeed) => {\n                        currSpeed = newSpeed;\n                        this.start();\n                    },\n                },\n                /**\n                 * Function to filter which vehicles to display.\n                 */\n                filter: {\n                    value: filter,\n                    writable: true,\n                },\n                /**\n                 * Function to sort the vehicles to display.\n                 */\n                sort: {\n                    value: sort,\n                    writable: true,\n                },\n                /**\n                 * If true. The layer will always use Date.now() on the next tick to render the trajectories.\n                 * When true, setting the time property has no effect.\n                 */\n                live: {\n                    value: live === false ? live : true,\n                    writable: true,\n                },\n                /**\n                 * Time used to display the trajectories. Can be a Date or a number in ms representing a Date.\n                 * If live property is true. The setter does nothing.\n                 */\n                time: {\n                    get: () => currTime,\n                    set: (newTime) => {\n                        currTime = newTime && newTime.getTime ? newTime : new Date(newTime);\n                        // @ts-ignore  function without parameters is defined in subclasses\n                        this.renderTrajectories();\n                    },\n                },\n                /**\n                 * Keep track of which trajectories are stored.\n                 */\n                trajectories: {\n                    value: {},\n                    writable: true,\n                },\n                /**\n                 * Id of the hovered vehicle.\n                 */\n                hoverVehicleId: {\n                    value: hoverVehicleId,\n                    writable: true,\n                },\n                /**\n                 * Id of the selected vehicle.\n                 */\n                selectedVehicleId: {\n                    value: selectedVehicleId,\n                    writable: true,\n                },\n                /**\n                 * Id of the selected vehicle.\n                 */\n                pixelRatio: {\n                    value: pixelRatio ||\n                        (typeof window !== 'undefined' ? window.devicePixelRatio : 1),\n                    writable: true,\n                },\n                /**\n                 * If true, encapsulates the renderTrajectories calls in a requestAnimationFrame.\n                 */\n                useRequestAnimationFrame: {\n                    value: options.useRequestAnimationFrame || false,\n                    writable: true,\n                },\n                /**\n                 * If true, encapsulates the renderTrajectories calls in a throttle function. Default to true.\n                 */\n                useThrottle: {\n                    value: options.useThrottle !== false,\n                    writable: true,\n                },\n                /**\n                 * If true, encapsulates the renderTrajectories calls in a debounce function.\n                 */\n                useDebounce: {\n                    value: options.useDebounce || false,\n                    writable: true,\n                },\n                /**\n                 * Debug properties.\n                 */\n                // Not used anymore, but could be useful for debugging.\n                // showVehicleTraj: {\n                //   value:\n                //     options.showVehicleTraj !== undefined\n                //       ? options.showVehicleTraj\n                //       : true,\n                //   writable: true,\n                // },\n            });\n        }\n        attachToMap(map) {\n            super.attachToMap(map);\n            // If the layer is visible we start  the rendering clock\n            if (this.visible) {\n                this.start();\n            }\n            // On change of visibility we start/stop the rendering clock\n            this.visibilityRef = this.on('change:visible', (evt) => {\n                if (evt.target.visible) {\n                    this.start();\n                }\n                else {\n                    this.stop();\n                }\n            });\n            // To avoid browser hanging when the tab is not visible for a certain amount of time,\n            // We stop the rendering and the websocket when hide and start again when show.\n            document.addEventListener('visibilitychange', this.onDocumentVisibilityChange);\n        }\n        detachFromMap() {\n            document.removeEventListener('visibilitychange', this.onDocumentVisibilityChange);\n            this.stop();\n            unByKey(this.visibilityRef);\n            if (this.canvas) {\n                const context = this.canvas.getContext('2d');\n                if (context) {\n                    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                }\n                super.detachFromMap();\n            }\n        }\n        start() {\n            this.stop();\n            // Before starting to update trajectories, we remove trajectories that have\n            // a time_intervals in the past, it will\n            // avoid phantom train that are at the end of their route because we never\n            // received the deleted_vehicle event because we have changed the browser tab.\n            this.purgeOutOfDateTrajectories();\n            // @ts-ignore function without parameters must be define  in subclasses\n            this.renderTrajectories();\n            this.startUpdateTime();\n            this.api.open();\n            this.api.subscribeTrajectory(this.mode, this.onTrajectoryMessage, undefined, this.isUpdateBboxOnMoveEnd);\n            this.api.subscribeDeletedVehicles(this.mode, this.onDeleteTrajectoryMessage, undefined, this.isUpdateBboxOnMoveEnd);\n            if (this.isUpdateBboxOnMoveEnd) {\n                // Update the bbox on each move end\n                // @ts-ignore function without parameters defined by subclasses\n                this.setBbox();\n            }\n        }\n        /**\n         * Start the clock.\n         * @private\n         */\n        startUpdateTime() {\n            this.stopUpdateTime();\n            this.updateTimeDelay = this.getRefreshTimeInMs() || 0;\n            this.updateTimeInterval = window.setInterval(() => {\n                // When live=true, we update the time with new Date();\n                if (this.live) {\n                    this.time = new Date();\n                }\n                else if (this.time && this.updateTimeDelay && this.speed) {\n                    this.time = new Date(this.time.getTime() + this.updateTimeDelay * this.speed);\n                }\n            }, this.updateTimeDelay);\n        }\n        stop() {\n            this.api.unsubscribeTrajectory(this.onTrajectoryMessage);\n            this.api.unsubscribeDeletedVehicles(this.onDeleteTrajectoryMessage);\n            this.api.close();\n        }\n        /**\n         * Stop the clock.\n         * @private\n         */\n        stopUpdateTime() {\n            if (this.updateTimeInterval) {\n                clearInterval(this.updateTimeInterval);\n                this.updateTimeInterval = undefined;\n            }\n        }\n        /**\n         * Launch renderTrajectories. it avoids duplicating code in renderTrajectories method.\n         *\n         * @param {object} viewState The view state of the map.\n         * @param {number[2]} viewState.center Center coordinate of the map in mercator coordinate.\n         * @param {number[4]} viewState.extent Extent of the map in mercator coordinates.\n         * @param {number[2]} viewState.size Size ([width, height]) of the canvas to render.\n         * @param {number} [viewState.rotation = 0] Rotation of the map to render.\n         * @param {number} viewState.resolution Resolution of the map to render.\n         * @param {boolean} noInterpolate If true trajectories are not interpolated but\n         *   drawn at the last known coordinate. Use this for performance optimization\n         *   during map navigation.\n         * @private\n         */\n        renderTrajectoriesInternal(viewState, noInterpolate = false) {\n            var _a;\n            if (!this.map || !this.trajectories) {\n                return false;\n            }\n            const time = this.live ? Date.now() : (_a = this.time) === null || _a === void 0 ? void 0 : _a.getTime();\n            const trajectories = Object.values(this.trajectories);\n            // console.time('sort');\n            if (this.sort) {\n                // @ts-ignore\n                trajectories.sort(this.sort);\n            }\n            // console.timeEnd('sort');\n            if (!this.canvas || !this.style) {\n                return true;\n            }\n            // console.time('render');\n            this.renderState = renderTrajectories(this.canvas, trajectories, this.style, Object.assign(Object.assign({}, viewState), { pixelRatio: this.pixelRatio || 1, time }), Object.assign({ filter: this.filter, noInterpolate: (viewState.zoom || 0) < this.minZoomInterpolation\n                    ? true\n                    : noInterpolate, hoverVehicleId: this.hoverVehicleId, selectedVehicleId: this.selectedVehicleId }, this.styleOptions));\n            // console.timeEnd('render');\n            return true;\n        }\n        /**\n         * Render the trajectories requesting an animation frame and cancelling the previous one.\n         * This function must be overrided by children to provide the correct parameters.\n         *\n         * @param {object} viewState The view state of the map.\n         * @param {number[2]} viewState.center Center coordinate of the map in mercator coordinate.\n         * @param {number[4]} viewState.extent Extent of the map in mercator coordinates.\n         * @param {number[2]} viewState.size Size ([width, height]) of the canvas to render.\n         * @param {number} [viewState.rotation = 0] Rotation of the map to render.\n         * @param {number} viewState.resolution Resolution of the map to render.\n         * @param {boolean} noInterpolate If true trajectories are not interpolated but\n         *   drawn at the last known coordinate. Use this for performance optimization\n         *   during map navigation.\n         * @private\n         */\n        renderTrajectories(viewState, noInterpolate) {\n            if (this.requestId) {\n                cancelAnimationFrame(this.requestId);\n                this.requestId = undefined;\n            }\n            if (!viewState) {\n                return;\n            }\n            if (!noInterpolate && this.useRequestAnimationFrame) {\n                this.requestId = requestAnimationFrame(() => {\n                    this.renderTrajectoriesInternal(viewState, noInterpolate);\n                });\n            }\n            else if (!noInterpolate && this.useDebounce) {\n                this.debounceRenderTrajectories(viewState, noInterpolate);\n            }\n            else if (!noInterpolate && this.useThrottle) {\n                this.throttleRenderTrajectories(viewState, noInterpolate);\n            }\n            else {\n                this.renderTrajectoriesInternal(viewState, noInterpolate);\n            }\n        }\n        setBbox(extent, zoom) {\n            // Clean trajectories before sending the new bbox\n            // Purge trajectories:\n            // - which are outside the extent\n            // - when it's bus and zoom level is too low for them\n            if (this.trajectories && extent && zoom) {\n                const keys = Object.keys(this.trajectories);\n                for (let i = keys.length - 1; i >= 0; i -= 1) {\n                    this.purgeTrajectory(this.trajectories[keys[i]], extent, zoom);\n                }\n            }\n            if (!extent) {\n                return;\n            }\n            const bbox = [...extent];\n            if (this.isUpdateBboxOnMoveEnd && zoom) {\n                bbox.push(zoom);\n                if (this.tenant) {\n                    bbox.push(`tenant=${this.tenant}`);\n                }\n                /* @ignore */\n                this.generalizationLevel = this.getGeneralizationLevelByZoom(zoom);\n                if (this.generalizationLevel) {\n                    bbox.push(`gen=${this.generalizationLevel}`);\n                }\n                /* @ignore */\n                this.mots = this.getMotsByZoom(zoom);\n                if (this.mots) {\n                    bbox.push(`mots=${this.mots}`);\n                }\n            }\n            this.api.bbox = bbox;\n        }\n        /**\n         * Get the duration before the next update depending on zoom level.\n         *\n         * @private\n         * @param {number} zoom\n         */\n        getRefreshTimeInMs(zoom = 0) {\n            var _a;\n            const roundedZoom = zoom !== undefined ? Math.round(zoom) : -1;\n            const timeStep = this.getRenderTimeIntervalByZoom(roundedZoom) || 25;\n            const nextTick = Math.max(25, timeStep / (this.speed || 1));\n            const nextThrottleTick = Math.min(nextTick, 500);\n            // TODO: see if this should go elsewhere.\n            if (this.useThrottle) {\n                this.throttleRenderTrajectories = throttle(this.renderTrajectoriesInternal, nextThrottleTick, { leading: true, trailing: true });\n            }\n            else if (this.useDebounce) {\n                this.debounceRenderTrajectories = debounce(this.renderTrajectoriesInternal, nextThrottleTick, { leading: true, trailing: true, maxWait: 5000 });\n            }\n            if ((_a = this.api) === null || _a === void 0 ? void 0 : _a.buffer) {\n                const [, size] = this.api.buffer;\n                this.api.buffer = [nextThrottleTick, size];\n            }\n            return nextTick;\n        }\n        /**\n         * Get vehicle.\n         * @param {function} filterFc A function use to filter results.\n         * @return {Array<Object>} Array of vehicle.\n         */\n        getVehicle(filterFc) {\n            return ((this.trajectories &&\n                // @ts-ignore\n                Object.values(this.trajectories).filter(filterFc)) ||\n                []);\n        }\n        /**\n         * Request feature information for a given coordinate.\n         *\n         * @param {ol/coordinate~Coordinate} coordinate Coordinate.\n         * @param {Object} options Options See child classes to see which options are supported.\n         * @param {number} [options.resolution=1] The resolution of the map.\n         * @param {number} [options.nb=Infinity] The max number of vehicles to return.\n         * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n         */\n        getFeatureInfoAtCoordinate(coordinate, options) {\n            const { resolution, nb } = options;\n            const ext = buffer([...coordinate, ...coordinate], this.hitTolerance * resolution);\n            let trajectories = Object.values(this.trajectories || {});\n            if (this.sort) {\n                // @ts-ignore\n                trajectories = trajectories.sort(this.sort);\n            }\n            const vehicles = [];\n            for (let i = 0; i < trajectories.length; i += 1) {\n                if (trajectories[i].properties.coordinate &&\n                    containsCoordinate(ext, trajectories[i].properties.coordinate)) {\n                    vehicles.push(trajectories[i]);\n                }\n                if (vehicles.length === nb) {\n                    break;\n                }\n            }\n            return Promise.resolve({\n                layer: this,\n                features: vehicles.map((vehicle) => this.format.readFeature(vehicle)),\n                coordinate,\n            });\n        }\n        /**\n         * Request the stopSequence and the fullTrajectory informations for a vehicle.\n         *\n         * @param {string} id The vehicle identifier (the  train_id property).\n         * @return {Promise<{stopSequence: StopSequence, fullTrajectory: FullTrajectory>} A promise that will be resolved with the trajectory informations.\n         */\n        getTrajectoryInfos(id) {\n            // When a vehicle is selected, we request the complete stop sequence and the complete full trajectory.\n            // Then we combine them in one response and send them to inherited layers.\n            const promises = [\n                this.api.getStopSequence(id),\n                this.api.getFullTrajectory(id, this.mode, this.generalizationLevel),\n            ];\n            return Promise.all(promises).then(([stopSequence, fullTrajectory]) => {\n                const response = {\n                    stopSequence,\n                    fullTrajectory,\n                };\n                return response;\n            });\n        }\n        /**\n         * Remove all trajectories that are in the past.\n         */\n        purgeOutOfDateTrajectories() {\n            Object.entries(this.trajectories || {}).forEach(([key, trajectory]) => {\n                var _a;\n                const timeIntervals = (_a = trajectory === null || trajectory === void 0 ? void 0 : trajectory.properties) === null || _a === void 0 ? void 0 : _a.time_intervals;\n                if (this.time && timeIntervals.length) {\n                    const lastTimeInterval = timeIntervals[timeIntervals.length - 1][0];\n                    if (lastTimeInterval < this.time) {\n                        this.removeTrajectory(key);\n                    }\n                }\n            });\n        }\n        /**\n         * Determine if the trajectory is useless and should be removed from the list or not.\n         * By default, this function exclude vehicles:\n         *  - that have their trajectory outside the current extent and\n         *  - that aren't in the MOT list.\n         *\n         * @param {RealtimeTrajectory} trajectory\n         * @param {Array<number>} extent\n         * @param {number} zoom\n         * @return {boolean} if the trajectory must be displayed or not.\n         * @ignore\n         */\n        purgeTrajectory(trajectory, extent, zoom) {\n            const { type, bounds } = trajectory.properties;\n            if (!intersects(extent, bounds) ||\n                (this.mots && !this.mots.includes(type))) {\n                this.removeTrajectory(trajectory);\n                return true;\n            }\n            return false;\n        }\n        /**\n         * Add a trajectory.\n         * @param {RealtimeTrajectory} trajectory The trajectory to add.\n         * @private\n         */\n        addTrajectory(trajectory) {\n            if (this.filter && !this.filter(trajectory)) {\n                return;\n            }\n            if (!this.trajectories) {\n                this.trajectories = {};\n            }\n            this.trajectories[trajectory.properties.train_id] = trajectory;\n            // @ts-ignore the parameter are set by subclasses\n            this.renderTrajectories();\n        }\n        removeTrajectory(trajectoryOrId) {\n            var _a;\n            let id;\n            if (typeof trajectoryOrId !== 'string') {\n                id = (_a = trajectoryOrId === null || trajectoryOrId === void 0 ? void 0 : trajectoryOrId.properties) === null || _a === void 0 ? void 0 : _a.train_id;\n            }\n            else {\n                id = trajectoryOrId;\n            }\n            if (this.trajectories) {\n                delete this.trajectories[id];\n            }\n        }\n        /**\n         * On zoomend we adjust the time interval of the update of vehicles positions.\n         *\n         * @param evt Event that triggered the function.\n         * @private\n         */\n        onZoomEnd() {\n            this.startUpdateTime();\n        }\n        onDocumentVisibilityChange() {\n            if (!this.visible) {\n                return;\n            }\n            if (document.hidden) {\n                this.stop();\n                // Since we don't receive deleted_vehicles event when docuement\n                // is hidden. We have to clean all the trajectories for a fresh\n                // start when the document is visible again.\n                this.trajectories = {};\n            }\n            else {\n                this.start();\n            }\n        }\n        /**\n         * Callback on websocket's trajectory channel events.\n         * It adds a trajectory to the list.\n         *\n         * @private\n         */\n        onTrajectoryMessage(data) {\n            if (!data.content) {\n                return;\n            }\n            const trajectory = data.content;\n            const { geometry, properties: { train_id: id, time_since_update: timeSinceUpdate, raw_coordinates: rawCoordinates, }, } = trajectory;\n            // ignore old events [SBAHNM-97]\n            if (timeSinceUpdate < 0) {\n                return;\n            }\n            // console.time(`onTrajectoryMessage${data.content.properties.train_id}`);\n            // @ts-ignore   default value for extentand zoom are provided by subclasses\n            if (this.purgeTrajectory(trajectory)) {\n                return;\n            }\n            if (this.debug &&\n                this.mode === RealtimeModes.TOPOGRAPHIC &&\n                rawCoordinates) {\n                trajectory.properties.olGeometry = this.format.readGeometry({\n                    type: 'Point',\n                    coordinates: fromLonLat(rawCoordinates, this.map.getView().getProjection()),\n                });\n            }\n            else {\n                trajectory.properties.olGeometry = this.format.readGeometry(geometry);\n            }\n            // TODO Make sure the timeOffset is useful. May be we can remove it.\n            trajectory.properties.timeOffset = Date.now() - data.timestamp;\n            this.addTrajectory(trajectory);\n        }\n        /**\n         * Callback on websocket's deleted_vehicles channel events.\n         * It removes the trajectory from the list.\n         *\n         * @private\n         * @override\n         */\n        onDeleteTrajectoryMessage(data) {\n            if (!data.content) {\n                return;\n            }\n            this.removeTrajectory(data.content);\n        }\n        /**\n         * Callback when user moves the mouse/pointer over the map.\n         * It sets the layer's hoverVehicleId property with the current hovered vehicle's id.\n         *\n         * @private\n         * @override\n         */\n        onFeatureHover(features, layer, coordinate) {\n            const [feature] = features;\n            let id = null;\n            if (feature) {\n                id = feature.get('train_id');\n            }\n            if (this.hoverVehicleId !== id) {\n                /** @ignore */\n                this.hoverVehicleId = id;\n                // @ts-ignore\n                this.renderTrajectories(true);\n            }\n        }\n        /**\n         * Callback when user clicks on the map.\n         * It sets the layer's selectedVehicleId property with the current selected vehicle's id.\n         *\n         * @private\n         * @override\n         */\n        onFeatureClick(features, layer, coordinate) {\n            const [feature] = features;\n            let id = null;\n            if (feature) {\n                id = feature.get('train_id');\n            }\n            if (this.selectedVehicleId !== id) {\n                /** @ignore */\n                this.selectedVehicleId = id;\n                this.selectedVehicle = feature;\n                // @ts-ignore parameters are provided by subclasses\n                this.renderTrajectories(true);\n            }\n        }\n    };\n}\nexport default RealtimeLayerMixin;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/mixins/RealtimeLayerMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "RealtimeLayerInterface",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js",
    "static": true,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/mixins/RealtimeLayerMixin.js",
    "importStyle": "{RealtimeLayerInterface}",
    "description": "RealtimeLayerInterface.",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "start",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface#start",
    "access": "public",
    "description": "Start the clock.",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "stop",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface#stop",
    "access": "public",
    "description": "Stop the clock.",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "setBbox",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface#setBbox",
    "access": "public",
    "description": "Set the Realtime api's bbox.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": "Extent to request, [minX, minY, maxX, maxY, zoom]."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": "Zoom level to request. Must be an integer."
      }
    ],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface#renderTrajectories",
    "access": "public",
    "description": "Render the trajectories",
    "lineNumber": 38,
    "params": [],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "getTrajectoryInfos",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerInterface#getTrajectoryInfos",
    "access": "public",
    "description": "Request the stopSequence and the fullTrajectory informations for a vehicle.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The vehicle identifier (the  train_id property)."
      },
      {
        "nullable": null,
        "types": [
          "RealtimeMode"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "The mode to request. If not defined, the layer´s mode propetrty will be used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{stopSequence: StopSequence, fullTrajectory: FullTrajectory>"
      ],
      "spread": false,
      "description": "A promise that will be resolved with the trajectory informations."
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "RealtimeLayerMixin",
    "memberof": "build/common/mixins/RealtimeLayerMixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/mixins/RealtimeLayerMixin.js~RealtimeLayerMixin",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/mixins/RealtimeLayerMixin.js",
    "importStyle": "RealtimeLayerMixin",
    "description": "Mixin for RealtimeLayerInterface.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "Base",
        "description": "A class to extend with {RealtimeLayerInterface} functionnalities."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "A class that implements {RealtimeLayerInterface} class and extends Base;"
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "build/common/mixins/UserInteractionsLayerMixin.js",
    "content": "/* eslint-disable no-empty-function,@typescript-eslint/no-empty-function */\n/* eslint-disable no-useless-constructor,@typescript-eslint/no-useless-constructor */\n/* eslint-disable no-unused-vars,@typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport { fromLonLat } from 'ol/proj';\nimport { unByKey } from 'ol/Observable';\nimport BaseEvent from 'ol/events/Event';\n/**\n * UserInteractionsLayerInterface.\n */\nexport class UserInteractionsLayerInterface {\n    /*\n     * Constructor\n  \n     * @param {Object} options Layer options.\n     * @param {string} options.userInteractions If true, it listens for user mouse hover and click event.\n     * @param {string} options.userClickInteractions If true, it listens for user click event.\n     * @param {string} options.userHoverInteractions If true, it listens for user mouse over event.\n     * @param {string} options.defaultUserInteractions  If true, it adds default listeners for user mouse hover and click event.\n     */\n    constructor(options = {}) { }\n    /**\n     * Initialize the layer adding user interactions.\n     *\n     * @param {ol/Map~Map} map\n     */\n    attachToMap(map) { }\n    /**\n     * Terminate the layer unsubscribing user interactions.\n     */\n    detachFromMap() { }\n    /**\n     * Activate map listeners events.\n     */\n    activateUserInteractions() { }\n    /**\n     * Deactivate map listeners events.\n     */\n    deactivateUserInteractions() { }\n    /**\n     * Subscribe on user:click event.\n     */\n    onClick(callback) { }\n    /**\n     * Subscribe on user:hover event.\n     */\n    onHover(callback) { }\n    /**\n     * Unsubscribe on user:click event.\n     */\n    unClick(callback) { }\n    /**\n     * Unsubscribe on user:hover event.\n     */\n    unHover(callback) { }\n}\n/**\n * Mixin for UserInteractionsLayerInterface. It provide onClick and onHover functions.\n *\n * @param {Class} Base A class to extend with {UserInteractionsLayerInterface} functionnalities.\n * @return {Class}  A class that implements {UserInteractionsLayerInterface} class and extends Base;\n * @private\n */\nfunction UserInteractionsLayerMixin(Base) {\n    // @ts-ignore\n    return class extends Base {\n        constructor(options = {}) {\n            super(options);\n            const { userInteractions = true, userClickInteractions = true, userHoverInteractions = true, defaultUserInteractions = true, } = options;\n            this.userInteractions = userInteractions;\n            this.userClickInteractions = userClickInteractions;\n            this.userHoverInteractions = userHoverInteractions;\n            this.defaultUserInteractions = defaultUserInteractions;\n            this.userClickCallbacks = [];\n            this.userHoverCallbacks = [];\n            this.userClickEventsKeys = [];\n            this.userHoverEventsKeys = [];\n            this.onUserClickCallback = this.onUserClickCallback.bind(this);\n            this.onUserMoveCallback = this.onUserMoveCallback.bind(this);\n            // Add mouse event callbacks\n            const { onClick, onHover } = options;\n            if (this.userInteractions && this.userClickInteractions && onClick) {\n                this.onClick(onClick);\n            }\n            if (this.userInteractions && this.userHoverInteractions && onHover) {\n                this.onHover(onHover);\n            }\n        }\n        attachToMap(map) {\n            super.attachToMap(map);\n            if (this.userInteractions &&\n                this.defaultUserInteractions &&\n                this.userClickInteractions &&\n                this.onFeatureClick) {\n                this.onClick(this.onFeatureClick);\n            }\n            if (this.userInteractions &&\n                this.defaultUserInteractions &&\n                this.userHoverInteractions &&\n                this.onFeatureHover) {\n                this.onHover(this.onFeatureHover);\n            }\n            this.listenEvents();\n        }\n        detachFromMap() {\n            this.unlistenEvents();\n            super.detachFromMap();\n        }\n        listenEvents() {\n            this.unlistenEvents();\n            this.userClickCallbacks.forEach((callback) => {\n                this.userClickEventsKeys.push(this.on(\n                // @ts-ignore\n                'user:click', ({ target: { features, layer, coordinate, event }, }) => {\n                    callback(features, layer, coordinate, event);\n                }));\n            });\n            this.userHoverCallbacks.forEach((callback) => {\n                this.userHoverEventsKeys.push(this.on(\n                // @ts-ignore\n                'user:hover', ({ target: { features, layer, coordinate, event }, }) => {\n                    callback(features, layer, coordinate, event);\n                }));\n            });\n        }\n        unlistenEvents() {\n            unByKey(this.userClickEventsKeys);\n            unByKey(this.userHoverEventsKeys);\n            this.userClickEventsKeys = [];\n            this.userHoverEventsKeys = [];\n        }\n        /**\n         * Listens to click events on the layer.\n         * @param {function} callback Callback function, called with the clicked\n         *   features,\n         *   the layer instance and the click event.\n         */\n        onClick(callback) {\n            this.userClickCallbacks.push(callback);\n            this.activateUserInteractions();\n            if (this.map) {\n                // If the layer is already attached to the map we reload the events\n                this.listenEvents();\n            }\n        }\n        /**\n         * Listens to hover events on the layer.\n         * @param {function} callback Callback function, called with the clicked\n         *   features, the layer instance and the click event.\n         */\n        onHover(callback) {\n            this.userHoverCallbacks.push(callback);\n            this.activateUserInteractions();\n            if (this.map) {\n                // If the layer is already attached to the map we reload the events\n                this.listenEvents();\n            }\n        }\n        /**\n         * Unlistens to click events on the layer.\n         * @param {function} callback Callback function, called with the clicked\n         *   features,\n         *   the layer instance and the click event.\n         */\n        unClick(callback) {\n            const index = this.userClickCallbacks.indexOf(callback);\n            if (index !== -1) {\n                return;\n            }\n            this.userClickCallbacks = this.userClickCallbacks.slice(index, 1);\n            if (this.map) {\n                // If the layer is already attached to the map we reload the events\n                this.listenEvents();\n            }\n        }\n        /**\n         * Unlistens to hover events on the layer.\n         * @param {function} callback Callback function, called with the clicked\n         *   features, the layer instance and the click event.\n         */\n        unHover(callback) {\n            const index = this.userHoverCallbacks.indexOf(callback);\n            if (index !== -1) {\n                return;\n            }\n            this.userHoverCallbacks = this.userHoverCallbacks.slice(index, 1);\n            if (this.map) {\n                // If the layer is already attached to the map we reload the events\n                this.listenEvents();\n            }\n        }\n        /**\n         * Function triggered when the user click the map.\n         * @private\n         */\n        onUserClickCallback(evt) {\n            const coordinate = evt.coordinate ||\n                fromLonLat(evt.lngLat.toArray());\n            const emptyFeatureInfo = {\n                features: [],\n                layer: this,\n                coordinate,\n                event: evt,\n            };\n            return this.getFeatureInfoAtCoordinate(coordinate)\n                .then((featureInfo) => {\n                const event = new BaseEvent('user:click');\n                event.target = featureInfo;\n                this.dispatchEvent(event);\n                return featureInfo;\n            })\n                .catch(() => emptyFeatureInfo);\n        }\n        /**\n         * Function triggered when the user move the cursor.\n         * @private\n         */\n        onUserMoveCallback(evt) {\n            const coordinate = evt.coordinate ||\n                fromLonLat(evt.lngLat.toArray());\n            const emptyFeatureInfo = {\n                features: [],\n                layer: this,\n                coordinate,\n                event: evt,\n            };\n            return this.getFeatureInfoAtCoordinate(coordinate)\n                .then((featureInfo) => {\n                const event = new BaseEvent('user:hover');\n                event.target = featureInfo;\n                this.dispatchEvent(event);\n                return featureInfo;\n            })\n                .catch(() => emptyFeatureInfo);\n        }\n        activateUserInteractions() { }\n        deactivateUserInteractions() { }\n    };\n}\nexport default UserInteractionsLayerMixin;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/mixins/UserInteractionsLayerMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "UserInteractionsLayerInterface",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js",
    "static": true,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/mixins/UserInteractionsLayerMixin.js",
    "importStyle": "{UserInteractionsLayerInterface}",
    "description": "UserInteractionsLayerInterface.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 232,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#attachToMap",
    "access": "public",
    "description": "Initialize the layer adding user interactions.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#detachFromMap",
    "access": "public",
    "description": "Terminate the layer unsubscribing user interactions.",
    "lineNumber": 32,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "activateUserInteractions",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#activateUserInteractions",
    "access": "public",
    "description": "Activate map listeners events.",
    "lineNumber": 36,
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "deactivateUserInteractions",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#deactivateUserInteractions",
    "access": "public",
    "description": "Deactivate map listeners events.",
    "lineNumber": 40,
    "params": [],
    "return": null
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "onClick",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#onClick",
    "access": "public",
    "description": "Subscribe on user:click event.",
    "lineNumber": 44,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "onHover",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#onHover",
    "access": "public",
    "description": "Subscribe on user:hover event.",
    "lineNumber": 48,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "unClick",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#unClick",
    "access": "public",
    "description": "Unsubscribe on user:click event.",
    "lineNumber": 52,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "unHover",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerInterface#unHover",
    "access": "public",
    "description": "Unsubscribe on user:hover event.",
    "lineNumber": 56,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "UserInteractionsLayerMixin",
    "memberof": "build/common/mixins/UserInteractionsLayerMixin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/mixins/UserInteractionsLayerMixin.js~UserInteractionsLayerMixin",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/mixins/UserInteractionsLayerMixin.js",
    "importStyle": "UserInteractionsLayerMixin",
    "description": "Mixin for UserInteractionsLayerInterface. It provide onClick and onHover functions.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "Base",
        "description": "A class to extend with {UserInteractionsLayerInterface} functionnalities."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "A class that implements {UserInteractionsLayerInterface} class and extends Base;"
    }
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "build/common/styles/index.js",
    "content": "export { default as realtimeDefaultStyle } from './realtimeDefaultStyle';\nexport { default as realtimeDelayStyle } from './realtimeDelayStyle';\nexport { default as realtimeSimpleStyle } from './realtimeSimpleStyle';\nexport * from './realtimeDefaultStyle';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/styles/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "build/common/styles/realtimeDefaultStyle.js",
    "content": "import createCanvas from '../utils/createCanvas';\n/** @private */\nconst cacheDelayBg = {};\n/**\n * Draw circle delay background\n *\n * @private\n */\nexport const getDelayBgCanvas = (origin, radius, color) => {\n    const key = `${origin}, ${radius}, ${color}`;\n    if (!cacheDelayBg[key]) {\n        const canvas = createCanvas(origin * 2, origin * 2);\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                return null;\n            }\n            ctx.beginPath();\n            ctx.arc(origin, origin, radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = color;\n            ctx.filter = 'blur(1px)';\n            ctx.fill();\n            cacheDelayBg[key] = canvas;\n        }\n    }\n    return cacheDelayBg[key];\n};\n/** @private */\nconst cacheDelayText = {};\n/**\n * Draw delay text\n *\n * @private\n */\nexport const getDelayTextCanvas = (text, fontSize, font, delayColor, delayOutlineColor = '#000', pixelRatio = 1) => {\n    const key = `${text}, ${font}, ${delayColor}, ${delayOutlineColor}, ${pixelRatio}`;\n    if (!cacheDelayText[key]) {\n        const canvas = createCanvas(Math.ceil(text.length * fontSize), Math.ceil(fontSize + 8 * pixelRatio));\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                return null;\n            }\n            ctx.font = font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.font = font;\n            ctx.fillStyle = delayColor;\n            ctx.strokeStyle = delayOutlineColor;\n            ctx.lineWidth = 1.5 * pixelRatio;\n            ctx.strokeText(text, 0, fontSize);\n            ctx.fillText(text, 0, fontSize);\n            cacheDelayText[key] = canvas;\n        }\n    }\n    return cacheDelayText[key];\n};\n/** @private */\nconst cacheCircle = {};\n/**\n * Draw colored circle with black border\n *\n * @private\n */\nexport const getCircleCanvas = (origin, radius, color, hasStroke, hasDash, pixelRatio) => {\n    const key = `${origin}, ${radius}, ${color}, ${hasStroke},  ${hasDash}, ${pixelRatio}`;\n    if (!cacheCircle[key]) {\n        const canvas = createCanvas(origin * 2, origin * 2);\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                return null;\n            }\n            ctx.fillStyle = color;\n            if (hasStroke) {\n                ctx.lineWidth = 1 * pixelRatio;\n                ctx.strokeStyle = '#000000';\n            }\n            ctx.beginPath();\n            ctx.arc(origin, origin, radius, 0, 2 * Math.PI, false);\n            ctx.fill();\n            if (hasDash) {\n                ctx.setLineDash([5, 3]);\n            }\n            if (hasStroke) {\n                ctx.stroke();\n            }\n            cacheCircle[key] = canvas;\n        }\n    }\n    return cacheCircle[key];\n};\n/** @private */\nconst cacheText = {};\n/**\n * Draw text in the circle\n *\n * @private\n */\nexport const getTextCanvas = (text, origin, textSize, fillColor, strokeColor, hasStroke, pixelRatio) => {\n    const key = `${text}, ${origin}, ${textSize}, ${fillColor},${strokeColor}, ${hasStroke}, ${pixelRatio}`;\n    if (!cacheText[key]) {\n        const canvas = createCanvas(origin * 2, origin * 2);\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                return null;\n            }\n            // Draw a stroke to the text only if a provider provides realtime but we don't use it.\n            if (hasStroke) {\n                ctx.save();\n                ctx.textBaseline = 'middle';\n                ctx.textAlign = 'center';\n                ctx.font = `bold ${textSize + 2}px Arial`;\n                ctx.strokeStyle = strokeColor;\n                ctx.strokeText(text, origin, origin);\n                ctx.restore();\n            }\n            // Draw a text\n            ctx.textBaseline = 'middle';\n            ctx.textAlign = 'center';\n            ctx.fillStyle = fillColor;\n            ctx.font = `bold ${textSize}px Arial`;\n            ctx.strokeStyle = strokeColor;\n            ctx.strokeText(text, origin, origin);\n            ctx.fillText(text, origin, origin);\n            cacheText[key] = canvas;\n        }\n    }\n    return cacheText[key];\n};\n/** @private */\nconst cache = {};\n/**\n * A tracker style that take in account the delay.\n *\n * @param {RealtimeTrajectory} trajectory The trajectory to render.\n * @param {ViewState} viewState The view state of the map.\n * @param {RealtimeStyleOptions} options Some options to change the rendering\n * @return a canvas\n */\nconst realtimeDefaultStyle = (trajectory, viewState, options) => {\n    const { hoverVehicleId, selectedVehicleId, useDelayStyle, delayOutlineColor = '#000', delayDisplay = 300000, getRadius = () => 0, getBgColor = () => '#000', getDelayColor = () => '#000', getDelayText = () => null, getTextColor = () => '#000', getTextSize = () => 0, getMaxRadiusForText = () => 10, getMaxRadiusForStrokeAndDelay = () => 7, } = options;\n    const { zoom, pixelRatio = 1 } = viewState;\n    let { type } = trajectory.properties;\n    const { train_id: id, line, delay, state, operator_provides_realtime_journey: operatorProvidesRealtime, } = trajectory.properties;\n    let { name, text_color: textColor, color } = line || {};\n    const cancelled = state === 'JOURNEY_CANCELLED';\n    if (!type) {\n        type = 'Rail';\n    }\n    if (!name) {\n        name = 'I';\n    }\n    if (!textColor) {\n        textColor = '#000000';\n    }\n    if (color && color[0] !== '#') {\n        color = `#${color}`;\n    }\n    if (textColor[0] !== '#') {\n        textColor = `#${textColor}`;\n    }\n    const z = Math.min(Math.floor(zoom || 1), 16);\n    const hover = !!(hoverVehicleId && hoverVehicleId === id);\n    const selected = !!(selectedVehicleId && selectedVehicleId === id);\n    // Calcul the radius of the circle\n    let radius = getRadius(type, z) * pixelRatio;\n    const isDisplayStrokeAndDelay = radius >= getMaxRadiusForStrokeAndDelay() * pixelRatio;\n    if (hover || selected) {\n        radius = isDisplayStrokeAndDelay\n            ? radius + 5 * pixelRatio\n            : 14 * pixelRatio;\n    }\n    const isDisplayText = radius > getMaxRadiusForText() * pixelRatio;\n    // Optimize the cache key, very important in high zoom level\n    let key = `${radius}${hover || selected}`;\n    if (useDelayStyle) {\n        key += `${operatorProvidesRealtime}${delay}`;\n        if (isDisplayStrokeAndDelay) {\n            key += `${cancelled}`;\n        }\n    }\n    else {\n        key += `${color || type}`;\n        if (isDisplayStrokeAndDelay) {\n            key += `${cancelled}${delay}`;\n        }\n    }\n    if (isDisplayText) {\n        key += `${name}${textColor}`;\n    }\n    if (!cache[key]) {\n        if (radius === 0) {\n            return null;\n        }\n        const margin = 1 * pixelRatio;\n        const radiusDelay = radius + 2;\n        const markerSize = radius * 2;\n        const size = radiusDelay * 2 + margin * 2;\n        const origin = size / 2;\n        // Draw circle delay background\n        let delayBg = null;\n        if (isDisplayStrokeAndDelay && delay !== null) {\n            delayBg = getDelayBgCanvas(origin, radiusDelay, getDelayColor(delay, cancelled));\n        }\n        // Show delay if feature is hovered or if delay is above 5mins.\n        let delayText = null;\n        let fontSize = 0;\n        if (isDisplayStrokeAndDelay &&\n            (hover || (delay || 0) >= delayDisplay || cancelled)) {\n            // Draw delay text\n            fontSize =\n                Math.max(cancelled ? 19 : 14, Math.min(cancelled ? 19 : 17, radius * 1.2)) * pixelRatio;\n            const text = getDelayText(delay, cancelled);\n            if (text) {\n                delayText = getDelayTextCanvas(text, fontSize, `bold ${fontSize}px arial, sans-serif`, getDelayColor(delay, cancelled, true), delayOutlineColor, pixelRatio);\n            }\n        }\n        // Draw colored circle with black border\n        let circleFillColor;\n        if (useDelayStyle) {\n            circleFillColor = getDelayColor(delay, cancelled);\n        }\n        else {\n            circleFillColor = color || getBgColor(type);\n        }\n        const hasStroke = isDisplayStrokeAndDelay || hover || selected;\n        const hasDash = !!isDisplayStrokeAndDelay &&\n            !!useDelayStyle &&\n            delay === null &&\n            operatorProvidesRealtime === 'yes';\n        const circle = getCircleCanvas(origin, radius, circleFillColor, hasStroke, hasDash, pixelRatio);\n        // Create the canvas\n        const width = size + ((delayText === null || delayText === void 0 ? void 0 : delayText.width) || 0) * 2;\n        const height = size;\n        const canvas = createCanvas(width, height);\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                return null;\n            }\n            // The renderTrajectories will center the image on the vehicle positions.\n            const originX = (delayText === null || delayText === void 0 ? void 0 : delayText.width) || 0;\n            if (delayBg) {\n                ctx.drawImage(delayBg, originX, 0);\n            }\n            if (circle) {\n                ctx.drawImage(circle, originX, 0);\n            }\n            // Draw text in the circle\n            let circleText = null;\n            if (isDisplayText) {\n                const fontSize2 = Math.max(radius, 10);\n                const textSize = getTextSize(ctx, markerSize, name, fontSize2);\n                const textColor2 = !useDelayStyle\n                    ? textColor || getTextColor(type)\n                    : '#000000';\n                const hasStroke2 = !!useDelayStyle &&\n                    delay === null &&\n                    operatorProvidesRealtime === 'yes';\n                circleText = getTextCanvas(name, origin, textSize, textColor2, circleFillColor, hasStroke2, pixelRatio);\n            }\n            if (circleText) {\n                ctx.drawImage(circleText, originX, 0);\n            }\n            if (delayText) {\n                ctx.drawImage(delayText, originX + Math.ceil(origin + radiusDelay) + margin, Math.ceil(origin - fontSize));\n            }\n            cache[key] = canvas;\n        }\n    }\n    return cache[key];\n};\nexport default realtimeDefaultStyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "name": "cacheDelayBg",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~cacheDelayBg",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "getDelayBgCanvas",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~getDelayBgCanvas",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": "{getDelayBgCanvas}",
    "description": "Draw circle delay background",
    "lineNumber": 9,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "name": "cacheDelayText",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~cacheDelayText",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "getDelayTextCanvas",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~getDelayTextCanvas",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": "{getDelayTextCanvas}",
    "description": "Draw delay text",
    "lineNumber": 35,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "fontSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "font",
        "types": [
          "*"
        ]
      },
      {
        "name": "delayColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "delayOutlineColor",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "#000",
        "defaultValue": "#000"
      },
      {
        "name": "pixelRatio",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "cacheCircle",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~cacheCircle",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "getCircleCanvas",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~getCircleCanvas",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": "{getCircleCanvas}",
    "description": "Draw colored circle with black border",
    "lineNumber": 65,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasStroke",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasDash",
        "types": [
          "*"
        ]
      },
      {
        "name": "pixelRatio",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "cacheText",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~cacheText",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 94,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "getTextCanvas",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~getTextCanvas",
    "access": "private",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": "{getTextCanvas}",
    "description": "Draw text in the circle",
    "lineNumber": 100,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "textSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "fillColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "strokeColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "hasStroke",
        "types": [
          "*"
        ]
      },
      {
        "name": "pixelRatio",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "name": "cache",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~cache",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 133,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "realtimeDefaultStyle",
    "memberof": "build/common/styles/realtimeDefaultStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDefaultStyle.js~realtimeDefaultStyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDefaultStyle.js",
    "importStyle": "realtimeDefaultStyle",
    "description": "A tracker style that take in account the delay.",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "RealtimeTrajectory"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "The trajectory to render."
      },
      {
        "nullable": null,
        "types": [
          "ViewState"
        ],
        "spread": false,
        "optional": false,
        "name": "viewState",
        "description": "The view state of the map."
      },
      {
        "nullable": null,
        "types": [
          "RealtimeStyleOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options to change the rendering"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a canvas"
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "build/common/styles/realtimeDelayStyle.js",
    "content": "import realtimeDefaultStyle from './realtimeDefaultStyle';\n/**\n * A tracker style that display the delay as backgroundColor.\n *\n * @param {*} trajectory The trajectory to render.\n * @param {*} viewState The view state of the map.\n * @param {*} options Some options to change the rendering\n * @return a canvas\n */\nconst realtimeDelayStyle = (trajectory, viewState, options) => {\n    return realtimeDefaultStyle(trajectory, viewState, Object.assign(Object.assign({}, options), { useDelayStyle: true }));\n};\nexport default realtimeDelayStyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/styles/realtimeDelayStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "realtimeDelayStyle",
    "memberof": "build/common/styles/realtimeDelayStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeDelayStyle.js~realtimeDelayStyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeDelayStyle.js",
    "importStyle": "realtimeDelayStyle",
    "description": "A tracker style that display the delay as backgroundColor.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "The trajectory to render."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "viewState",
        "description": "The view state of the map."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Some options to change the rendering"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a canvas"
    }
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "build/common/styles/realtimeSimpleStyle.js",
    "content": "import createCanvas from '../utils/createCanvas';\n/**\n * A very simple tracker style.\n * Display blue point for each train.\n */\nlet canvas;\nconst realtimeSimpleStyle = () => {\n    if (!canvas) {\n        canvas = createCanvas(15, 15);\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n        if (ctx) {\n            ctx.arc(8, 8, 5, 0, 2 * Math.PI, false);\n            ctx.fillStyle = '#8ED6FF';\n            ctx.fill();\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = 'black';\n            ctx.stroke();\n            ctx.lineWidth = 3;\n        }\n    }\n    return canvas;\n};\nexport default realtimeSimpleStyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/styles/realtimeSimpleStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "realtimeSimpleStyle",
    "memberof": "build/common/styles/realtimeSimpleStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/common/styles/realtimeSimpleStyle.js~realtimeSimpleStyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/common/styles/realtimeSimpleStyle.js",
    "importStyle": "realtimeSimpleStyle",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "build/common/typedefs.js",
    "content": "\"use strict\";\n/**\n * @typedef {function} FilterFunction\n * @param {Vehicle} vehicle Vehicle to filter.\n * @returns boolean\n */\n/**\n * @typedef {function} SortFunction\n * @param {any} a Object a to compare.\n * @param {any} b Object b to compare.\n * @returns number\n */\n/**\n * @typedef {Object} ViewState\n * @property {number|undefined} time A time in ms.\n * @property {number[2]|undefined} center A center in mercator coordinate.\n * @property {number[4]} extent An Extent in mercator coordinates.\n * @property {number[2]} size A size ([width, height]).\n * @property {number} rotation A rotation in radians.\n * @property {number} resolution A resolution.\n * @property {number} zoom A zoom level.\n * @property {number|undefined} pixelRatio A pixel ratio.\n */\n/**\n * @typedef {Object} FeatureInfo\n * @property {Layer} layer A layer.\n * @property {ol/Feature~Feature[]} features  An array of features.\n * @property {number[2]} coordinate The coordinate where to find the featue.\n */\n/**\n * @typedef {ol/Map~Map|mapboxgl.Map|maplibregl.Map} AnyMap\n */\n/**\n * @typedef {Object} ControlCommonOptions\n * @property {boolean} [active = true] Whether the control is active or not.\n * @property {HTMLElement} element The HTML element used to render the control.\n * @property {HTMLElement} target The HTML element where to render the element property. Default is the map's element.\n * @property {function} render Render function called whenever the control needs to be rerendered.\n */\n/**\n * @typedef {Object} LayerCommonOptions\n * @property {string!} key Identifier of the layer. Must be unique.\n * @property {string!} name  Name of the layer.\n * @property {string!} group Group of the layer.\n * @property {string[]!} copyrights List of copyrights.\n * @property {Layer[]!} children List of children layers.\n * @property {boolean!} visible  Define if the layer is currently display on the map.\n * @property {boolean!} disabled Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions).\n * @property {number!} hittolerance Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.\n * @property {Object!} properties - Custom properties.\n * @property {AnyMap!} map - The map used to display the layer.\n */\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/common/typedefs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "build/index.js",
    "content": "import * as ol from './ol';\nimport * as mapbox from './mapbox';\nimport * as ol_1 from './ol';\nexport { ol_1 as ol };\nimport * as mapbox_1 from './mapbox';\nexport { mapbox_1 as mapbox };\nexport default {\n    ol,\n    mapbox,\n};\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "build/mapbox/controls/CopyrightControl.js",
    "content": "import CopyrightControlCommon from '../../common/controls/CopyrightControlCommon';\nimport { getMapboxMapCopyrights } from '../../common/utils';\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map } from 'mapbox-gl';\n * import { CopyrightControl } from 'mobility-toolbox-js/mapbox';\n *\n * const map = new Map({\n *   container: 'map',\n *   style: `https://maps.geops.io/styles/travic_v2/style.json?key=${window.apiKey}`,\n * });\n *\n * const control = new CopyrightControl();\n * control.attachToMap(map);\n *\n *\n * @see <a href=\"/example/mb-copyright\">Mapbox copyright example</a>\n *\n * @extends {CopyrightControlCommon}\n */\nclass CopyrightControl extends CopyrightControlCommon {\n    constructor(options) {\n        super(options);\n        this.render = this.render.bind(this);\n    }\n    activate() {\n        super.activate();\n        if (this.map) {\n            this.map.on('sourcedata', this.render);\n            this.map.on('styledata', this.render);\n            this.map.on('idle', this.render);\n        }\n    }\n    deactivate() {\n        if (this.map) {\n            this.map.off('sourcedata', this.render);\n            this.map.off('styledata', this.render);\n            this.map.off('idle', this.render);\n        }\n        super.deactivate();\n    }\n    getCopyrights() {\n        return getMapboxMapCopyrights(this.map);\n    }\n}\nexport default CopyrightControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/controls/CopyrightControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "class",
    "name": "CopyrightControl",
    "memberof": "build/mapbox/controls/CopyrightControl.js",
    "static": true,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/mapbox/controls/CopyrightControl.js",
    "importStyle": "CopyrightControl",
    "description": "Display layer's copyrights.",
    "examples": [
      "import { Map } from 'mapbox-gl';\nimport { CopyrightControl } from 'mobility-toolbox-js/mapbox';\n\nconst map = new Map({\n  container: 'map',\n  style: `https://maps.geops.io/styles/travic_v2/style.json?key=${window.apiKey}`,\n});\n\nconst control = new CopyrightControl();\ncontrol.attachToMap(map);"
    ],
    "see": [
      "<a href=\"/example/mb-copyright\">Mapbox copyright example</a>"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "CopyrightControlCommon"
    ]
  },
  {
    "__docId__": 262,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "render",
    "memberof": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "static": false,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl#render",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "activate",
    "memberof": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl#activate",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "deactivate",
    "memberof": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "build/mapbox/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/controls/CopyrightControl.js~CopyrightControl#getCopyrights",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "build/mapbox/controls/index.js",
    "content": "// eslint-disable-next-line import/prefer-default-export\nexport { default as CopyrightControl } from './CopyrightControl';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/controls/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "build/mapbox/index.js",
    "content": "export * from '../api';\nexport * from '../common';\nexport * from './controls';\nexport * from './layers';\nexport * from './utils';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "build/mapbox/layers/Layer.js",
    "content": "import { unByKey } from 'ol/Observable';\nimport { transformExtent } from 'ol/proj';\nimport LayerCommon from '../../common/layers/LayerCommon';\nimport userInteractionsMixin from '../../common/mixins/UserInteractionsLayerMixin';\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass Layer extends userInteractionsMixin(LayerCommon) {\n    /**\n     * Initialize the layer and listen to user events.\n     * @param {mapboxgl.Map|maplibregl.Map} map\n     */\n    attachToMap(map) {\n        super.attachToMap(map);\n        if (!this.map) {\n            return;\n        }\n        if (this.userInteractions) {\n            this.toggleVisibleListeners();\n            this.onChangeVisibleKey = this.on(\n            // @ts-ignore\n            'change:visible', this.toggleVisibleListeners);\n        }\n    }\n    detachFromMap() {\n        if (this.map) {\n            this.deactivateUserInteractions();\n            // @ts-ignore\n            unByKey(this.onChangeVisibleKey);\n        }\n        super.detachFromMap();\n    }\n    activateUserInteractions() {\n        var _a, _b;\n        this.deactivateUserInteractions();\n        if (this.map &&\n            this.userInteractions &&\n            this.userClickInteractions &&\n            ((_a = this.userClickCallbacks) === null || _a === void 0 ? void 0 : _a.length)) {\n            this.map.on('click', this.onUserClickCallback);\n        }\n        if (this.map &&\n            this.userInteractions &&\n            this.userHoverInteractions &&\n            ((_b = this.userHoverCallbacks) === null || _b === void 0 ? void 0 : _b.length)) {\n            this.map.on('mousemove', this.onUserMoveCallback);\n        }\n    }\n    deactivateUserInteractions() {\n        if (this.map) {\n            this.map.off('mousemove', this.onUserMoveCallback);\n            this.map.off('click', this.onUserClickCallback);\n        }\n    }\n    /**\n     * Toggle listeners needed when a layer is avisible or not.\n     * @private\n     */\n    toggleVisibleListeners() {\n        if (this.visible) {\n            this.activateUserInteractions();\n        }\n        else {\n            this.deactivateUserInteractions();\n        }\n    }\n    /**\n     * Returns the current extent in mercator coordinates.\n     */\n    getMercatorExtent() {\n        const bounds = this.map.getBounds().toArray();\n        return transformExtent([...bounds[0], ...bounds[1]], 'EPSG:4326', 'EPSG:3857');\n    }\n    /**\n     * Returns the equivalent zoom in Openlayers.\n     */\n    getOlZoom() {\n        return this.map.getZoom() + 1;\n    }\n    /**\n     * Create a copy of the Layer.\n     * @param {Object} newOptions Options to override\n     * @return {Layer} A Layer\n     */\n    clone(newOptions) {\n        return new Layer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default Layer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/layers/Layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "Layer",
    "memberof": "build/mapbox/layers/Layer.js",
    "static": true,
    "longname": "build/mapbox/layers/Layer.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/mapbox/layers/Layer.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on an OpenLayers map.",
    "examples": [
      "import { Layer } from 'mobility-toolbox-js/ol';\n\nconst layer = new Layer({\n  olLayer: ...,\n});"
    ],
    "see": [
      "<a href=\"/example/ol-map\">Map example</a>"
    ],
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to user events.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.Map",
          "maplibregl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "onChangeVisibleKey",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#onChangeVisibleKey",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#detachFromMap",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "activateUserInteractions",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#activateUserInteractions",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "deactivateUserInteractions",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#deactivateUserInteractions",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "toggleVisibleListeners",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#toggleVisibleListeners",
    "access": "private",
    "description": "Toggle listeners needed when a layer is avisible or not.",
    "lineNumber": 71,
    "params": [],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "getMercatorExtent",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#getMercatorExtent",
    "access": "public",
    "description": "Returns the current extent in mercator coordinates.",
    "lineNumber": 82,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "getOlZoom",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#getOlZoom",
    "access": "public",
    "description": "Returns the equivalent zoom in Openlayers.",
    "lineNumber": 89,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "clone",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#clone",
    "access": "public",
    "description": "Create a copy of the Layer.",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": "A Layer"
    }
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "build/mapbox/layers/RealtimeLayer.js",
    "content": "import { fromLonLat } from 'ol/proj';\nimport { unByKey } from 'ol/Observable';\nimport { getWidth, getHeight } from 'ol/extent';\nimport transformRotate from '@turf/transform-rotate';\nimport { point } from '@turf/helpers';\nimport mixin from '../../common/mixins/RealtimeLayerMixin';\nimport Layer from './Layer';\nimport { getSourceCoordinates, getMercatorResolution } from '../utils';\n/**\n * Responsible for loading and display data from a Realtime service.\n *\n * @example\n * import { RealtimeLayer } from 'mobility-toolbox-js/mapbox';\n *\n * const layer = new RealtimeLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/RealtimeAPI%20js~RealtimeAPI%20html\">RealtimeAPI</a>\n *\n * @extends {Layer}\n * @implements {RealtimeLayerInterface}\n */\n// @ts-ignore\nclass RealtimeLayer extends mixin(Layer) {\n    constructor(options = {}) {\n        super(Object.assign({}, options));\n        /** @ignore */\n        this.onLoad = this.onLoad.bind(this);\n        /** @ignore */\n        this.onMove = this.onMove.bind(this);\n        /** @ignore */\n        this.onMoveEnd = this.onMoveEnd.bind(this);\n        /** @ignore */\n        this.onZoomEnd = this.onZoomEnd.bind(this);\n        /** @ignore */\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\n    }\n    /**\n     * Initialize the layer.\n     *\n     * @param {mapboxgl.Map} map A [mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map/).\n     * @param {string} beforeId Layer's id before which we want to add the new layer.\n     * @override\n     */\n    // @ts-ignore\n    attachToMap(map, beforeId) {\n        if (!map) {\n            return;\n        }\n        super.attachToMap(map);\n        this.source = {\n            type: 'canvas',\n            canvas: this.canvas,\n            coordinates: getSourceCoordinates(map, this.pixelRatio),\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\n            animate: true,\n            attribution: this.copyrights && this.copyrights.join(', '),\n        };\n        this.beforeId = beforeId;\n        this.layer = {\n            id: this.key,\n            type: 'raster',\n            source: this.key,\n            layout: {\n                visibility: this.visible ? 'visible' : 'none',\n            },\n            paint: {\n                'raster-opacity': 1,\n                'raster-fade-duration': 0,\n                'raster-resampling': 'nearest', // important otherwise it looks blurry\n            },\n        };\n        if (map.isStyleLoaded()) {\n            this.onLoad();\n        }\n        this.map.on('load', this.onLoad);\n        this.listeners = [this.on('change:visible', this.onVisibilityChange)];\n    }\n    /**\n     * Remove listeners from the Mapbox Map.\n     */\n    detachFromMap() {\n        if (this.map) {\n            this.map.off('load', this.onLoad);\n            // @ts-ignore\n            this.listeners.forEach((listener) => {\n                unByKey(listener);\n            });\n            if (this.map.style && this.map.getLayer(this.key)) {\n                this.map.removeLayer(this.key);\n            }\n            if (this.map.style && this.map.getSource(this.key)) {\n                this.map.removeSource(this.key);\n            }\n        }\n        super.detachFromMap();\n    }\n    /**\n     * Start updating vehicles position.\n     *\n     * @listens {mapboxgl.map.event:zoomend} Listen to zoom end event.\n     * @listens {mapboxgl.map.event:mousemove} Listen to mousemove end.\n     * @override\n     */\n    start() {\n        super.start();\n        this.map.on('move', this.onMove);\n        this.map.on('moveend', this.onMoveEnd);\n        this.map.on('zoomend', this.onZoomEnd);\n    }\n    /**\n     * Stop updating vehicles position, and unlisten events.\n     *\n     * @override\n     */\n    stop() {\n        super.stop();\n        if (this.map) {\n            this.map.off('move', this.onMove);\n            this.map.off('moveend', this.onMoveEnd);\n            this.map.off('zoomend', this.onZoomEnd);\n        }\n    }\n    onLoad() {\n        if (!this.map.getSource(this.key)) {\n            this.map.addSource(this.key, this.source);\n        }\n        if (!this.map.getLayer(this.key)) {\n            this.map.addLayer(this.layer, this.beforeId);\n        }\n    }\n    /**\n     * Function triggered when the user moves the cursor over the map.\n     * @override\n     */\n    onUserMoveCallback(evt) {\n        super.onUserMoveCallback(Object.assign({ coordinate: fromLonLat(evt.lngLat.toArray()) }, evt));\n    }\n    /**\n     * Render the trajectories using current map's size, resolution and rotation.\n     * @param {boolean} noInterpolate if true, renders the vehicles without interpolating theirs positions.\n     * @overrides\n     */\n    // @ts-ignore\n    renderTrajectories(noInterpolate = false) {\n        if (!this.map) {\n            return;\n        }\n        if (!this.pixelRatio) {\n            this.pixelRatio = 1;\n        }\n        const { width, height } = this.map.getCanvas();\n        const center = this.map.getCenter();\n        // We use turf here to have good transform.\n        const leftBottom = this.map.unproject({\n            x: 0,\n            y: height / this.pixelRatio,\n        }); // southWest\n        const rightTop = this.map.unproject({\n            x: width / this.pixelRatio,\n            y: 0,\n        }); // north east\n        const coord0 = transformRotate(point([leftBottom.lng, leftBottom.lat]), -this.map.getBearing(), {\n            pivot: [center.lng, center.lat],\n        }).geometry.coordinates;\n        const coord1 = transformRotate(point([rightTop.lng, rightTop.lat]), -this.map.getBearing(), {\n            pivot: [center.lng, center.lat],\n        }).geometry.coordinates;\n        const bounds = [...fromLonLat(coord0), ...fromLonLat(coord1)];\n        const xResolution = getWidth(bounds) / (width / this.pixelRatio);\n        const yResolution = getHeight(bounds) / (height / this.pixelRatio);\n        const res = Math.max(xResolution, yResolution);\n        // Coordinate of trajectories are in mercator so we have to pass the proper resolution and center in mercator.\n        const viewState = {\n            size: [width / this.pixelRatio, height / this.pixelRatio],\n            center: fromLonLat([center.lng, center.lat]),\n            extent: bounds,\n            resolution: res,\n            zoom: this.getOlZoom(),\n            rotation: -(this.map.getBearing() * Math.PI) / 180,\n            pixelRatio: this.pixelRatio,\n        };\n        super.renderTrajectories(viewState, noInterpolate);\n    }\n    /**\n     * Return the delay in ms before the next rendering.\n     */\n    getRefreshTimeInMs() {\n        return super.getRefreshTimeInMs(this.map.getZoom());\n    }\n    getFeatureInfoAtCoordinate(coordinate, options = {}) {\n        const resolution = getMercatorResolution(this.map);\n        return super.getFeatureInfoAtCoordinate(coordinate, Object.assign({ resolution }, options));\n    }\n    onVisibilityChange() {\n        if (this.visible && !this.map.getLayer(this.key)) {\n            this.map.addLayer(this.layer, this.beforeId);\n        }\n        else if (this.map.getLayer(this.key)) {\n            this.map.removeLayer(this.key);\n        }\n        // We can't use setLayoutProperty it triggers an error probably a bug in mapbox\n        // this.map.setLayoutProperty(\n        //   this.key,\n        //   'visibilty',\n        //   this.visible ? 'visible' : 'none',\n        // );\n    }\n    /**\n     * Remove the trajectory form the list if necessary.\n     *\n     * @private\n     */\n    purgeTrajectory(trajectory, extent, zoom) {\n        return super.purgeTrajectory(trajectory, extent || this.getMercatorExtent(), zoom || Math.floor(this.getOlZoom()));\n    }\n    /**\n     * Send the current bbox to the websocket\n     */\n    setBbox(extent, zoom) {\n        let newExtent = extent;\n        let newZoom = zoom;\n        if (!newExtent && this.isUpdateBboxOnMoveEnd) {\n            newExtent = extent || this.getMercatorExtent();\n            newZoom = Math.floor(this.getOlZoom());\n        }\n        super.setBbox(newExtent, newZoom);\n    }\n    /**\n     * Callback on 'move' event.\n     *\n     * @private\n     */\n    onMove() {\n        this.renderTrajectories();\n    }\n    renderTrajectoriesInternal(viewState, noInterpolate = false) {\n        const render = super.renderTrajectoriesInternal(viewState, noInterpolate);\n        if (render && this.map.style) {\n            const extent = getSourceCoordinates(this.map, this.pixelRatio);\n            const source = this.map.getSource(this.key);\n            if (source) {\n                source.setCoordinates(extent);\n            }\n        }\n        return render;\n    }\n    /**\n     * Send the new BBOX to the websocket.\n     *\n     * @private\n     * @override\n     */\n    onMoveEnd() {\n        this.renderTrajectories();\n        if (this.visible && this.isUpdateBboxOnMoveEnd) {\n            this.setBbox();\n        }\n    }\n    /**\n     * Update the cursor style when hovering a vehicle.\n     *\n     * @private\n     * @override\n     */\n    onFeatureHover(features, layer, coordinate) {\n        super.onFeatureHover(features, layer, coordinate);\n        this.map.getCanvasContainer().style.cursor = features.length\n            ? 'pointer'\n            : 'auto';\n    }\n}\nexport default RealtimeLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/layers/RealtimeLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "class",
    "name": "RealtimeLayer",
    "memberof": "build/mapbox/layers/RealtimeLayer.js",
    "static": true,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/mapbox/layers/RealtimeLayer.js",
    "importStyle": "RealtimeLayer",
    "description": "Responsible for loading and display data from a Realtime service.",
    "examples": [
      "import { RealtimeLayer } from 'mobility-toolbox-js/mapbox';\n\nconst layer = new RealtimeLayer({\n  url: [yourUrl],\n  apiKey: [yourApiKey],\n});"
    ],
    "see": [
      "<a href=\"/api/class/src/api/RealtimeAPI%20js~RealtimeAPI%20html\">RealtimeAPI</a>"
    ],
    "lineNumber": 27,
    "interface": false,
    "extends": [
      "Layer"
    ],
    "implements": [
      "RealtimeLayerInterface"
    ]
  },
  {
    "__docId__": 282,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "onZoomEnd",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onZoomEnd",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A [mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map/)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "beforeId",
        "description": "Layer's id before which we want to add the new layer."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "source",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#source",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"canvas\": *, \"coordinates\": *, \"animate\": boolean, \"attribution\": *}"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "beforeId",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#beforeId",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "layer",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#layer",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"type\": string, \"source\": *, \"layout\": *, \"paint\": *}"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "listeners",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#detachFromMap",
    "access": "public",
    "description": "Remove listeners from the Mapbox Map.",
    "lineNumber": 85,
    "params": [],
    "return": null
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "start",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#start",
    "access": "public",
    "description": "Start updating vehicles position.",
    "lineNumber": 108,
    "override": true,
    "listens": [
      {
        "types": [
          "mapboxgl.map.event:zoomend"
        ],
        "description": "Listen to zoom end event."
      },
      {
        "types": [
          "mapboxgl.map.event:mousemove"
        ],
        "description": "Listen to mousemove end."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "stop",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#stop",
    "access": "public",
    "description": "Stop updating vehicles position, and unlisten events.",
    "lineNumber": 119,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "onLoad",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onLoad",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "onUserMoveCallback",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onUserMoveCallback",
    "access": "public",
    "description": "Function triggered when the user moves the cursor over the map.",
    "lineNumber": 139,
    "override": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#renderTrajectories",
    "access": "public",
    "description": "Render the trajectories using current map's size, resolution and rotation.",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@overrides",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "noInterpolate",
        "description": "if true, renders the vehicles without interpolating theirs positions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "pixelRatio",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#pixelRatio",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "getRefreshTimeInMs",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#getRefreshTimeInMs",
    "access": "public",
    "description": "Return the delay in ms before the next rendering.",
    "lineNumber": 191,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "params": [
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "onVisibilityChange",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onVisibilityChange",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "purgeTrajectory",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#purgeTrajectory",
    "access": "private",
    "description": "Remove the trajectory form the list if necessary.",
    "lineNumber": 217,
    "params": [
      {
        "name": "trajectory",
        "types": [
          "*"
        ]
      },
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "setBbox",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#setBbox",
    "access": "public",
    "description": "Send the current bbox to the websocket",
    "lineNumber": 223,
    "params": [
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "onMove",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onMove",
    "access": "private",
    "description": "Callback on 'move' event.",
    "lineNumber": 237,
    "params": [],
    "return": null
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "renderTrajectoriesInternal",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#renderTrajectoriesInternal",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "undocument": true,
    "params": [
      {
        "name": "viewState",
        "types": [
          "*"
        ]
      },
      {
        "name": "noInterpolate",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "onMoveEnd",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onMoveEnd",
    "access": "private",
    "description": "Send the new BBOX to the websocket.",
    "lineNumber": 257,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "onFeatureHover",
    "memberof": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/mapbox/layers/RealtimeLayer.js~RealtimeLayer#onFeatureHover",
    "access": "private",
    "description": "Update the cursor style when hovering a vehicle.",
    "lineNumber": 269,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "build/mapbox/layers/index.js",
    "content": "export { default as Layer } from './Layer';\nexport { default as RealtimeLayer } from './RealtimeLayer';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/mapbox/layers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "build/ol/controls/CopyrightControl.js",
    "content": "import { inView } from 'ol/layer/Layer';\nimport CopyrightControlCommon from '../../common/controls/CopyrightControlCommon';\nimport removeDuplicate from '../../common/utils/removeDuplicate';\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map } from 'ol';\n * import { CopyrightControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n * });\n * const control = new CopyrightControl();\n * control.attachToMap(map)\n *\n *\n * @see <a href=\"/example/ol-copyright\">Openlayers copyright example</a>\n *\n * @extends {CopyrightControlCommon}\n */\nclass CopyrightControl extends CopyrightControlCommon {\n    constructor(options) {\n        super(options);\n        this.onPostRender = this.onPostRender.bind(this);\n    }\n    getCopyrights() {\n        var _a;\n        if (!this.frameState) {\n            return [];\n        }\n        let copyrights = [];\n        // This code loop comes mainly from ol.\n        (_a = this.frameState) === null || _a === void 0 ? void 0 : _a.layerStatesArray.forEach((layerState) => {\n            const { layer } = layerState;\n            if (this.frameState &&\n                inView(layerState, this.frameState.viewState) &&\n                layer &&\n                layer.getSource &&\n                layer.getSource() &&\n                layer.getSource().getAttributions()) {\n                copyrights = copyrights.concat(layer.getSource().getAttributions()(this.frameState));\n            }\n        });\n        return removeDuplicate(copyrights);\n    }\n    activate() {\n        super.activate();\n        if (this.map) {\n            this.map.on('postrender', this.onPostRender);\n        }\n    }\n    deactivate() {\n        if (this.map) {\n            this.map.un('postrender', this.onPostRender);\n        }\n    }\n    onPostRender(evt) {\n        if (this.map && this.element) {\n            /**\n             * @ignore\n             */\n            this.frameState = evt.frameState || undefined;\n            this.render();\n        }\n    }\n}\nexport default CopyrightControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/controls/CopyrightControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "class",
    "name": "CopyrightControl",
    "memberof": "build/ol/controls/CopyrightControl.js",
    "static": true,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/controls/CopyrightControl.js",
    "importStyle": "CopyrightControl",
    "description": "Display layer's copyrights.",
    "examples": [
      "import { Map } from 'ol';\nimport { CopyrightControl } from 'mobility-toolbox-js/ol';\n\nconst map = new Map({\n  target: 'map',\n});\nconst control = new CopyrightControl();\ncontrol.attachToMap(map)"
    ],
    "see": [
      "<a href=\"/example/ol-copyright\">Openlayers copyright example</a>"
    ],
    "lineNumber": 22,
    "interface": false,
    "extends": [
      "CopyrightControlCommon"
    ]
  },
  {
    "__docId__": 312,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "getCopyrights",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#getCopyrights",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "activate",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#activate",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "deactivate",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "onPostRender",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#onPostRender",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "frameState",
    "memberof": "build/ol/controls/CopyrightControl.js~CopyrightControl",
    "static": false,
    "longname": "build/ol/controls/CopyrightControl.js~CopyrightControl#frameState",
    "access": "public",
    "description": "",
    "lineNumber": 63,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "file",
    "name": "build/ol/controls/RoutingControl.js",
    "content": "import { Feature } from 'ol';\nimport { LineString, Point } from 'ol/geom';\nimport { Modify } from 'ol/interaction';\nimport { unByKey } from 'ol/Observable';\nimport { click } from 'ol/events/condition';\nimport { GeoJSON } from 'ol/format';\nimport { buffer } from 'ol/extent';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport BaseEvent from 'ol/events/Event';\nimport { RoutingAPI } from '../../api';\nimport ControlCommon from '../../common/controls/ControlCommon';\nimport RoutingLayer from '../layers/RoutingLayer';\n// Examples for a single hop:\n// basel sbb a station named \"basel sbb\"\n// ZUE, station \"Zürich HB\" by its common abbreviation\n// Zürich Hauptbahnhof or HBF Zürich are all valid synonyms für \"Zürich HB\"\n// @47.37811,8.53935 a station at position 47.37811, 8.53935\n// @47.37811,8.53935$4 track 4 in a station at position 47.37811, 8.53935\n// zürich hb@47.37811,8.53935$8 track 8 in station \"Zürich HB\" at position 47.37811, 8.53935\n/** @private */\nconst REGEX_VIA_POINT = /^([^@$!\\n]*)(@?([\\d.]+),([\\d.]+))?(\\$?([a-zA-Z0-9]{0,2}))$/;\n// Examples for a single hop:\n//\n// 47.37811,8.53935 a position 47.37811, 8.53935\n/** @private */\nconst REGEX_VIA_POINT_COORD = /^([\\d.]+),([\\d.]+)$/;\n// Examples for a single hop:\n//\n// !8596126 a station with id 8596126\n// !8596126$4 a station with id 8596126\n/** @private */\nconst REGEX_VIA_POINT_STATION_ID = /^!([^$]*)(\\$?([a-zA-Z0-9]{0,2}))$/;\n/** @private */\nconst STOP_FETCH_ABORT_CONTROLLER_KEY = 'stop-fetch';\n/** @private */\nconst getFlatCoordinatesFromSegments = (segmentArray) => {\n    const coords = [];\n    segmentArray.forEach((seg) => {\n        var _a;\n        // @ts-ignore\n        const coordArr = (_a = seg.getGeometry()) === null || _a === void 0 ? void 0 : _a.getCoordinates();\n        if (coordArr === null || coordArr === void 0 ? void 0 : coordArr.length) {\n            coords.push(...coordArr);\n        }\n    });\n    return coords;\n};\n/**\n * Display a route of a specified mean of transport.\n *\n * @example\n * import { Map } from 'ol';\n * import { RoutingControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map'\n * });\n *\n * const control = new RoutingControl();\n *\n * control.attachToMap(map)\n *\n * @classproperty {string} apiKey - Key used for RoutingApi requests.\n * @classproperty {string} stopsApiKey - Key used for Stop lookup requests (defaults to apiKey).\n * @classproperty {string} stopsApiUrl - Url used for Stop lookup requests (defaults to https://api.geops.io/stops/v1/lookup/).\n * @classproperty {Array.<Array<graph=\"osm\", minZoom=0, maxZoom=99>>} graphs - Array of routing graphs and min/max zoom levels. If you use the control in combination with the [geOps Maps API](https://developer.geops.io/apis/maps/), you may want to use the optimal level of generalizations: \"[['gen4', 0, 8], ['gen3', 8, 9], ['gen2', 9, 11], ['gen1', 11, 13], ['osm', 13, 99]]\"\n * @classproperty {string} mot - Mean of transport to be used for routing.\n * @classproperty {object} routingApiParams - object of additional parameters to pass to the routing api request.\n * @classproperty {object} snapToClosestStation - If true, the routing will snap the coordinate to the closest station. Default to false.\n * @classproperty {boolean} useRawViaPoints - Experimental property. Wen true, it allows the user to add via points using different kind of string. See \"via\" parameter defined by the [geOps Routing API](https://developer.geops.io/apis/routing/). Default to false, only array of coordinates and station's id are supported as via points.\n * @classproperty {RoutingLayer|Layer} routingLayer - Layer for adding route features.\n * @classproperty {function} onRouteError - Callback on error.\n * @classproperty {boolean} loading - True if the control is requesting the backend.\n * @see <a href=\"/example/ol-routing\">Openlayers routing example</a>\n *\n * @extends {Control}\n * @implements {RoutingInterface}\n */\nclass RoutingControl extends ControlCommon {\n    constructor(options = {}) {\n        super(options);\n        this.viaPoints = [];\n        this.loading = false;\n        this.graphs = [];\n        this.modify = true;\n        this.useRawViaPoints = false;\n        this.snapToClosestStation = false;\n        this.cacheStationData = {};\n        this.abortControllers = {};\n        this.segments = [];\n        this.format = new GeoJSON({ featureProjection: 'EPSG:3857' });\n        this.initialRouteDrag = {};\n        Object.defineProperties(this, {\n            mot: {\n                get: () => this.get('mot'),\n                set: (newMot) => {\n                    if (newMot) {\n                        this.set('mot', newMot);\n                        if (this.viaPoints) {\n                            this.drawRoute();\n                        }\n                    }\n                },\n            },\n            loading: {\n                get: () => this.get('loading'),\n                set: (newLoading) => {\n                    this.set('loading', newLoading);\n                },\n            },\n            modify: {\n                get: () => this.get('modify'),\n                set: (modify) => {\n                    this.set('modify', modify);\n                },\n            },\n        });\n        /** True if the control is requesting the backend. */\n        this.loading = false;\n        /** @ignore */\n        this.graphs = options.graphs || [['osm', 0, 99]];\n        /** @ignore */\n        this.mot = options.mot || 'bus';\n        /** @ignore */\n        this.modify = options.modify !== false;\n        /** @ignore */\n        this.routingApiParams = options.routingApiParams;\n        /** @ignore */\n        this.useRawViaPoints = options.useRawViaPoints || false;\n        /** @ignore */\n        this.snapToClosestStation = options.snapToClosestStation || false;\n        /** @ignore */\n        this.apiKey = options.apiKey;\n        /** @ignore */\n        this.stopsApiKey = options.stopsApiKey || this.apiKey;\n        /** @ignore */\n        this.stopsApiUrl = options.stopsApiUrl || 'https://api.geops.io/stops/v1/';\n        /** @ignore */\n        this.api = new RoutingAPI(Object.assign({}, options));\n        /** @ignore */\n        this.routingLayer =\n            options.routingLayer ||\n                new RoutingLayer({\n                    name: 'routing-layer',\n                    style: options.style,\n                });\n        /** @ignore */\n        this.onRouteError =\n            options.onRouteError ||\n                ((error) => {\n                    this.dispatchEvent(new BaseEvent('change:route'));\n                    this.reset();\n                    // eslint-disable-next-line no-console\n                    console.error(error);\n                });\n        /** @ignore */\n        this.onMapClick = this.onMapClick.bind(this);\n        /** @ignore */\n        this.onModifyEnd = this.onModifyEnd.bind(this);\n        /** @ignore */\n        this.onModifyStart = this.onModifyStart.bind(this);\n        /** @ignore */\n        this.createModifyInteraction();\n    }\n    /**\n     * Calculate at which resolutions corresponds each generalizations.\n     *\n     * @private\n     */\n    static getGraphsResolutions(graphs, map) {\n        const view = map.getView();\n        return graphs.map(([, minZoom, maxZoom]) => [\n            view.getResolutionForZoom(minZoom),\n            view.getResolutionForZoom(maxZoom || minZoom + 1),\n        ]);\n    }\n    /**\n     * Adds/Replaces a viaPoint to the viaPoints array and redraws route:\n     *   Adds a viaPoint at end of array by default.\n     *   If an index is passed a viaPoint is added at the specified index.\n     *   If an index is passed and overwrite x is > 0, x viaPoints at the specified\n     *     index are replaced with a single new viaPoint.\n     * @param {number[]|string} coordinates Array of coordinates\n     * @param {number} [index=-1] Integer representing the index of the added viaPoint. If not specified, the viaPoint is added at the end of the array.\n     * @param {number} [overwrite=0] Marks the number of viaPoints that are removed at the specified index on add.\n     */\n    addViaPoint(coordinatesOrString, index = -1, overwrite = 0) {\n        /* Add/Insert/Overwrite viapoint and redraw route */\n        this.viaPoints.splice(index === -1 ? this.viaPoints.length : index, overwrite, coordinatesOrString);\n        this.drawRoute();\n        this.dispatchEvent(new BaseEvent('change:route'));\n    }\n    /**\n     * Removes a viaPoint at the passed array index and redraws route\n     * By default the last viaPoint is removed.\n     * @param {number} index Integer representing the index of the viaPoint to delete.\n     */\n    removeViaPoint(index = (this.viaPoints || []).length - 1) {\n        /* Remove viapoint and redraw route */\n        if (this.viaPoints.length && this.viaPoints[index]) {\n            this.viaPoints.splice(index, 1);\n        }\n        this.drawRoute();\n        this.dispatchEvent(new BaseEvent('change:route'));\n    }\n    /**\n     * Replaces the current viaPoints with a new coordinate array.\n     * @param {Array<Array<number>>} coordinateArray Array of nested coordinates\n     */\n    setViaPoints(coordinateArray) {\n        this.viaPoints = [...coordinateArray];\n        this.drawRoute();\n        this.dispatchEvent(new BaseEvent('change:route'));\n    }\n    /**\n     * Removes all viaPoints, clears the source and triggers a change event\n     */\n    reset() {\n        var _a, _b, _c;\n        // Clear viaPoints and source\n        this.abortRequests();\n        this.viaPoints = [];\n        (_c = (_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.clear();\n        this.dispatchEvent(new BaseEvent('change:route'));\n    }\n    /**\n     * Aborts viapoint and route requests\n     * @private\n     */\n    abortRequests() {\n        var _a;\n        // Abort Routing API requests\n        this.graphs.forEach((graph) => {\n            const graphName = graph[0];\n            if (this.abortControllers[graphName]) {\n                this.abortControllers[graphName].abort();\n            }\n            this.abortControllers[graphName] = new AbortController();\n        });\n        // Abort Stops API requests\n        (_a = this.abortControllers[STOP_FETCH_ABORT_CONTROLLER_KEY]) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortControllers[STOP_FETCH_ABORT_CONTROLLER_KEY] =\n            new AbortController();\n        this.loading = false;\n    }\n    /**\n     * Draws route on map using an array of coordinates:\n     *   If a single coordinate is passed a single point feature is added to map.\n     *   If two or more coordinates are passed a request to the RoutingAPI fetches\n     *       the route using the passed coordinates and the current mot.\n     * @private\n     */\n    drawRoute() {\n        var _a, _b, _c, _d, _e, _f;\n        /* Calls RoutingAPI to draw a route using the viaPoints array */\n        this.abortRequests();\n        (_c = (_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.clear();\n        if (!this.viaPoints.length) {\n            return null;\n        }\n        if (this.viaPoints.length === 1) {\n            // Add point for first node\n            return this.drawViaPoint(this.viaPoints[0], 0, this.abortControllers[STOP_FETCH_ABORT_CONTROLLER_KEY]);\n        }\n        const formattedViaPoints = this.viaPoints.map((viaPoint) => {\n            var _a;\n            if (Array.isArray(viaPoint)) {\n                const projection = (_a = this.map) === null || _a === void 0 ? void 0 : _a.getView().getProjection();\n                // viaPoint is a coordinate\n                // Coordinates need to be reversed as required by the backend RoutingAPI\n                const [lon, lat] = toLonLat(viaPoint, projection);\n                return this.snapToClosestStation ? [`@${lat}`, lon] : [lat, lon];\n            }\n            // viaPoint is a string to use as it is\n            return this.useRawViaPoints ? viaPoint : `!${viaPoint}`;\n        });\n        this.loading = true;\n        // Clear source\n        (_f = (_e = (_d = this.routingLayer) === null || _d === void 0 ? void 0 : _d.olLayer) === null || _e === void 0 ? void 0 : _e.getSource()) === null || _f === void 0 ? void 0 : _f.clear();\n        // Create point features for the viaPoints\n        this.viaPoints.forEach((viaPoint, idx) => this.drawViaPoint(viaPoint, idx, this.abortControllers[STOP_FETCH_ABORT_CONTROLLER_KEY]));\n        return Promise.all(this.graphs.map(([graph], index) => {\n            const { signal } = this.abortControllers[graph];\n            if (!this.api) {\n                return Promise.resolve([]);\n            }\n            return this.api\n                .route(Object.assign({ graph, via: `${formattedViaPoints.join('|')}`, mot: this.mot, \n                // @ts-ignore missing property in swagger\n                'resolve-hops': false, elevation: false, 'coord-radius': 100.0, 'coord-punish': 1000.0 }, (this.routingApiParams || {})), { signal })\n                .then((featureCollection) => {\n                var _a, _b, _c, _d;\n                this.segments = this.format.readFeatures(featureCollection);\n                if (this.mot === 'foot') {\n                    // Extract unique values from viaPoint target value\n                    const uniqueVias = this.segments.reduce((resultVias, currentFeat) => {\n                        const segTrg = currentFeat.get('trg');\n                        return resultVias.find((via) => via[0] === segTrg[0] && via[1] === segTrg[1])\n                            ? resultVias\n                            : [...resultVias, segTrg];\n                    }, []);\n                    // Create LineString features from segments with same unique value\n                    this.segments = uniqueVias.map((via) => {\n                        const viaSegments = this.segments.filter((seg) => {\n                            const segTrg = seg.get('trg');\n                            return segTrg[0] === via[0] && segTrg[1] === via[1];\n                        });\n                        const coords = getFlatCoordinatesFromSegments(viaSegments);\n                        return new Feature({\n                            geometry: new LineString(coords),\n                        });\n                    });\n                }\n                // Create the new route. This route will be modifiable by the Modifiy interaction.\n                const coords = getFlatCoordinatesFromSegments(this.segments);\n                const routeFeature = new Feature({\n                    geometry: new LineString(coords),\n                });\n                routeFeature.set('graph', graph);\n                routeFeature.set('mot', this.mot);\n                if (this.graphsResolutions &&\n                    ((_a = this.graphsResolutions[index]) === null || _a === void 0 ? void 0 : _a.length) >= 2) {\n                    routeFeature.set('minResolution', this.graphsResolutions[index][0]);\n                    routeFeature.set('maxResolution', this.graphsResolutions[index][1]);\n                }\n                (_d = (_c = (_b = this.routingLayer) === null || _b === void 0 ? void 0 : _b.olLayer) === null || _c === void 0 ? void 0 : _c.getSource()) === null || _d === void 0 ? void 0 : _d.addFeature(routeFeature);\n                this.loading = false;\n            })\n                .catch((error) => {\n                if (error.name === 'AbortError') {\n                    // Ignore abort error\n                    return;\n                }\n                this.segments = [];\n                // Dispatch error event and execute error function\n                this.dispatchEvent(new BaseEvent('error'));\n                this.onRouteError(error, this);\n                this.loading = false;\n            });\n        }));\n    }\n    /**\n     * Draw a via point. This function can parse all the possibilitiies\n     *\n     * @private\n     */\n    drawViaPoint(viaPoint, idx, abortController) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const pointFeature = new Feature();\n        pointFeature.set('viaPointIdx', idx);\n        // The via point is a coordinate using the current map's projection\n        if (Array.isArray(viaPoint)) {\n            pointFeature.setGeometry(new Point(viaPoint));\n            (_c = (_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.addFeature(pointFeature);\n            return Promise.resolve(pointFeature);\n        }\n        // Possibility to parse:\n        //\n        // !8596126 a station with id 8596126\n        // !8596126$4 a station with id 8596126\n        if (!this.useRawViaPoints || REGEX_VIA_POINT_STATION_ID.test(viaPoint)) {\n            let stationId;\n            let track;\n            if (this.useRawViaPoints) {\n                [, stationId, , track] =\n                    REGEX_VIA_POINT_STATION_ID.exec(viaPoint) || [];\n            }\n            else {\n                [stationId, track] = viaPoint.split('$');\n            }\n            return fetch(`${this.stopsApiUrl}lookup/${stationId}?key=${this.stopsApiKey}`, { signal: abortController.signal })\n                .then((res) => res.json())\n                .then((stationData) => {\n                var _a, _b, _c;\n                const { coordinates } = stationData.features[0].geometry;\n                this.cacheStationData[viaPoint] = fromLonLat(coordinates);\n                pointFeature.set('viaPointTrack', track);\n                pointFeature.setGeometry(new Point(fromLonLat(coordinates)));\n                (_c = (_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.addFeature(pointFeature);\n                return pointFeature;\n            })\n                .catch((error) => {\n                if (error.name === 'AbortError') {\n                    // Ignore abort error\n                    return;\n                }\n                // Dispatch error event and execute error function\n                this.dispatchEvent(new BaseEvent('error'));\n                this.onRouteError(error, this);\n                this.loading = false;\n            });\n        }\n        // Only when this.useRawViaPoints is true.\n        // Possibility to parse:\n        //\n        // 47.37811,8.53935 a position 47.37811, 8.53935\n        if (this.useRawViaPoints && REGEX_VIA_POINT_COORD.test(viaPoint)) {\n            const [lat, lon] = REGEX_VIA_POINT_COORD.exec(viaPoint) || [];\n            const coordinates = fromLonLat([parseFloat(lon), parseFloat(lat)], (_d = this.map) === null || _d === void 0 ? void 0 : _d.getView().getProjection());\n            pointFeature.setGeometry(new Point(coordinates));\n            (_g = (_f = (_e = this.routingLayer) === null || _e === void 0 ? void 0 : _e.olLayer) === null || _f === void 0 ? void 0 : _f.getSource()) === null || _g === void 0 ? void 0 : _g.addFeature(pointFeature);\n            return Promise.resolve(pointFeature);\n        }\n        // Only when this.useRawViaPoints is true.\n        // It will parse the via point to find some name, id, track coordinates.\n        //\n        // Possibility to parse:\n        //\n        // @47.37811,8.53935 a station at position 47.37811, 8.53935\n        // @47.37811,8.53935$4 track 4 in a station at position 47.37811, 8.53935\n        // zürich hb@47.37811,8.53935$8 track 8 in station \"Zürich HB\" at position 47.37811, 8.53935\n        const [, stationName, , lat, lon, , track] = REGEX_VIA_POINT.exec(viaPoint) || [];\n        if (lon && lat) {\n            const coordinates = fromLonLat([parseFloat(lon), parseFloat(lat)], (_h = this.map) === null || _h === void 0 ? void 0 : _h.getView().getProjection());\n            pointFeature.set('viaPointTrack', track);\n            pointFeature.setGeometry(new Point(coordinates));\n            (_l = (_k = (_j = this.routingLayer) === null || _j === void 0 ? void 0 : _j.olLayer) === null || _k === void 0 ? void 0 : _k.getSource()) === null || _l === void 0 ? void 0 : _l.addFeature(pointFeature);\n            return Promise.resolve(pointFeature);\n        }\n        if (stationName) {\n            return fetch(`${this.stopsApiUrl}?key=${this.stopsApiKey}&q=${stationName}&limit=1`, { signal: abortController.signal })\n                .then((res) => res.json())\n                .then((stationData) => {\n                var _a, _b, _c;\n                const { coordinates } = stationData.features[0].geometry;\n                this.cacheStationData[viaPoint] = fromLonLat(coordinates);\n                pointFeature.set('viaPointTrack', track);\n                pointFeature.setGeometry(new Point(fromLonLat(coordinates)));\n                (_c = (_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.addFeature(pointFeature);\n                return pointFeature;\n            })\n                .catch((error) => {\n                // Dispatch error event and execute error function\n                this.dispatchEvent(new BaseEvent('error'));\n                this.onRouteError(error, this);\n                this.loading = false;\n                return null;\n            });\n        }\n        return Promise.resolve(null);\n    }\n    /**\n     * Used on click on map while control is active:\n     *   By default adds a viaPoint to the end of array.\n     *   If an existing viaPoint is clicked removes the clicked viaPoint.\n     * @private\n     */\n    onMapClick(evt) {\n        const feats = evt.target.getFeaturesAtPixel(evt.pixel);\n        const viaPoint = feats.find((feat) => {\n            var _a;\n            return ((_a = feat.getGeometry()) === null || _a === void 0 ? void 0 : _a.getType()) === 'Point' &&\n                feat.get('viaPointIdx') !== undefined;\n        });\n        if (viaPoint) {\n            // Remove existing viaPoint on click and abort viaPoint add\n            this.removeViaPoint(viaPoint.get('viaPointIdx'));\n            return;\n        }\n        this.addViaPoint(evt.coordinate);\n    }\n    /**\n     * Used on start of the modify interaction. Stores relevant data\n     * in this.initialRouteDrag object\n     * @private\n     */\n    onModifyStart(evt) {\n        var _a;\n        // When modify start, we search the index of the segment that is modifying.\n        let segmentIndex = -1;\n        const route = evt.features\n            .getArray()\n            .find((feat) => { var _a; return ((_a = feat.getGeometry()) === null || _a === void 0 ? void 0 : _a.getType()) === 'LineString'; });\n        // Find the segment index that is being modified\n        if (route && route.getGeometry() && evt.mapBrowserEvent.coordinate) {\n            // We use a buff extent to fix floating issues , see https://github.com/openlayers/openlayers/issues/7130#issuecomment-535856422\n            const closestExtent = buffer(new Point(\n            // @ts-ignore\n            (_a = route.getGeometry()) === null || _a === void 0 ? void 0 : _a.getClosestPoint(evt.mapBrowserEvent.coordinate)).getExtent(), 0.001);\n            segmentIndex = this.segments.findIndex((segment) => { var _a; return (_a = segment.getGeometry()) === null || _a === void 0 ? void 0 : _a.intersectsExtent(closestExtent); });\n        }\n        // Find the viaPoint that is being modified\n        const viaPoint = (evt.features\n            .getArray()\n            .filter((feat) => { var _a; return ((_a = feat.getGeometry()) === null || _a === void 0 ? void 0 : _a.getType()) === 'Point'; }) ||\n            [])[0];\n        // Write object with modify info\n        /** @ignore */\n        this.initialRouteDrag = {\n            viaPoint,\n            oldRoute: route && route.clone(),\n            segmentIndex,\n        };\n    }\n    /**\n     * Used on end of the modify interaction. Resolves feature modification:\n     *   Line drag creates new viaPoint at the final coordinate of drag.\n     *   Point drag replaces old viaPoint.\n     * @private\n     */\n    onModifyEnd(evt) {\n        const coord = evt.mapBrowserEvent.coordinate;\n        const { oldRoute, viaPoint, segmentIndex } = this.initialRouteDrag || {};\n        // If viaPoint is being relocated overwrite the old viaPoint\n        if (viaPoint) {\n            return this.addViaPoint(coord, viaPoint.get('viaPointIdx'), 1);\n        }\n        // In case there is no route overwrite first coordinate\n        if (!oldRoute) {\n            return this.addViaPoint(coord, 0, 1);\n        }\n        // We can't add a via point because we haven't found which segment has been modified.\n        if (segmentIndex === -1) {\n            return Promise.reject(new Error('No segment found'));\n        }\n        // Insert new viaPoint at the  modified segment index + 1\n        return this.addViaPoint(coord, (segmentIndex || 0) + 1);\n    }\n    /**\n     * Define a default element.\n     *\n     * @private\n     */\n    createDefaultElement() {\n        /** @ignore */\n        this.element = document.createElement('button');\n        this.element.id = 'ol-toggle-routing';\n        this.element.innerHTML = 'Toggle Route Control';\n        this.element.onclick = () => this.active ? this.deactivate() : this.activate();\n        Object.assign(this.element.style, {\n            position: 'absolute',\n            right: '10px',\n            top: '10px',\n        });\n    }\n    /**\n     * Create the interaction used to modify vertexes of features.\n     * @private\n     */\n    createModifyInteraction() {\n        var _a, _b, _c;\n        /**\n         * @type {ol.interaction.Modify}\n         * @private\n         */\n        // Define and add modify interaction\n        this.modifyInteraction = new Modify({\n            source: ((_b = (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) || undefined,\n            pixelTolerance: 4,\n            hitDetection: (_c = this.routingLayer) === null || _c === void 0 ? void 0 : _c.olLayer,\n            deleteCondition: (e) => {\n                const feats = e.target.getFeaturesAtPixel(e.pixel, {\n                    hitTolerance: 5,\n                });\n                const viaPoint = feats.find((feat) => { var _a; return ((_a = feat.getGeometry()) === null || _a === void 0 ? void 0 : _a.getType()) === 'Point' && feat.get('index'); });\n                if (click(e) && viaPoint) {\n                    // Remove node & viaPoint if an existing viaPoint was clicked\n                    this.removeViaPoint(viaPoint.get('index'));\n                    return true;\n                }\n                return false;\n            },\n        });\n        this.modifyInteraction.on('modifystart', this.onModifyStart);\n        this.modifyInteraction.on('modifyend', this.onModifyEnd);\n        this.modifyInteraction.setActive(false);\n    }\n    /**\n     * Add click listener to map.\n     * @private\n     */\n    addListeners() {\n        var _a;\n        if (!this.modify) {\n            return;\n        }\n        this.removeListeners();\n        /** @ignore */\n        this.onMapClickKey = (_a = this.map) === null || _a === void 0 ? void 0 : _a.on('singleclick', this.onMapClick);\n    }\n    /**\n     * Remove click listener from map.\n     * @private\n     */\n    removeListeners() {\n        if (this.onMapClickKey) {\n            unByKey(this.onMapClickKey);\n        }\n    }\n    activate() {\n        var _a, _b;\n        super.activate();\n        if (this.map) {\n            /** @ignore */\n            this.format = new GeoJSON({\n                featureProjection: this.map.getView().getProjection(),\n            });\n            /** @ignore */\n            this.graphsResolutions = RoutingControl.getGraphsResolutions(this.graphs, this.map);\n            // Clean the modifyInteraction if present\n            if (this.modifyInteraction) {\n                this.map.removeInteraction(this.modifyInteraction);\n            }\n            // Add modify interaction, RoutingLayer and listeners\n            (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.attachToMap(this.map);\n            if (this.modifyInteraction) {\n                this.map.addInteraction(this.modifyInteraction);\n            }\n            (_b = this.modifyInteraction) === null || _b === void 0 ? void 0 : _b.setActive(this.modify);\n            this.addListeners();\n        }\n    }\n    deactivate() {\n        var _a;\n        if (this.map) {\n            // Remove modify interaction, RoutingLayer, listeners and viaPoints\n            (_a = this.routingLayer) === null || _a === void 0 ? void 0 : _a.detachFromMap();\n            if (this.modifyInteraction) {\n                this.map.removeInteraction(this.modifyInteraction);\n            }\n            this.removeListeners();\n            this.reset();\n        }\n    }\n    render() { }\n}\nexport default RoutingControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 320,
    "kind": "variable",
    "name": "REGEX_VIA_POINT",
    "memberof": "build/ol/controls/RoutingControl.js",
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~REGEX_VIA_POINT",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "REGEX_VIA_POINT_COORD",
    "memberof": "build/ol/controls/RoutingControl.js",
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~REGEX_VIA_POINT_COORD",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "REGEX_VIA_POINT_STATION_ID",
    "memberof": "build/ol/controls/RoutingControl.js",
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~REGEX_VIA_POINT_STATION_ID",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "STOP_FETCH_ABORT_CONTROLLER_KEY",
    "memberof": "build/ol/controls/RoutingControl.js",
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~STOP_FETCH_ABORT_CONTROLLER_KEY",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "getFlatCoordinatesFromSegments",
    "memberof": "build/ol/controls/RoutingControl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~getFlatCoordinatesFromSegments",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "params": [
      {
        "name": "segmentArray",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "class",
    "name": "RoutingControl",
    "memberof": "build/ol/controls/RoutingControl.js",
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/controls/RoutingControl.js",
    "importStyle": "RoutingControl",
    "description": "Display a route of a specified mean of transport.",
    "examples": [
      "import { Map } from 'ol';\nimport { RoutingControl } from 'mobility-toolbox-js/ol';\n\nconst map = new Map({\n  target: 'map'\n});\n\nconst control = new RoutingControl();\n\ncontrol.attachToMap(map)"
    ],
    "see": [
      "<a href=\"/example/ol-routing\">Openlayers routing example</a>"
    ],
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{string} apiKey - Key used for RoutingApi requests."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} stopsApiKey - Key used for Stop lookup requests (defaults to apiKey)."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} stopsApiUrl - Url used for Stop lookup requests (defaults to https://api.geops.io/stops/v1/lookup/)."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{Array.<Array<graph=\"osm\", minZoom=0, maxZoom=99>>} graphs - Array of routing graphs and min/max zoom levels. If you use the control in combination with the [geOps Maps API](https://developer.geops.io/apis/maps/), you may want to use the optimal level of generalizations: \"[['gen4', 0, 8], ['gen3', 8, 9], ['gen2', 9, 11], ['gen1', 11, 13], ['osm', 13, 99]]\""
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{string} mot - Mean of transport to be used for routing."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{object} routingApiParams - object of additional parameters to pass to the routing api request."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{object} snapToClosestStation - If true, the routing will snap the coordinate to the closest station. Default to false."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} useRawViaPoints - Experimental property. Wen true, it allows the user to add via points using different kind of string. See \"via\" parameter defined by the [geOps Routing API](https://developer.geops.io/apis/routing/). Default to false, only array of coordinates and station's id are supported as via points."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{RoutingLayer|Layer} routingLayer - Layer for adding route features."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{function} onRouteError - Callback on error."
      },
      {
        "tagName": "@classproperty",
        "tagValue": "{boolean} loading - True if the control is requesting the backend."
      }
    ],
    "interface": false,
    "extends": [
      "Control"
    ],
    "implements": [
      "RoutingInterface"
    ]
  },
  {
    "__docId__": 326,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "viaPoints",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#viaPoints",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "loading",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#loading",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "graphs",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#graphs",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "modify",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#modify",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "useRawViaPoints",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#useRawViaPoints",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "snapToClosestStation",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#snapToClosestStation",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "member",
    "name": "cacheStationData",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#cacheStationData",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "abortControllers",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#abortControllers",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "name": "segments",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#segments",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "format",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#format",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "initialRouteDrag",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#initialRouteDrag",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "mot",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#mot",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "routingApiParams",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#routingApiParams",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "member",
    "name": "apiKey",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#apiKey",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "member",
    "name": "stopsApiKey",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#stopsApiKey",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "stopsApiUrl",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#stopsApiUrl",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "api",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#api",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "routingLayer",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#routingLayer",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "onRouteError",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onRouteError",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "getGraphsResolutions",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl.getGraphsResolutions",
    "access": "private",
    "description": "Calculate at which resolutions corresponds each generalizations.",
    "lineNumber": 170,
    "params": [
      {
        "name": "graphs",
        "types": [
          "*"
        ]
      },
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "addViaPoint",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#addViaPoint",
    "access": "public",
    "description": "Adds/Replaces a viaPoint to the viaPoints array and redraws route:\n  Adds a viaPoint at end of array by default.\n  If an index is passed a viaPoint is added at the specified index.\n  If an index is passed and overwrite x is > 0, x viaPoints at the specified\n    index are replaced with a single new viaPoint.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinates",
        "description": "Array of coordinates"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "index",
        "description": "Integer representing the index of the added viaPoint. If not specified, the viaPoint is added at the end of the array."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "overwrite",
        "description": "Marks the number of viaPoints that are removed at the specified index on add."
      }
    ],
    "return": null
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "removeViaPoint",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#removeViaPoint",
    "access": "public",
    "description": "Removes a viaPoint at the passed array index and redraws route\nBy default the last viaPoint is removed.",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Integer representing the index of the viaPoint to delete."
      }
    ],
    "return": null
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "setViaPoints",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#setViaPoints",
    "access": "public",
    "description": "Replaces the current viaPoints with a new coordinate array.",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Array<number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinateArray",
        "description": "Array of nested coordinates"
      }
    ],
    "return": null
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "reset",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#reset",
    "access": "public",
    "description": "Removes all viaPoints, clears the source and triggers a change event",
    "lineNumber": 218,
    "params": [],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "abortRequests",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#abortRequests",
    "access": "private",
    "description": "Aborts viapoint and route requests",
    "lineNumber": 230,
    "params": [],
    "return": null
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "drawRoute",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#drawRoute",
    "access": "private",
    "description": "Draws route on map using an array of coordinates:\n  If a single coordinate is passed a single point feature is added to map.\n  If two or more coordinates are passed a request to the RoutingAPI fetches\n      the route using the passed coordinates and the current mot.",
    "lineNumber": 253,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "drawViaPoint",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#drawViaPoint",
    "access": "private",
    "description": "Draw a via point. This function can parse all the possibilitiies",
    "lineNumber": 347,
    "params": [
      {
        "name": "viaPoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "idx",
        "types": [
          "*"
        ]
      },
      {
        "name": "abortController",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "onMapClick",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onMapClick",
    "access": "private",
    "description": "Used on click on map while control is active:\n  By default adds a viaPoint to the end of array.\n  If an existing viaPoint is clicked removes the clicked viaPoint.",
    "lineNumber": 448,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "onModifyStart",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onModifyStart",
    "access": "private",
    "description": "Used on start of the modify interaction. Stores relevant data\nin this.initialRouteDrag object",
    "lineNumber": 467,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "onModifyEnd",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onModifyEnd",
    "access": "private",
    "description": "Used on end of the modify interaction. Resolves feature modification:\n  Line drag creates new viaPoint at the final coordinate of drag.\n  Point drag replaces old viaPoint.",
    "lineNumber": 501,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "createDefaultElement",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#createDefaultElement",
    "access": "private",
    "description": "Define a default element.",
    "lineNumber": 524,
    "params": [],
    "return": null
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "element",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#element",
    "access": "public",
    "description": null,
    "lineNumber": 526,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "createModifyInteraction",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#createModifyInteraction",
    "access": "private",
    "description": "Create the interaction used to modify vertexes of features.",
    "lineNumber": 540,
    "params": [],
    "return": null
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "modifyInteraction",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#modifyInteraction",
    "access": "private",
    "description": "",
    "lineNumber": 547,
    "type": {
      "nullable": null,
      "types": [
        "ol.interaction.Modify"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "addListeners",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#addListeners",
    "access": "private",
    "description": "Add click listener to map.",
    "lineNumber": 572,
    "params": [],
    "return": null
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "onMapClickKey",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onMapClickKey",
    "access": "public",
    "description": null,
    "lineNumber": 579,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "removeListeners",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#removeListeners",
    "access": "private",
    "description": "Remove click listener from map.",
    "lineNumber": 585,
    "params": [],
    "return": null
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "activate",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#activate",
    "access": "public",
    "description": null,
    "lineNumber": 590,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "graphsResolutions",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#graphsResolutions",
    "access": "public",
    "description": null,
    "lineNumber": 599,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "deactivate",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#deactivate",
    "access": "public",
    "description": null,
    "lineNumber": 613,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "render",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#render",
    "access": "public",
    "description": null,
    "lineNumber": 625,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "build/ol/controls/StopFinderControl.js",
    "content": "import { fromLonLat } from 'ol/proj';\nimport StopFinderControlCommon from '../../common/controls/StopFinderControlCommon';\n/**\n * Search stations.\n *\n * @example\n * import { Map } from 'ol';\n * import { StopFinderControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n * });\n *\n * const control = new StopFinderControl({\n *   apiKey: [yourApiKey]\n * });\n *\n * control.attachToMap(map);\n *\n *\n * @see <a href=\"/example/ol-search\">Openlayers search example</a>\n */\nclass StopFinderControl extends StopFinderControlCommon {\n    /**\n     * @private\n     */\n    onSuggestionClick(suggestion) {\n        const coord = fromLonLat(suggestion.geometry.coordinates);\n        this.map.getView().setCenter(coord);\n    }\n}\nexport default StopFinderControl;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/controls/StopFinderControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "class",
    "name": "StopFinderControl",
    "memberof": "build/ol/controls/StopFinderControl.js",
    "static": true,
    "longname": "build/ol/controls/StopFinderControl.js~StopFinderControl",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/controls/StopFinderControl.js",
    "importStyle": "StopFinderControl",
    "description": "Search stations.",
    "examples": [
      "import { Map } from 'ol';\nimport { StopFinderControl } from 'mobility-toolbox-js/ol';\n\nconst map = new Map({\n  target: 'map',\n});\n\nconst control = new StopFinderControl({\n  apiKey: [yourApiKey]\n});\n\ncontrol.attachToMap(map);"
    ],
    "see": [
      "<a href=\"/example/ol-search\">Openlayers search example</a>"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "build/common/controls/StopFinderControlCommon.js~StopFinderControlCommon"
    ]
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "onSuggestionClick",
    "memberof": "build/ol/controls/StopFinderControl.js~StopFinderControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/controls/StopFinderControl.js~StopFinderControl#onSuggestionClick",
    "access": "private",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "name": "suggestion",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "build/ol/controls/index.js",
    "content": "export { default as CopyrightControl } from './CopyrightControl';\nexport { default as RoutingControl } from './RoutingControl';\nexport { default as StopFinderControl } from './StopFinderControl';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/controls/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "file",
    "name": "build/ol/index.js",
    "content": "export * from '../api';\nexport * from '../common';\nexport * from './controls';\nexport * from './layers';\nexport * from './styles';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 394,
    "kind": "file",
    "name": "build/ol/layers/Layer.js",
    "content": "import { unByKey } from 'ol/Observable';\nimport LayerCommon from '../../common/layers/LayerCommon';\nimport userInteractionsMixin from '../../common/mixins/UserInteractionsLayerMixin';\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {LayerCommon}\n */\nclass Layer extends userInteractionsMixin(LayerCommon) {\n    /**\n     * Constructor.\n     *\n     * @param {LayerCommonOptions} options\n     * @param {ol/layer/Layer~Layer} options.olLayer The layer (required).\n     * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n     * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n     * @param {string} [options.copyright=undefined] Copyright-Statement.\n     * @param {Array<Layer>} [options.children=[]] Sublayers.\n     * @param {Object} [options.properties={}] Application-specific layer properties.\n     * @param {boolean} [options.visible=true] If true this layer is the currently visible layer on the map.\n     */\n    constructor(options) {\n        var _a;\n        super(options);\n        (_a = this.olLayer) === null || _a === void 0 ? void 0 : _a.setVisible(this.visible);\n    }\n    /**\n     * Define layer's properties.\n     *\n     * @ignore\n     */\n    defineProperties(options) {\n        super.defineProperties(options);\n        Object.defineProperties(this, {\n            olLayer: { value: options.olLayer, writable: true },\n            olListenersKeys: {\n                value: [],\n            },\n        });\n    }\n    /**\n     * Initialize the layer and listen to feature clicks.\n     * @param {ol/Map~Map} map\n     */\n    attachToMap(map) {\n        var _a, _b, _c, _d, _e;\n        super.attachToMap(map);\n        if (!this.map) {\n            return;\n        }\n        // Make sure the visiblity is correct\n        (_a = this.olLayer) === null || _a === void 0 ? void 0 : _a.setVisible(this.visible);\n        if (this.olLayer &&\n            !((_d = (_c = (_b = this.map) === null || _b === void 0 ? void 0 : _b.getLayers()) === null || _c === void 0 ? void 0 : _c.getArray()) === null || _d === void 0 ? void 0 : _d.includes(this.olLayer))) {\n            this.map.addLayer(this.olLayer);\n        }\n        this.olListenersKeys.push(\n        // @ts-ignore\n        this.on('change:visible', () => {\n            if (this.olLayer) {\n                this.olLayer.setVisible(this.visible);\n            }\n        }));\n        this.olListenersKeys.push(this.map.getLayers().on('remove', (evt) => {\n            if (evt.element === this.olLayer) {\n                this.detachFromMap();\n            }\n        }));\n        this.toggleVisibleListeners();\n        this.olListenersKeys.push(\n        // @ts-ignore\n        this.on('change:visible', this.toggleVisibleListeners));\n        // We set the copyright to the source used by the layer.\n        if (this.copyrights && this.olLayer) {\n            const attributions = this.copyrights || [];\n            if (this.olLayer.getLayers) {\n                this.olLayer\n                    .getLayers()\n                    .getArray()\n                    .forEach((layer) => {\n                    var _a;\n                    // @ts-ignore\n                    if (layer.getSource) {\n                        // @ts-ignore\n                        (_a = layer.getSource()) === null || _a === void 0 ? void 0 : _a.setAttributions(attributions);\n                    }\n                });\n                // @ts-ignore\n            }\n            else if (this.olLayer.getSource) {\n                // @ts-ignore\n                (_e = this.olLayer.getSource()) === null || _e === void 0 ? void 0 : _e.setAttributions(attributions);\n            }\n        }\n    }\n    /**\n     * Terminate what was initialized in init function. Remove layer, events...\n     */\n    detachFromMap() {\n        var _a, _b, _c;\n        this.deactivateUserInteractions();\n        unByKey(this.olListenersKeys);\n        if (this.olLayer &&\n            ((_c = (_b = (_a = this.map) === null || _a === void 0 ? void 0 : _a.getLayers()) === null || _b === void 0 ? void 0 : _b.getArray()) === null || _c === void 0 ? void 0 : _c.includes(this.olLayer))) {\n            this.map.removeLayer(this.olLayer);\n        }\n        super.detachFromMap();\n    }\n    activateUserInteractions() {\n        var _a, _b;\n        this.deactivateUserInteractions();\n        if (this.map &&\n            this.userInteractions &&\n            this.userClickInteractions &&\n            ((_a = this.userClickCallbacks) === null || _a === void 0 ? void 0 : _a.length)) {\n            this.singleClickListenerKey = this.map.on('singleclick', this.onUserClickCallback);\n            this.olListenersKeys.push(this.singleClickListenerKey);\n        }\n        if (this.map &&\n            this.userInteractions &&\n            this.userHoverInteractions &&\n            ((_b = this.userHoverCallbacks) === null || _b === void 0 ? void 0 : _b.length)) {\n            this.pointerMoveListenerKey = this.map.on('pointermove', this.onUserMoveCallback);\n        }\n    }\n    deactivateUserInteractions() {\n        unByKey([this.pointerMoveListenerKey, this.singleClickListenerKey]);\n    }\n    /**\n     * Toggle listeners needed when a layer is avisible or not.\n     * @private\n     */\n    toggleVisibleListeners() {\n        if (this.visible) {\n            this.activateUserInteractions();\n        }\n        else {\n            this.deactivateUserInteractions();\n        }\n    }\n    /**\n     * Create a copy of the Layer.\n     * @param {Object} newOptions Options to override\n     * @return {Layer} A Layer\n     */\n    clone(newOptions) {\n        return new Layer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default Layer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/Layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 395,
    "kind": "class",
    "name": "Layer",
    "memberof": "build/ol/layers/Layer.js",
    "static": true,
    "longname": "build/ol/layers/Layer.js~Layer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/Layer.js",
    "importStyle": "Layer",
    "description": "A class representing a layer to display on an OpenLayers map.",
    "examples": [
      "import { Layer } from 'mobility-toolbox-js/ol';\n\nconst layer = new Layer({\n  olLayer: ...,\n});"
    ],
    "see": [
      "<a href=\"/example/ol-map\">Map example</a>"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "LayerCommon"
    ]
  },
  {
    "__docId__": 396,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerCommonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol/layer/Layer~Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.olLayer",
        "description": "The layer (required)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid()",
        "defaultRaw": "uuid()",
        "name": "options.name",
        "description": "Layer name. Default use a generated uuid."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "uuid().toLowerCase()",
        "defaultRaw": "uuid().toLowerCase()",
        "name": "options.key",
        "description": "Layer key, will use options.name.toLowerCase() if not specified."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "options.copyright",
        "description": "Copyright-Statement."
      },
      {
        "nullable": null,
        "types": [
          "Array<Layer>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.children",
        "description": "Sublayers."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.properties",
        "description": "Application-specific layer properties."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.visible",
        "description": "If true this layer is the currently visible layer on the map."
      }
    ]
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "defineProperties",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#defineProperties",
    "access": "public",
    "description": "Define layer's properties.",
    "lineNumber": 42,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to feature clicks.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 109,
    "params": [],
    "return": null
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "activateUserInteractions",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#activateUserInteractions",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "singleClickListenerKey",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#singleClickListenerKey",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "pointerMoveListenerKey",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#pointerMoveListenerKey",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "deactivateUserInteractions",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#deactivateUserInteractions",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "toggleVisibleListeners",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#toggleVisibleListeners",
    "access": "private",
    "description": "Toggle listeners needed when a layer is avisible or not.",
    "lineNumber": 143,
    "params": [],
    "return": null
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#clone",
    "access": "public",
    "description": "Create a copy of the Layer.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layer"
      ],
      "spread": false,
      "description": "A Layer"
    }
  },
  {
    "__docId__": 406,
    "kind": "file",
    "name": "build/ol/layers/MapGlLayer.js",
    "content": "/* eslint-disable max-classes-per-file */\nimport { toLonLat } from 'ol/proj';\nimport OlLayer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport BaseEvent from 'ol/events/Event';\nimport { getUrlWithParams, getMapboxMapCopyrights } from '../../common/utils';\nimport Layer from './Layer';\n/**\n * Common class for Mapbox and Maplibre and potential other fork from Mapbox.\n * It's used to share code between Mapbox and Maplibre layers without importing both libs.\n */\nclass MapGlLayer extends Layer {\n    constructor(options) {\n        super(options);\n        this.olLayer = new OlLayer({\n            source: new Source({}),\n            render: this.getOlLayerRender(),\n        });\n        /**\n         * Url of the mapbox style.\n         * @type {string}\n         * @private\n         */\n        this.styleUrl = options.url;\n        /**\n         * Api key for the url of the mapbox style.\n         * If set to false, the apiKey is not required.\n         * @type {string}\n         * @private\n         */\n        this.apiKey = options.apiKey;\n        /**\n         * Name of the apiKey to set in the url request.\n         * Default is 'key'.\n         * @type {string}\n         * @private\n         */\n        this.apiKeyName = options.apiKeyName || 'key';\n        /** @ignore */\n        this.updateAttribution = this.updateAttribution.bind(this);\n    }\n    /**\n     * Initialize the layer and listen to feature clicks.\n     * @param {ol/Map~Map} map\n     */\n    attachToMap(map) {\n        super.attachToMap(map);\n        if (!this.map) {\n            return;\n        }\n        /**\n         * The feature format.\n         * @type {ol/format/GeoJSON}\n         */\n        this.format = new GeoJSON({\n            featureProjection: this.map.getView().getProjection(),\n        });\n        this.loadMbMap();\n    }\n    /**\n     * Terminate what was initialized in init function. Remove layer, events...\n     */\n    detachFromMap() {\n        if (this.mbMap) {\n            this.mbMap.off('idle', this.updateAttribution);\n            // Some asynchrone repaints are triggered even if the mbMap has been removed,\n            // to avoid display of errors we set an empty function.\n            this.mbMap.triggerRepaint = () => { };\n            this.mbMap.remove();\n            this.mbMap = undefined;\n        }\n        this.loaded = false;\n        super.detachFromMap();\n    }\n    /**\n     * Create the mapbox map.\n     * @private\n     */\n    loadMbMap() {\n        var _a, _b, _c;\n        this.olListenersKeys.push(\n        // @ts-ignore\n        (_a = this.map) === null || _a === void 0 ? void 0 : _a.on('change:target', () => {\n            this.loadMbMap();\n        }));\n        if (!((_b = this.map) === null || _b === void 0 ? void 0 : _b.getTargetElement())) {\n            return;\n        }\n        if (!this.visible) {\n            // On next change of visibility we load the map\n            this.olListenersKeys.push(\n            // @ts-ignore\n            this.once('change:visible', () => {\n                this.loadMbMap();\n            }));\n            return;\n        }\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.width = '100%';\n        container.style.height = '100%';\n        if (!this.styleUrl) {\n            // eslint-disable-next-line no-console\n            console.error(`No styleUrl defined for mapbox layer: ${this.styleUrl}`);\n            return;\n        }\n        if (!this.apiKey && !((_c = this.styleUrl) === null || _c === void 0 ? void 0 : _c.includes(this.apiKeyName))) {\n            // eslint-disable-next-line no-console\n            console.error(`No apiKey defined for mapbox layer with style url to ${this.styleUrl}`);\n        }\n        const Map = this.getMapboxMapClass();\n        /**\n         * A mapbox map\n         * @type {mapboxgl.Map}\n         */\n        this.mbMap = new Map(Object.assign({ style: getUrlWithParams(this.styleUrl, {\n                [this.apiKeyName]: this.apiKey,\n            }).toString(), container, interactive: false, trackResize: false, attributionControl: false }, (this.options.mapOptions || {})));\n        this.mbMap.once('load', () => {\n            /**\n             * Is the map loaded.\n             * @type {boolean}\n             */\n            this.loaded = true;\n            this.dispatchEvent(new BaseEvent('load'));\n        });\n        this.mbMap.on('idle', this.updateAttribution);\n    }\n    /**\n     * Update attributions of the source.\n     * @private\n     */\n    updateAttribution(evt) {\n        var _a, _b, _c;\n        const newAttributions = getMapboxMapCopyrights(evt.target) || [];\n        if (((_a = this.copyrights) === null || _a === void 0 ? void 0 : _a.toString()) !== newAttributions.toString()) {\n            this.copyrights = newAttributions;\n            // @ts-ignore\n            (_c = (_b = this.olLayer) === null || _b === void 0 ? void 0 : _b.getSource()) === null || _c === void 0 ? void 0 : _c.setAttributions(newAttributions);\n        }\n    }\n    /**\n     * Request feature information for a given coordinate.\n     * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n     * @param {Object} options A [mapboxgl.Map#queryrenderedfeatures](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#queryrenderedfeatures) options parameter.\n     * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate. The original Mapbox feature is available as a property named 'mapboxFeature'.\n     */\n    getFeatureInfoAtCoordinate(coordinate, options) {\n        // Ignore the getFeatureInfo until the mapbox map is loaded\n        if (!options ||\n            !this.format ||\n            !this.mbMap ||\n            !this.mbMap.isStyleLoaded()) {\n            return Promise.resolve({ coordinate, features: [], layer: this });\n        }\n        const pixel = coordinate &&\n            this.mbMap.project(toLonLat(coordinate));\n        let pixels;\n        if (this.hitTolerance) {\n            const { x, y } = pixel;\n            pixels = [\n                {\n                    x: x - this.hitTolerance,\n                    y: y - this.hitTolerance,\n                },\n                {\n                    x: x + this.hitTolerance,\n                    y: y + this.hitTolerance,\n                },\n            ];\n        }\n        // At this point we get GeoJSON Mapbox feature, we transform it to an OpenLayers\n        // feature to be consistent with other layers.\n        const features = this.mbMap\n            // @ts-ignore\n            .queryRenderedFeatures(pixels || pixel, options)\n            .map((feature) => {\n            const olFeature = this.format.readFeature(feature);\n            if (olFeature) {\n                // We save the original mapbox feature to avoid losing informations\n                // potentially needed for other functionnality like highlighting\n                // (id, layer id, source, sourceLayer ...)\n                olFeature.set('mapboxFeature', feature);\n            }\n            return olFeature;\n        });\n        return Promise.resolve({\n            layer: this,\n            features,\n            coordinate,\n        });\n    }\n    /**\n     * Return the render function function for the ol layer.\n     *\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getOlLayerRender() {\n        // eslint-disable-next-line no-console\n        console.error('This function must be implemented in subclasses');\n        const div = document.createElement('div');\n        return () => div;\n    }\n    /**\n     * Return the Class to instanciate for the mapbox map.\n     *\n     * @return {mapboxgl.Map|maplibregl.Map} map\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getMapboxMapClass() {\n        // eslint-disable-next-line no-console\n        console.error('This function must be implemented in subclasses');\n        // @ts-ignore\n        return null;\n    }\n}\nexport default MapGlLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/MapGlLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 407,
    "kind": "class",
    "name": "MapGlLayer",
    "memberof": "build/ol/layers/MapGlLayer.js",
    "static": true,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/MapGlLayer.js",
    "importStyle": "MapGlLayer",
    "description": "Common class for Mapbox and Maplibre and potential other fork from Mapbox.\nIt's used to share code between Mapbox and Maplibre layers without importing both libs.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "build/ol/layers/Layer.js~Layer"
    ]
  },
  {
    "__docId__": 408,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 409,
    "kind": "member",
    "name": "olLayer",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#olLayer",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "styleUrl",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#styleUrl",
    "access": "private",
    "description": "Url of the mapbox style.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "apiKey",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#apiKey",
    "access": "private",
    "description": "Api key for the url of the mapbox style.\nIf set to false, the apiKey is not required.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "name": "apiKeyName",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#apiKeyName",
    "access": "private",
    "description": "Name of the apiKey to set in the url request.\nDefault is 'key'.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to feature clicks.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "format",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#format",
    "access": "public",
    "description": "The feature format.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "ol/format/GeoJSON"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 416,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#detachFromMap",
    "access": "public",
    "description": "Terminate what was initialized in init function. Remove layer, events...",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 417,
    "kind": "member",
    "name": "mbMap",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#mbMap",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "member",
    "name": "loaded",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#loaded",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "method",
    "name": "loadMbMap",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#loadMbMap",
    "access": "private",
    "description": "Create the mapbox map.",
    "lineNumber": 80,
    "params": [],
    "return": null
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "updateAttribution",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#updateAttribution",
    "access": "private",
    "description": "Update attributions of the source.",
    "lineNumber": 134,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "copyrights",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#copyrights",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate to request the information at."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "A [mapboxgl.Map#queryrenderedfeatures](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#queryrenderedfeatures) options parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate. The original Mapbox feature is available as a property named 'mapboxFeature'."
    }
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "getOlLayerRender",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#getOlLayerRender",
    "access": "public",
    "description": "Return the render function function for the ol layer.",
    "lineNumber": 199,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "getMapboxMapClass",
    "memberof": "build/ol/layers/MapGlLayer.js~MapGlLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapGlLayer.js~MapGlLayer#getMapboxMapClass",
    "access": "public",
    "description": "Return the Class to instanciate for the mapbox map.",
    "lineNumber": 211,
    "return": {
      "nullable": null,
      "types": [
        "mapboxgl.Map",
        "maplibregl.Map"
      ],
      "spread": false,
      "description": "map"
    },
    "params": []
  },
  {
    "__docId__": 427,
    "kind": "file",
    "name": "build/ol/layers/MapboxLayer.js",
    "content": "/* eslint-disable no-underscore-dangle */\nimport { Map } from 'mapbox-gl';\nimport { getMapboxMapCopyrights, getMapboxRender } from '../../common/utils';\nimport MapGlLayer from './MapGlLayer';\n/**\n * A class representing Mapboxlayer to display on BasicMap\n *\n * @example\n * import { MapboxLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json',\n *   apikey: 'yourApiKey',\n * });\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nexport default class MapboxLayer extends MapGlLayer {\n    /**\n     * Initialize the layer and listen to feature clicks.\n     * @param {ol/Map~Map} map\n     */\n    attachToMap(map) {\n        super.attachToMap(map);\n        if (!this.map) {\n            return;\n        }\n        this.olListenersKeys.push(this.map.on('change:size', () => {\n            try {\n                if (this.mbMap) {\n                    this.mbMap.resize();\n                }\n            }\n            catch (err) {\n                // ignore render errors\n                // eslint-disable-next-line no-console\n                console.warn(err);\n            }\n        }));\n    }\n    /**\n     * Create the mapbox map.\n     * @private\n     */\n    loadMbMap() {\n        var _a;\n        // If the map hasn't been resized, the center could be [NaN,NaN].\n        // We set default good value for the mapbox map, to avoid the app crashes.\n        let [x, y] = ((_a = this.map) === null || _a === void 0 ? void 0 : _a.getView().getCenter()) || [];\n        if (!x || !y) {\n            x = 0;\n            y = 0;\n        }\n        // Options the last render run did happen. If something changes\n        // we have to render again\n        /** @ignore */\n        this.renderState = {\n            center: [x, y],\n            zoom: undefined,\n            rotation: undefined,\n            visible: undefined,\n            opacity: undefined,\n            size: [0, 0],\n        };\n        super.loadMbMap();\n        if (!this.mbMap) {\n            // mbMap could ne bull if the map is not in the dom yet.\n            return;\n        }\n        this.mbMap.once('load', () => {\n            var _a, _b;\n            if (!this.mbMap) {\n                return;\n            }\n            this.mbMap.resize();\n            /** @ignore */\n            this.copyrights = getMapboxMapCopyrights(this.mbMap) || [];\n            // @ts-ignore\n            (_b = (_a = this.olLayer) === null || _a === void 0 ? void 0 : _a.getSource()) === null || _b === void 0 ? void 0 : _b.setAttributions(this.copyrights);\n        });\n        const mapboxCanvas = this.mbMap.getCanvas();\n        if (mapboxCanvas) {\n            if (this.options.tabIndex) {\n                mapboxCanvas.setAttribute('tabindex', `${this.options.tabIndex}`);\n            }\n            else {\n                // With a tabIndex='-1' the mouse events works but the map is not focused when we click on it\n                // so we remove completely the tabIndex attribute.\n                mapboxCanvas.removeAttribute('tabindex');\n            }\n        }\n    }\n    getOlLayerRender() {\n        return getMapboxRender(this);\n    }\n    // eslint-disable-next-line class-methods-use-this\n    getMapboxMapClass() {\n        return Map;\n    }\n    /**\n     * Create a copy of the MapboxLayer.\n     * @param {Object} newOptions Options to override\n     * @return {MapboxLayer} A MapboxLayer\n     */\n    clone(newOptions) {\n        return new MapboxLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/MapboxLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 428,
    "kind": "class",
    "name": "MapboxLayer",
    "memberof": "build/ol/layers/MapboxLayer.js",
    "static": true,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/MapboxLayer.js",
    "importStyle": "MapboxLayer",
    "description": "A class representing Mapboxlayer to display on BasicMap",
    "examples": [
      "import { MapboxLayer } from 'mobility-toolbox-js/ol';\n\nconst layer = new MapboxLayer({\n  url: 'https://maps.geops.io/styles/travic_v2/style.json',\n  apikey: 'yourApiKey',\n});"
    ],
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 429,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer and listen to feature clicks.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "loadMbMap",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#loadMbMap",
    "access": "private",
    "description": "Create the mapbox map.",
    "lineNumber": 46,
    "params": [],
    "return": null
  },
  {
    "__docId__": 431,
    "kind": "member",
    "name": "renderState",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#renderState",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "ignore": true,
    "type": {
      "types": [
        "{\"center\": *, \"zoom\": *, \"rotation\": *, \"visible\": *, \"opacity\": *, \"size\": *}"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "member",
    "name": "copyrights",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#copyrights",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "getOlLayerRender",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#getOlLayerRender",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "getMapboxMapClass",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#getMapboxMapClass",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#clone",
    "access": "public",
    "description": "Create a copy of the MapboxLayer.",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapboxLayer"
      ],
      "spread": false,
      "description": "A MapboxLayer"
    }
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "build/ol/layers/MapboxStyleLayer.js",
    "content": "import Layer from './Layer';\n/**\n * Layer for visualizing a specific set of layer from a MapboxLayer.\n *\n * @example\n * import { MapboxLayer, MapboxStyleLayer } from 'mobility-toolbox-js/ol';\n *\n * const mapboxLayer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json?key=[yourApiKey]',\n * });\n *\n * const layer = new MapboxStyleLayer({\n *   mapboxLayer: mapboxLayer,\n *   styleLayersFilter: () => {},\n * });\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass MapboxStyleLayer extends Layer {\n    /**\n     * Constructor.\n     *\n     * @param {Object} options\n     * @param {MapboxLayer} [options.mapboxLayer] The MapboxLayer to use.\n     * @param {Function} [options.styleLayersFilter] Filter function to decide which style layer to display.\n     */\n    constructor(options) {\n        super(options);\n        /**\n         * MapboxLayer provided for the style Layer.\n         * @type {MapboxLayer}\n         * @private\n         */\n        this.mapboxLayer = options.mapboxLayer;\n        /**\n         * Define if the layer has data to display in the current mapbox layer.\n         */\n        this.disabled = false;\n        /**\n         * Function to filter features to be displayed.\n         * @type {function}\n         * @private\n         */\n        this.styleLayersFilter = options.styleLayersFilter;\n        /**\n         * Mapbox style layer id where to add the style layers.\n         * See [mapbox.map.addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.\n         * @type {String}\n         * @private\n         */\n        this.beforeId = options.beforeId;\n        /**\n         * Function to filter features for getFeatureInfoAtCoordinate method.\n         * @type {function}\n         * @private\n         */\n        this.featureInfoFilter = options.featureInfoFilter || ((obj) => obj);\n        /**\n         * Function to query the rendered features.\n         * @type {function}\n         * @private\n         */\n        this.queryRenderedLayersFilter = options.queryRenderedLayersFilter;\n        /**\n         * Array of features to highlight.\n         * @type {Array<ol/Feature~Feature>}\n         * @private\n         */\n        this.highlightedFeatures = [];\n        /**\n         * Array of selected features.\n         * @type {Array<ol/Feature~Feature>}\n         * @private\n         */\n        this.selectedFeatures = [];\n        /**\n         * Array of mapbox style layers to add.\n         * @type {Array<mapboxgl.styleLayer>}\n         * @private\n         */\n        this.styleLayers =\n            (options.styleLayer ? [options.styleLayer] : options.styleLayers) || [];\n        /**\n         * @private\n         */\n        this.addStyleLayers = this.addStyleLayers.bind(this);\n        /**\n         * @private\n         */\n        this.onLoad = this.onLoad.bind(this);\n        if (options.filters) {\n            /** @private */\n            this.addDynamicFilters = () => {\n                this.setFilter(typeof options.filters === 'function'\n                    ? options.filters(this)\n                    : options.filters);\n            };\n        }\n        if (!this.styleLayersFilter && this.styleLayers) {\n            this.styleLayersFilter = (styleLayer) => {\n                var _a;\n                return !!((_a = this.styleLayers) === null || _a === void 0 ? void 0 : _a.find((sl) => styleLayer.id === sl.id));\n            };\n        }\n    }\n    /**\n     * Initialize the layer.\n     * @param {ol/Map~Map} map the mapbox map.\n     * @override\n     */\n    attachToMap(map) {\n        var _a;\n        if (this.mapboxLayer && !this.mapboxLayer.map) {\n            (_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.attachToMap(map);\n        }\n        super.attachToMap(map);\n        if (!this.map || !this.mapboxLayer) {\n            return;\n        }\n        // Apply the initial visibiltity.\n        const { mbMap } = this.mapboxLayer;\n        if (!mbMap) {\n            // If the mbMap is not yet created because the  map has no target yet, we\n            // relaunch the initialisation when it's the case.\n            this.olListenersKeys.push(this.map.on('change:target', () => {\n                this.attachToMap(map);\n            }));\n            return;\n        }\n        // mbMap.loaded() and mbMap.isStyleLoaded() are reliable only on the first call of init.\n        // On the next call (when a topic change for example), these functions returns false because\n        // the style is being modified.\n        // That's why we rely on a property instead for the next calls.\n        if (this.mapboxLayer.loaded || mbMap.isStyleLoaded() || mbMap.loaded()) {\n            this.onLoad();\n        }\n        else {\n            mbMap.once('load', this.onLoad);\n        }\n        // Apply the visibiltity when layer's visibility change.\n        this.olListenersKeys.push(\n        // @ts-ignore\n        this.on('change:visible', (evt) => {\n            // Once the map is loaded we can apply vsiiblity without waiting\n            // the style. Mapbox take care of the application of style changes.\n            this.applyLayoutVisibility(evt);\n        }));\n        this.olListenersKeys.push(\n        // @ts-ignore\n        this.mapboxLayer.on('load', () => {\n            this.onLoad();\n        }));\n    }\n    /**\n     * Terminate the layer.\n     * @override\n     */\n    detachFromMap() {\n        var _a;\n        if ((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap) {\n            const { mbMap } = this.mapboxLayer;\n            mbMap.off('load', this.onLoad);\n            this.removeStyleLayers();\n        }\n        super.detachFromMap();\n    }\n    /** @ignore */\n    addStyleLayers() {\n        var _a;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        this.styleLayers.forEach((styleLayer) => {\n            const { id, source } = styleLayer;\n            if (mbMap.getSource(source) && id && !mbMap.getLayer(id)) {\n                // @ts-ignore\n                mbMap.addLayer(styleLayer, this.beforeId);\n            }\n        });\n        this.applyLayoutVisibility();\n    }\n    /** @ignore */\n    removeStyleLayers() {\n        var _a;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        this.styleLayers.forEach((styleLayer) => {\n            const { id } = styleLayer;\n            if (id && mbMap.getLayer(id)) {\n                mbMap.removeLayer(id);\n            }\n        });\n    }\n    /**\n     * On Mapbox map load callback function. Add style layers and dynaimc filters.\n     * @ignore\n     */\n    onLoad() {\n        var _a;\n        this.addStyleLayers();\n        if (this.addDynamicFilters) {\n            this.addDynamicFilters();\n        }\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        const style = mbMap.getStyle();\n        if (style && this.styleLayersFilter) {\n            // @ts-ignore\n            const styles = style.layers.filter(this.styleLayersFilter);\n            this.disabled = !styles.length;\n        }\n    }\n    /**\n     * Request feature information for a given coordinate.\n     * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n     * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n     */\n    getFeatureInfoAtCoordinate(coordinate) {\n        var _a;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return Promise.resolve({ coordinate, features: [], layer: this });\n        }\n        const { mbMap } = this.mapboxLayer;\n        // Ignore the getFeatureInfo until the mapbox map is loaded\n        if (!mbMap.isStyleLoaded()) {\n            return Promise.resolve({ coordinate, features: [], layer: this });\n        }\n        // We query features only on style layers used by this layer.\n        let layers = this.styleLayers || [];\n        if (this.styleLayersFilter) {\n            // @ts-ignore\n            layers = mbMap.getStyle().layers.filter(this.styleLayersFilter);\n        }\n        if (this.queryRenderedLayersFilter) {\n            // @ts-ignore\n            layers = mbMap.getStyle().layers.filter(this.queryRenderedLayersFilter);\n        }\n        return this.mapboxLayer\n            .getFeatureInfoAtCoordinate(coordinate, {\n            layers: layers.map((layer) => layer && layer.id),\n            validate: false,\n        })\n            .then((featureInfo) => {\n            const features = featureInfo.features.filter((feature) => {\n                var _a;\n                // @ts-ignore\n                return this.featureInfoFilter(feature, (_a = this.map) === null || _a === void 0 ? void 0 : _a.getView().getResolution());\n            });\n            this.highlight(features);\n            return Object.assign(Object.assign({}, featureInfo), { features, layer: this });\n        });\n    }\n    /**\n     * Set filter that determines which features should be rendered in a style layer.\n     * @param {mapboxgl.filter} filter Determines which features should be rendered in a style layer.\n     */\n    setFilter(filter) {\n        var _a;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        this.styleLayers.forEach(({ id }) => {\n            if (id && filter && mbMap.getLayer(id)) {\n                // @ts-ignore\n                mbMap.setFilter(id, filter);\n            }\n        });\n    }\n    /**\n     * Set if features are hovered or not.\n     * @param {Array<ol/Feature~Feature>} features\n     * @param {boolean} state Is the feature hovered\n     * @private\n     */\n    setHoverState(features, state) {\n        var _a;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        if (!features || !mbMap) {\n            return;\n        }\n        features.forEach((feature) => {\n            const { source, sourceLayer } = feature.get('mapboxFeature') || {};\n            if ((!source && !sourceLayer) || !feature.getId()) {\n                if (!feature.getId()) {\n                    // eslint-disable-next-line no-console\n                    console.warn(\"No feature's id found. To use the feature state functionnality, tiles must be generated with --generate-ids. See https://github.com/mapbox/tippecanoe#adding-calculated-attributes.\", feature.getId(), feature.getProperties());\n                }\n                return;\n            }\n            mbMap.setFeatureState({\n                id: feature.getId(),\n                source,\n                sourceLayer,\n            }, { hover: state });\n        });\n    }\n    /**\n     * Select a list of features.\n     * @param {Array<ol/Feature~Feature>} [features=[]] Features to select.\n     * @private\n     */\n    select(features = []) {\n        this.setHoverState(this.selectedFeatures || [], false);\n        this.selectedFeatures = features;\n        this.setHoverState(this.selectedFeatures || [], true);\n    }\n    /**\n     * Highlight a list of features.\n     * @param {Array<ol/Feature~Feature>} [features=[]] Features to highlight.\n     * @private\n     */\n    highlight(features = []) {\n        var _a;\n        // Filter out selected features\n        const filtered = ((_a = this.highlightedFeatures) === null || _a === void 0 ? void 0 : _a.filter((feature) => !(this.selectedFeatures || [])\n            .map((feat) => feat.getId())\n            .includes(feature.getId()))) || [];\n        // Remove previous highlight\n        this.setHoverState(filtered, false);\n        this.highlightedFeatures = features;\n        // Add highlight\n        this.setHoverState(this.highlightedFeatures, true);\n    }\n    /**\n     * Apply visibility to style layers that fits the styleLayersFilter function.\n     * @param {Event} evt Layer's event that has called the function.\n     * @private\n     */\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    applyLayoutVisibility(evt) {\n        var _a;\n        const { visible } = this;\n        const filterFunc = this.styleLayersFilter;\n        if (!((_a = this.mapboxLayer) === null || _a === void 0 ? void 0 : _a.mbMap)) {\n            return;\n        }\n        const { mbMap } = this.mapboxLayer;\n        const style = mbMap.getStyle();\n        if (!style) {\n            return;\n        }\n        if (filterFunc) {\n            const visibilityValue = visible ? 'visible' : 'none';\n            const layers = style.layers || [];\n            for (let i = 0; i < layers.length; i += 1) {\n                const styleLayer = layers[i];\n                if (filterFunc(styleLayer)) {\n                    if (mbMap.getLayer(styleLayer.id)) {\n                        mbMap.setLayoutProperty(styleLayer.id, 'visibility', visibilityValue);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Create a copy of the MapboxStyleLayer.\n     * @param {Object} newOptions Options to override.\n     * @return {MapboxStyleLayer} A MapboxStyleLayer.\n     */\n    clone(newOptions) {\n        return new MapboxStyleLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default MapboxStyleLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/MapboxStyleLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "class",
    "name": "MapboxStyleLayer",
    "memberof": "build/ol/layers/MapboxStyleLayer.js",
    "static": true,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/MapboxStyleLayer.js",
    "importStyle": "MapboxStyleLayer",
    "description": "Layer for visualizing a specific set of layer from a MapboxLayer.",
    "examples": [
      "import { MapboxLayer, MapboxStyleLayer } from 'mobility-toolbox-js/ol';\n\nconst mapboxLayer = new MapboxLayer({\n  url: 'https://maps.geops.io/styles/travic_v2/style.json?key=[yourApiKey]',\n});\n\nconst layer = new MapboxStyleLayer({\n  mapboxLayer: mapboxLayer,\n  styleLayersFilter: () => {},\n});"
    ],
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 438,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MapboxLayer"
        ],
        "spread": false,
        "optional": true,
        "name": "options.mapboxLayer",
        "description": "The MapboxLayer to use."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.styleLayersFilter",
        "description": "Filter function to decide which style layer to display."
      }
    ]
  },
  {
    "__docId__": 439,
    "kind": "member",
    "name": "mapboxLayer",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#mapboxLayer",
    "access": "private",
    "description": "MapboxLayer provided for the style Layer.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "MapboxLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 440,
    "kind": "member",
    "name": "disabled",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#disabled",
    "access": "public",
    "description": "Define if the layer has data to display in the current mapbox layer.",
    "lineNumber": 39,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "member",
    "name": "styleLayersFilter",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#styleLayersFilter",
    "access": "private",
    "description": "Function to filter features to be displayed.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "beforeId",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#beforeId",
    "access": "private",
    "description": "Mapbox style layer id where to add the style layers.\nSee [mapbox.map.addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "featureInfoFilter",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#featureInfoFilter",
    "access": "private",
    "description": "Function to filter features for getFeatureInfoAtCoordinate method.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 444,
    "kind": "member",
    "name": "queryRenderedLayersFilter",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#queryRenderedLayersFilter",
    "access": "private",
    "description": "Function to query the rendered features.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 445,
    "kind": "member",
    "name": "highlightedFeatures",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#highlightedFeatures",
    "access": "private",
    "description": "Array of features to highlight.",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Array<ol/Feature~Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 446,
    "kind": "member",
    "name": "selectedFeatures",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#selectedFeatures",
    "access": "private",
    "description": "Array of selected features.",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "Array<ol/Feature~Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 447,
    "kind": "member",
    "name": "styleLayers",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#styleLayers",
    "access": "private",
    "description": "Array of mapbox style layers to add.",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Array<mapboxgl.styleLayer>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "addDynamicFilters",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#addDynamicFilters",
    "access": "private",
    "description": null,
    "lineNumber": 94,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#attachToMap",
    "access": "public",
    "description": "Initialize the layer.",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/Map~Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "the mapbox map."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 453,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#detachFromMap",
    "access": "public",
    "description": "Terminate the layer.",
    "lineNumber": 159,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 454,
    "kind": "method",
    "name": "addStyleLayers",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#addStyleLayers",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 455,
    "kind": "method",
    "name": "removeStyleLayers",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#removeStyleLayers",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 456,
    "kind": "method",
    "name": "onLoad",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#onLoad",
    "access": "public",
    "description": "On Mapbox map load callback function. Add style layers and dynaimc filters.",
    "lineNumber": 202,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 458,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "Coordinate to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "setFilter",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#setFilter",
    "access": "public",
    "description": "Set filter that determines which features should be rendered in a style layer.",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "mapboxgl.filter"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "Determines which features should be rendered in a style layer."
      }
    ],
    "return": null
  },
  {
    "__docId__": 460,
    "kind": "method",
    "name": "setHoverState",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#setHoverState",
    "access": "private",
    "description": "Set if features are hovered or not.",
    "lineNumber": 282,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Is the feature hovered"
      }
    ],
    "return": null
  },
  {
    "__docId__": 461,
    "kind": "method",
    "name": "select",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#select",
    "access": "private",
    "description": "Select a list of features.",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "features",
        "description": "Features to select."
      }
    ],
    "return": null
  },
  {
    "__docId__": 463,
    "kind": "method",
    "name": "highlight",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#highlight",
    "access": "private",
    "description": "Highlight a list of features.",
    "lineNumber": 322,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ol/Feature~Feature>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "features",
        "description": "Features to highlight."
      }
    ],
    "return": null
  },
  {
    "__docId__": 465,
    "kind": "method",
    "name": "applyLayoutVisibility",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#applyLayoutVisibility",
    "access": "private",
    "description": "Apply visibility to style layers that fits the styleLayersFilter function.",
    "lineNumber": 340,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Layer's event that has called the function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#clone",
    "access": "public",
    "description": "Create a copy of the MapboxStyleLayer.",
    "lineNumber": 370,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapboxStyleLayer"
      ],
      "spread": false,
      "description": "A MapboxStyleLayer."
    }
  },
  {
    "__docId__": 467,
    "kind": "file",
    "name": "build/ol/layers/MaplibreLayer.js",
    "content": "import { Map } from 'maplibre-gl';\nimport { getMaplibreRender } from '../../common/utils';\nimport MapGlLayer from './MapGlLayer';\n/**\n * A class representing MaplibreLayer to display on BasicMap\n *\n * @example\n * import { MaplibreLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new MaplibreLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json',\n *   apikey: 'yourApiKey',\n * });\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nexport default class MaplibreLayer extends MapGlLayer {\n    getOlLayerRender() {\n        return getMaplibreRender(this);\n    }\n    // eslint-disable-next-line class-methods-use-this\n    getMapboxMapClass() {\n        return Map;\n    }\n    /**\n     * Create a copy of the MapboxLayer.\n     * @param {Object} newOptions Options to override\n     * @return {MapboxLayer} A MapboxLayer\n     */\n    clone(newOptions) {\n        return new MaplibreLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/MaplibreLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 468,
    "kind": "class",
    "name": "MaplibreLayer",
    "memberof": "build/ol/layers/MaplibreLayer.js",
    "static": true,
    "longname": "build/ol/layers/MaplibreLayer.js~MaplibreLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/MaplibreLayer.js",
    "importStyle": "MaplibreLayer",
    "description": "A class representing MaplibreLayer to display on BasicMap",
    "examples": [
      "import { MaplibreLayer } from 'mobility-toolbox-js/ol';\n\nconst layer = new MaplibreLayer({\n  url: 'https://maps.geops.io/styles/travic_v2/style.json',\n  apikey: 'yourApiKey',\n});"
    ],
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 469,
    "kind": "method",
    "name": "getOlLayerRender",
    "memberof": "build/ol/layers/MaplibreLayer.js~MaplibreLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MaplibreLayer.js~MaplibreLayer#getOlLayerRender",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "getMapboxMapClass",
    "memberof": "build/ol/layers/MaplibreLayer.js~MaplibreLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MaplibreLayer.js~MaplibreLayer#getMapboxMapClass",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/MaplibreLayer.js~MaplibreLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/MaplibreLayer.js~MaplibreLayer#clone",
    "access": "public",
    "description": "Create a copy of the MapboxLayer.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapboxLayer"
      ],
      "spread": false,
      "description": "A MapboxLayer"
    }
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "build/ol/layers/RealtimeLayer.js",
    "content": "import GeoJSON from 'ol/format/GeoJSON';\nimport { Layer as OLLayer, Group, Vector as VectorLayer } from 'ol/layer';\nimport Source from 'ol/source/Source';\nimport { composeCssTransform } from 'ol/transform';\nimport { Vector as VectorSource } from 'ol/source';\nimport Layer from './Layer';\nimport mixin from '../../common/mixins/RealtimeLayerMixin';\nimport { fullTrajectoryStyle } from '../styles';\n/** @private */\nconst format = new GeoJSON();\n/**\n * Responsible for loading and display data from a Realtime service.\n *\n * @example\n * import { RealtimeLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new RealtimeLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/RealtimeAPI%20js~RealtimeAPI%20html\">RealtimeAPI</a>\n *\n * @extends {Layer}\n * @implements {UserInteractionsLayerInterface}\n * @implements {RealtimeLayerInterface}\n */\n// @ts-ignore\nclass RealtimeLayer extends mixin(Layer) {\n    /**\n     * Constructor.\n     *\n     * @param {Object} options\n     * @private\n     */\n    constructor(options) {\n        // We use a group to be able to add custom vector layer in extended class.\n        // For example TrajservLayer use a vectorLayer to display the complete trajectory.\n        super(Object.assign({}, options));\n        this.allowRenderWhenAnimating = false;\n        this.allowRenderWhenAnimating = !!options.allowRenderWhenAnimating;\n        /** @ignore */\n        this.olLayer =\n            options.olLayer ||\n                new Group({\n                    layers: [\n                        new VectorLayer({\n                            source: new VectorSource({ features: [] }),\n                            style: (feature, resolution) => {\n                                return (options.fullTrajectoryStyle || fullTrajectoryStyle)(feature, resolution, this.styleOptions);\n                            },\n                        }),\n                        new OLLayer({\n                            source: new Source({}),\n                            render: (frameState) => {\n                                var _a, _b, _c;\n                                if (!this.container) {\n                                    this.container = document.createElement('div');\n                                    this.container.style.position = 'absolute';\n                                    this.container.style.width = '100%';\n                                    this.container.style.height = '100%';\n                                    this.transformContainer = document.createElement('div');\n                                    this.transformContainer.style.position = 'absolute';\n                                    this.transformContainer.style.width = '100%';\n                                    this.transformContainer.style.height = '100%';\n                                    this.container.appendChild(this.transformContainer);\n                                    if (this.canvas) {\n                                        this.canvas.style.position =\n                                            'absolute';\n                                        this.canvas.style.top = '0';\n                                        this.canvas.style.left = '0';\n                                        this.canvas.style.transformOrigin =\n                                            'top left';\n                                        this.transformContainer.appendChild(this.canvas);\n                                    }\n                                }\n                                if (this.renderedViewState) {\n                                    const { center, resolution, rotation } = frameState.viewState;\n                                    const { center: renderedCenter, resolution: renderedResolution, rotation: renderedRotation, } = this.renderedViewState;\n                                    if (renderedResolution / resolution >= 3) {\n                                        // Avoid having really big points when zooming fast.\n                                        const context = (_a = this.canvas) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n                                        context === null || context === void 0 ? void 0 : context.clearRect(0, 0, (_b = this.canvas) === null || _b === void 0 ? void 0 : _b.width, (_c = this.canvas) === null || _c === void 0 ? void 0 : _c.height);\n                                    }\n                                    else {\n                                        const pixelCenterRendered = this.map.getPixelFromCoordinate(renderedCenter);\n                                        const pixelCenter = this.map.getPixelFromCoordinate(center);\n                                        this.transformContainer.style.transform = composeCssTransform(pixelCenterRendered[0] - pixelCenter[0], pixelCenterRendered[1] - pixelCenter[1], renderedResolution / resolution, renderedResolution / resolution, rotation - renderedRotation, 0, 0);\n                                    }\n                                }\n                                return this.container;\n                            },\n                        }),\n                    ],\n                });\n        // We store the layer used to highlight the full Trajectory\n        this.vectorLayer = this.olLayer.getLayers().item(0);\n        // Options the last render run did happen. If something changes\n        // we have to render again\n        /** @ignore */\n        this.renderState = {\n            center: [0, 0],\n            zoom: undefined,\n            rotation: 0,\n        };\n    }\n    attachToMap(map) {\n        super.attachToMap(map);\n        if (this.map) {\n            this.olListenersKeys.push(...this.map.on(['moveend', 'change:target'], (evt) => {\n                const view = (evt.map || evt.target).getView();\n                if (view.getAnimating() || view.getInteracting()) {\n                    return;\n                }\n                const zoom = view.getZoom();\n                // Update the interval between render updates\n                if (this.currentZoom !== zoom) {\n                    this.onZoomEnd();\n                }\n                this.currentZoom = zoom;\n                this.onMoveEnd(evt);\n            }));\n        }\n    }\n    /**\n     * Destroy the container of the tracker.\n     */\n    detachFromMap() {\n        super.detachFromMap();\n        this.container = null;\n    }\n    /**\n     * Detect in the canvas if there is data to query at a specific coordinate.\n     * @param {ol/coordinate~Coordinate}  coordinate The coordinate to test\n     * @returns\n     */\n    hasFeatureInfoAtCoordinate(coordinate) {\n        if (this.map && this.canvas) {\n            const context = this.canvas.getContext('2d', {\n                willReadFrequently: true,\n            });\n            const pixel = this.map.getPixelFromCoordinate(coordinate);\n            return !!(context === null || context === void 0 ? void 0 : context.getImageData(pixel[0] * (this.pixelRatio || 1), pixel[1] * (this.pixelRatio || 1), 1, 1).data[3]);\n        }\n        return false;\n    }\n    /**\n     * Render the trajectories using current map's size, resolution and rotation.\n     * @param {boolean} noInterpolate if true, renders the vehicles without interpolating theirs positions.\n     * @overrides\n     */\n    // @ts-ignore\n    renderTrajectories(noInterpolate) {\n        if (!this.map) {\n            return;\n        }\n        const view = this.map.getView();\n        // it could happen that the view is set but without center yet,\n        // so the calcualteExtent will trigger an error.\n        if (!view.getCenter()) {\n            return;\n        }\n        super.renderTrajectories({\n            size: this.map.getSize(),\n            center: view.getCenter(),\n            extent: view.calculateExtent(),\n            resolution: view.getResolution(),\n            rotation: view.getRotation(),\n            zoom: view.getZoom(),\n            pixelRatio: this.pixelRatio,\n        }, noInterpolate);\n    }\n    /**\n     * Launch renderTrajectories. it avoids duplicating code in renderTrajectories methhod.\n     * @private\n     * @override\n     */\n    renderTrajectoriesInternal(viewState, noInterpolate) {\n        if (!this.map) {\n            return false;\n        }\n        let isRendered = false;\n        const blockRendering = this.allowRenderWhenAnimating\n            ? false\n            : this.map.getView().getAnimating() ||\n                this.map.getView().getInteracting();\n        // Don't render the map when the map is animating or interacting.\n        isRendered = blockRendering\n            ? false\n            : super.renderTrajectoriesInternal(viewState, noInterpolate);\n        // We update the current render state.\n        if (isRendered) {\n            this.renderedViewState = Object.assign({}, viewState);\n            if (this.transformContainer) {\n                this.transformContainer.style.transform = '';\n            }\n        }\n        return isRendered;\n    }\n    /**\n     * Return the delay in ms before the next rendering.\n     */\n    getRefreshTimeInMs() {\n        return super.getRefreshTimeInMs(this.map.getView().getZoom());\n    }\n    getFeatureInfoAtCoordinate(coordinate, options = {}) {\n        if (!this.map || !this.map.getView()) {\n            return Promise.resolve({\n                layer: this,\n                features: [],\n                coordinate,\n            });\n        }\n        const resolution = this.map.getView().getResolution();\n        return super.getFeatureInfoAtCoordinate(coordinate, Object.assign({ resolution }, options));\n    }\n    /**\n     * On move end we update the websocket with the new bbox.\n     *\n     * @private\n     * @override\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMoveEnd(evt) {\n        if (this.visible && this.isUpdateBboxOnMoveEnd) {\n            this.setBbox();\n        }\n        if (this.visible &&\n            this.isUpdateBboxOnMoveEnd &&\n            this.userClickInteractions &&\n            this.selectedVehicleId) {\n            this.highlightTrajectory(this.selectedVehicleId);\n        }\n    }\n    /**\n     * Function called on moveend event only when the zoom has changed.\n     *\n     * @param {ol/MapEvent~MapEvent} evt Moveend event.\n     * @private\n     * @override\n     */\n    // eslint-disable-next-line no-unused-vars\n    onZoomEnd() {\n        super.onZoomEnd();\n        if (this.visible && this.isUpdateBboxOnMoveEnd) {\n            this.setBbox();\n        }\n        if (this.visible &&\n            this.isUpdateBboxOnMoveEnd &&\n            this.userClickInteractions &&\n            this.selectedVehicleId) {\n            this.highlightTrajectory(this.selectedVehicleId);\n        }\n    }\n    /**\n     * Update the cursor style when hovering a vehicle.\n     *\n     * @private\n     * @override\n     */\n    onFeatureHover(features, layer, coordinate) {\n        super.onFeatureHover(features, layer, coordinate);\n        this.map.getTargetElement().style.cursor = features.length\n            ? 'pointer'\n            : 'auto';\n    }\n    /**\n     * Display the complete trajectory of the vehicle.\n     *\n     * @private\n     * @override\n     */\n    onFeatureClick(features, layer, coordinate) {\n        super.onFeatureClick(features, layer, coordinate);\n        if (!features.length && this.vectorLayer) {\n            this.vectorLayer.getSource().clear();\n        }\n        if (this.selectedVehicleId) {\n            this.highlightTrajectory(this.selectedVehicleId);\n        }\n    }\n    /**\n     * Remove the trajectory form the list if necessary.\n     *\n     * @private\n     */\n    purgeTrajectory(trajectory, extent, zoom) {\n        const center = this.map.getView().getCenter();\n        if (!extent && !center) {\n            // In that case the view is not zoomed yet so we can't calculate the extent of the map,\n            // it will trigger a js error on calculateExtent function.\n            return false;\n        }\n        return super.purgeTrajectory(trajectory, extent || this.map.getView().calculateExtent(), zoom || this.map.getView().getZoom());\n    }\n    /**\n     * Send the current bbox to the websocket\n     *\n     * @private\n     */\n    setBbox(extent, zoom) {\n        let newExtent = extent;\n        let newZoom = zoom;\n        if (!newExtent && this.isUpdateBboxOnMoveEnd) {\n            newExtent = extent || this.map.getView().calculateExtent();\n            newZoom = Math.floor(this.map.getView().getZoom());\n        }\n        super.setBbox(newExtent, newZoom);\n    }\n    /**\n     * Highlight the trajectory of journey.\n     * @private\n     */\n    highlightTrajectory(id) {\n        return this.api\n            .getFullTrajectory(id, this.mode, this.generalizationLevel)\n            .then((data) => {\n            const fullTrajectory = data.content;\n            this.vectorLayer.getSource().clear();\n            if (!fullTrajectory ||\n                !fullTrajectory.features ||\n                !fullTrajectory.features.length) {\n                return undefined;\n            }\n            const features = format.readFeatures(fullTrajectory);\n            this.vectorLayer.getSource().addFeatures(features);\n            return features;\n        });\n    }\n    /**\n     * Create a copy of the RealtimeLayer.\n     * @param {Object} newOptions Options to override\n     * @return {RealtimeLayer} A RealtimeLayer\n     */\n    clone(newOptions) {\n        return new RealtimeLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default RealtimeLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/RealtimeLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "variable",
    "name": "format",
    "memberof": "build/ol/layers/RealtimeLayer.js",
    "static": true,
    "longname": "build/ol/layers/RealtimeLayer.js~format",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RealtimeLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 474,
    "kind": "class",
    "name": "RealtimeLayer",
    "memberof": "build/ol/layers/RealtimeLayer.js",
    "static": true,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/RealtimeLayer.js",
    "importStyle": "RealtimeLayer",
    "description": "Responsible for loading and display data from a Realtime service.",
    "examples": [
      "import { RealtimeLayer } from 'mobility-toolbox-js/ol';\n\nconst layer = new RealtimeLayer({\n  url: [yourUrl],\n  apiKey: [yourApiKey],\n});"
    ],
    "see": [
      "<a href=\"/api/class/src/api/RealtimeAPI%20js~RealtimeAPI%20html\">RealtimeAPI</a>"
    ],
    "lineNumber": 30,
    "interface": false,
    "extends": [
      "Layer"
    ],
    "implements": [
      "UserInteractionsLayerInterface",
      "RealtimeLayerInterface"
    ]
  },
  {
    "__docId__": 475,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#constructor",
    "access": "private",
    "description": "Constructor.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "allowRenderWhenAnimating",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#allowRenderWhenAnimating",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "member",
    "name": "olLayer",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#olLayer",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "member",
    "name": "container",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#container",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "transformContainer",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#transformContainer",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "vectorLayer",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#vectorLayer",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "renderState",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#renderState",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "ignore": true,
    "type": {
      "types": [
        "{\"center\": *, \"zoom\": *, \"rotation\": *}"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "attachToMap",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#attachToMap",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 484,
    "kind": "member",
    "name": "currentZoom",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#currentZoom",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "detachFromMap",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#detachFromMap",
    "access": "public",
    "description": "Destroy the container of the tracker.",
    "lineNumber": 129,
    "params": [],
    "return": null
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "hasFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#hasFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Detect in the canvas if there is data to query at a specific coordinate.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "The coordinate to test"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "renderTrajectories",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#renderTrajectories",
    "access": "public",
    "description": "Render the trajectories using current map's size, resolution and rotation.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@overrides",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "noInterpolate",
        "description": "if true, renders the vehicles without interpolating theirs positions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "renderTrajectoriesInternal",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#renderTrajectoriesInternal",
    "access": "private",
    "description": "Launch renderTrajectories. it avoids duplicating code in renderTrajectories methhod.",
    "lineNumber": 179,
    "override": true,
    "params": [
      {
        "name": "viewState",
        "types": [
          "*"
        ]
      },
      {
        "name": "noInterpolate",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "member",
    "name": "renderedViewState",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#renderedViewState",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "getRefreshTimeInMs",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#getRefreshTimeInMs",
    "access": "public",
    "description": "Return the delay in ms before the next rendering.",
    "lineNumber": 204,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "onMoveEnd",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#onMoveEnd",
    "access": "private",
    "description": "On move end we update the websocket with the new bbox.",
    "lineNumber": 225,
    "override": true,
    "params": [
      {
        "name": "evt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "onZoomEnd",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#onZoomEnd",
    "access": "private",
    "description": "Function called on moveend event only when the zoom has changed.",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/MapEvent~MapEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "Moveend event."
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "onFeatureHover",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#onFeatureHover",
    "access": "private",
    "description": "Update the cursor style when hovering a vehicle.",
    "lineNumber": 262,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "onFeatureClick",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#onFeatureClick",
    "access": "private",
    "description": "Display the complete trajectory of the vehicle.",
    "lineNumber": 274,
    "override": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "purgeTrajectory",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#purgeTrajectory",
    "access": "private",
    "description": "Remove the trajectory form the list if necessary.",
    "lineNumber": 288,
    "params": [
      {
        "name": "trajectory",
        "types": [
          "*"
        ]
      },
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "setBbox",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#setBbox",
    "access": "private",
    "description": "Send the current bbox to the websocket",
    "lineNumber": 302,
    "params": [
      {
        "name": "extent",
        "types": [
          "*"
        ]
      },
      {
        "name": "zoom",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "highlightTrajectory",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#highlightTrajectory",
    "access": "private",
    "description": "Highlight the trajectory of journey.",
    "lineNumber": 315,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/RealtimeLayer.js~RealtimeLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RealtimeLayer.js~RealtimeLayer#clone",
    "access": "public",
    "description": "Create a copy of the RealtimeLayer.",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RealtimeLayer"
      ],
      "spread": false,
      "description": "A RealtimeLayer"
    }
  },
  {
    "__docId__": 501,
    "kind": "file",
    "name": "build/ol/layers/RoutingLayer.js",
    "content": "import { Circle, Fill, Stroke, Style } from 'ol/style';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Vector } from 'ol/layer';\nimport Layer from './Layer';\n/** @private */\nconst circleStyle = new Circle({\n    radius: 6,\n    fill: new Fill({\n        color: [255, 0, 0, 1],\n    }),\n    stroke: new Stroke({\n        color: [0, 0, 0, 1],\n        width: 1,\n    }),\n});\n/** @private */\nconst blackBorder = new Style({\n    stroke: new Stroke({\n        color: [0, 0, 0, 1],\n        width: 5,\n    }),\n});\n/** @private */\nconst redLine = new Style({\n    image: circleStyle,\n    stroke: new Stroke({\n        color: [255, 0, 0, 1],\n        width: 3,\n    }),\n});\n/** @private */\nconst dashedRedLine = new Style({\n    image: circleStyle,\n    stroke: new Stroke({\n        color: [255, 0, 0, 1],\n        width: 3,\n        lineDash: [1, 10],\n    }),\n});\n/** @private */\nconst defaultStyleFunction = (feature, resolution) => {\n    const minResolution = feature.get('minResolution');\n    const maxResolution = feature.get('maxResolution');\n    const inRange = resolution <= minResolution && resolution > maxResolution;\n    if (minResolution && maxResolution && !inRange) {\n        return [];\n    }\n    const mot = feature.get('mot');\n    if (mot !== 'foot') {\n        return [blackBorder, redLine];\n    }\n    return [dashedRedLine];\n};\n/**\n * A class use to display vector data.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass RoutingLayer extends Layer {\n    /**\n     * Constructor.\n     * @param {Object} [options]\n     * @param {ol/style/Style~StyleLike} [options.style] Style to be used for routes, uses (ol/StyleLike) [https://openlayers.org/en/latest/apidoc/module-ol_style_Style.html#~StyleLike] instances\n     */\n    constructor(options) {\n        super(options);\n        this.options = {};\n        this.olLayer =\n            options.olLayer ||\n                new Vector({\n                    source: new VectorSource(),\n                    style: options.style || defaultStyleFunction,\n                });\n    }\n    /**\n     * Create a copy of the RoutingLayer.\n     * @param {Object} newOptions Options to override\n     * @return {RoutingLayer} A RoutingLayer\n     */\n    clone(newOptions) {\n        return new RoutingLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default RoutingLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 502,
    "kind": "variable",
    "name": "circleStyle",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~circleStyle",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 503,
    "kind": "variable",
    "name": "blackBorder",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~blackBorder",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 504,
    "kind": "variable",
    "name": "redLine",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~redLine",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 505,
    "kind": "variable",
    "name": "dashedRedLine",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~dashedRedLine",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 506,
    "kind": "function",
    "name": "defaultStyleFunction",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~defaultStyleFunction",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolution",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 507,
    "kind": "class",
    "name": "RoutingLayer",
    "memberof": "build/ol/layers/RoutingLayer.js",
    "static": true,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/RoutingLayer.js",
    "importStyle": "RoutingLayer",
    "description": "A class use to display vector data.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 508,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer#constructor",
    "access": "public",
    "description": "Constructor.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol/style/Style~StyleLike"
        ],
        "spread": false,
        "optional": true,
        "name": "options.style",
        "description": "Style to be used for routes, uses (ol/StyleLike) [https://openlayers.org/en/latest/apidoc/module-ol_style_Style.html#~StyleLike] instances"
      }
    ]
  },
  {
    "__docId__": 509,
    "kind": "member",
    "name": "options",
    "memberof": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "static": false,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer#options",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 510,
    "kind": "member",
    "name": "olLayer",
    "memberof": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "static": false,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer#olLayer",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 511,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer#clone",
    "access": "public",
    "description": "Create a copy of the RoutingLayer.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RoutingLayer"
      ],
      "spread": false,
      "description": "A RoutingLayer"
    }
  },
  {
    "__docId__": 512,
    "kind": "file",
    "name": "build/ol/layers/VectorLayer.js",
    "content": "import Layer from './Layer';\n/**\n * A class use to display vector data.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass VectorLayer extends Layer {\n    /**\n     * Request feature information for a given coordinate.\n     * @param {ol/coordinate~Coordinate} coordinate the coordinate to request the information at.\n     * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n     */\n    getFeatureInfoAtCoordinate(coordinate) {\n        let features = [];\n        if (this.map) {\n            const pixel = this.map.getPixelFromCoordinate(coordinate);\n            features = this.map.getFeaturesAtPixel(pixel, {\n                layerFilter: (l) => l === this.olLayer,\n                hitTolerance: this.hitTolerance,\n            });\n        }\n        return Promise.resolve({\n            features,\n            layer: this,\n            coordinate,\n        });\n    }\n    /**\n     * Create a copy of the VectorLayer.\n     * @param {Object} newOptions Options to override\n     * @return {VectorLayer} A VectorLayer\n     */\n    clone(newOptions) {\n        return new VectorLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default VectorLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/VectorLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 513,
    "kind": "class",
    "name": "VectorLayer",
    "memberof": "build/ol/layers/VectorLayer.js",
    "static": true,
    "longname": "build/ol/layers/VectorLayer.js~VectorLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/VectorLayer.js",
    "importStyle": "VectorLayer",
    "description": "A class use to display vector data.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/VectorLayer.js~VectorLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/VectorLayer.js~VectorLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "the coordinate to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 515,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/VectorLayer.js~VectorLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/VectorLayer.js~VectorLayer#clone",
    "access": "public",
    "description": "Create a copy of the VectorLayer.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VectorLayer"
      ],
      "spread": false,
      "description": "A VectorLayer"
    }
  },
  {
    "__docId__": 516,
    "kind": "file",
    "name": "build/ol/layers/WMSLayer.js",
    "content": "import GeoJSON from 'ol/format/GeoJSON';\nimport Layer from './Layer';\n/**\n * Class use to display a WMS layer.\n *\n * @classproperty {ol/Map~Map} map - The map where the layer is displayed.\n * @extends {Layer}\n */\nclass WMSLayer extends Layer {\n    /**\n     * @override\n     */\n    constructor(options) {\n        super(options);\n        /** @ignore */\n        this.abortController = new AbortController();\n        /** @ignore */\n        this.format = new GeoJSON();\n    }\n    /**\n     * Get features infos' Url.\n     * @param {ol/coordinate~Coordinate} coord\n     * @return {ol/layer/Layer~Layer}\n     */\n    getFeatureInfoUrl(coord) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.map) {\n            return;\n        }\n        const projection = this.map.getView().getProjection();\n        const resolution = this.map.getView().getResolution();\n        if (resolution &&\n            projection &&\n            ((_b = (_a = this.olLayer) === null || _a === void 0 ? void 0 : _a.getSource()) === null || _b === void 0 ? void 0 : _b.getFeatureInfoUrl)) {\n            // eslint-disable-next-line consistent-return\n            return (_d = (_c = this.olLayer) === null || _c === void 0 ? void 0 : _c.getSource()) === null || _d === void 0 ? void 0 : _d.getFeatureInfoUrl(coord, resolution, projection, {\n                info_format: 'application/json',\n                query_layers: (_f = (_e = this.olLayer) === null || _e === void 0 ? void 0 : _e.getSource()) === null || _f === void 0 ? void 0 : _f.getParams().layers,\n            });\n        }\n    }\n    /**\n     * Request feature information for a given coordinate.\n     * @param {ol/coordinate~Coordinate} coordinate to request the information at.\n     * @return {Promise<FeatureInfo>} Promise with features, layer and coordinate.\n     */\n    getFeatureInfoAtCoordinate(coordinate) {\n        var _a;\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        const url = this.getFeatureInfoUrl(coordinate);\n        if (!url) {\n            // eslint-disable-next-line no-console\n            console.error('No url for the WMS layer.');\n            // resolve an empty feature array something fails\n            return Promise.resolve({\n                features: [],\n                coordinate,\n                layer: this,\n            });\n        }\n        return fetch(url, { signal })\n            .then((resp) => resp.json())\n            .then((r) => r.features)\n            .then((data) => ({\n            layer: this,\n            coordinate,\n            features: data.map((d) => this.format.readFeature(d)),\n        }))\n            .catch(() => \n        // resolve an empty feature array something fails\n        Promise.resolve({\n            features: [],\n            coordinate,\n            layer: this,\n        }));\n    }\n    /**\n     * Create a copy of the WMSLayer.\n     * @param {Object} newOptions Options to override\n     * @return {WMSLayer} A WMSLayer\n     */\n    clone(newOptions) {\n        return new WMSLayer(Object.assign(Object.assign({}, this.options), newOptions));\n    }\n}\nexport default WMSLayer;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/WMSLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 517,
    "kind": "class",
    "name": "WMSLayer",
    "memberof": "build/ol/layers/WMSLayer.js",
    "static": true,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/layers/WMSLayer.js",
    "importStyle": "WMSLayer",
    "description": "Class use to display a WMS layer.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@classproperty",
        "tagValue": "{ol/Map~Map} map - The map where the layer is displayed."
      }
    ],
    "interface": false,
    "extends": [
      "Layer"
    ]
  },
  {
    "__docId__": 518,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "override": true
  },
  {
    "__docId__": 519,
    "kind": "member",
    "name": "abortController",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#abortController",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 520,
    "kind": "member",
    "name": "format",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#format",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "getFeatureInfoUrl",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#getFeatureInfoUrl",
    "access": "public",
    "description": "Get features infos' Url.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol/layer/Layer~Layer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "getFeatureInfoAtCoordinate",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#getFeatureInfoAtCoordinate",
    "access": "public",
    "description": "Request feature information for a given coordinate.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol/coordinate~Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": "to request the information at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<FeatureInfo>"
      ],
      "spread": false,
      "description": "Promise with features, layer and coordinate."
    }
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "clone",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#clone",
    "access": "public",
    "description": "Create a copy of the WMSLayer.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newOptions",
        "description": "Options to override"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "WMSLayer"
      ],
      "spread": false,
      "description": "A WMSLayer"
    }
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "build/ol/layers/index.js",
    "content": "export { default as Layer } from './Layer';\nexport { default as MapboxLayer } from './MapboxLayer';\nexport { default as MaplibreLayer } from './MaplibreLayer';\nexport { default as MapboxStyleLayer } from './MapboxStyleLayer';\nexport { default as RoutingLayer } from './RoutingLayer';\nexport { default as RealtimeLayer } from './RealtimeLayer';\nexport { default as VectorLayer } from './VectorLayer';\nexport { default as WMSLayer } from './WMSLayer';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/layers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "file",
    "name": "build/ol/styles/fullTrajectoryDelayStyle.js",
    "content": "import { Style, Fill, Stroke, Circle } from 'ol/style';\n/** @private */\nconst stroke = new Style({\n    zIndex: 2,\n    image: new Circle({\n        radius: 5,\n        fill: new Fill({\n            color: '#000000',\n        }),\n    }),\n    stroke: new Stroke({\n        color: '#000000',\n        width: 6,\n    }),\n});\n/** @private */\nconst fill = new Style({\n    zIndex: 3,\n    image: new Circle({\n        radius: 4,\n        fill: new Fill({\n            color: '#a0a0a0',\n        }),\n    }),\n    stroke: new Stroke({\n        color: '#a0a0a0',\n        width: 4,\n    }),\n});\nconst fullTrajectoryDelaystyle = () => {\n    return [stroke, fill];\n};\nexport default fullTrajectoryDelaystyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/styles/fullTrajectoryDelayStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "stroke",
    "memberof": "build/ol/styles/fullTrajectoryDelayStyle.js",
    "static": true,
    "longname": "build/ol/styles/fullTrajectoryDelayStyle.js~stroke",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "fill",
    "memberof": "build/ol/styles/fullTrajectoryDelayStyle.js",
    "static": true,
    "longname": "build/ol/styles/fullTrajectoryDelayStyle.js~fill",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "fullTrajectoryDelaystyle",
    "memberof": "build/ol/styles/fullTrajectoryDelayStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/ol/styles/fullTrajectoryDelayStyle.js~fullTrajectoryDelaystyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/styles/fullTrajectoryDelayStyle.js",
    "importStyle": "fullTrajectoryDelaystyle",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "file",
    "name": "build/ol/styles/fullTrajectoryStyle.js",
    "content": "import { Style, Fill, Stroke, Circle } from 'ol/style';\n/** @private */\nconst borderStyle = new Style({\n    zIndex: 2,\n    image: new Circle({\n        radius: 5,\n        fill: new Fill({\n            color: '#000000',\n        }),\n    }),\n    stroke: new Stroke({\n        color: '#000000',\n        width: 6,\n    }),\n});\nconst fullTrajectorystyle = (feature, resolution, options) => {\n    let lineColor = '#ffffff'; // white\n    const type = feature.get('type');\n    let stroke = feature.get('stroke');\n    if (stroke && stroke[0] !== '#') {\n        stroke = `#${stroke}`;\n    }\n    lineColor = stroke || (options === null || options === void 0 ? void 0 : options.getBgColor(type));\n    // Don't allow white lines, use red instead.\n    lineColor = /#ffffff/i.test(lineColor) ? '#ff0000' : lineColor;\n    const style = [\n        borderStyle,\n        new Style({\n            zIndex: 3,\n            image: new Circle({\n                radius: 4,\n                fill: new Fill({\n                    color: lineColor,\n                }),\n            }),\n            stroke: new Stroke({\n                color: lineColor,\n                width: 4,\n            }),\n        }),\n    ];\n    return style;\n};\nexport default fullTrajectorystyle;\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/styles/fullTrajectoryStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 531,
    "kind": "variable",
    "name": "borderStyle",
    "memberof": "build/ol/styles/fullTrajectoryStyle.js",
    "static": true,
    "longname": "build/ol/styles/fullTrajectoryStyle.js~borderStyle",
    "access": "private",
    "export": false,
    "importPath": "mobility-toolbox-js/build/ol/styles/fullTrajectoryStyle.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 532,
    "kind": "function",
    "name": "fullTrajectorystyle",
    "memberof": "build/ol/styles/fullTrajectoryStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "build/ol/styles/fullTrajectoryStyle.js~fullTrajectorystyle",
    "access": "public",
    "export": true,
    "importPath": "mobility-toolbox-js/build/ol/styles/fullTrajectoryStyle.js",
    "importStyle": "fullTrajectorystyle",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolution",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "file",
    "name": "build/ol/styles/index.js",
    "content": "export { default as fullTrajectoryStyle } from './fullTrajectoryStyle';\nexport { default as fullTrajectoryDelayStyle } from './fullTrajectoryDelayStyle';\n",
    "static": true,
    "longname": "/home/olivier/GIT/mobility-toolbox-js/build/ol/styles/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# mobility-toolbox-js\n\nToolbox for JavaScript applications in the domains of mobility and logistics.\nThe tools in this library have been inspired by many projects realized for public transport agencies, mobility providers and logistics companies.\n\n[![npm](https://img.shields.io/npm/v/mobility-toolbox-js.svg?style=flat-square)](https://www.npmjs.com/package/mobility-toolbox-js)\n[![Build](https://github.com/geops/mobility-toolbox-js/workflows/Build/badge.svg)](https://github.com/geops/mobility-toolbox-js/actions?query=workflow%3ABuild)\n![Vercel](https://vercelbadge.vercel.app/api/geops/mobility-toolbox-js)\n\n## Documentation and examples\n\nVisit https://mobility-toolbox-js.vercel.app/\n\n## Demos\n\n* Display [real-time vehicle positions and prognosis data](https://mobility.portal.geops.io) on a map.\n* Search for [stops and stations](https://maps.trafimage.ch) all over the world.\n* Get [precise geographic courses](https://routing-demo.geops.io/) for all modes of transport.\n* Generate beautiful [schematic](https://mobility.portal.geops.io/world.geops.networkplans) or [topographic](https://mobility.portal.geops.io) maps for public transport, mobility and logistics.\n\n## Install\n\nInstall the library and the peer dependencies:\n\n```bash\nyarn add mobility-toolbox-js ol@6.14.1 mapbox-gl@1 maplibre-gl@2\n```\n\n## Development\n\n```bash\nyarn install\nyarn dev\n```\n\n## Deploy\n\nThis library website is deployed automatically using [Vercel](https://vercel.com/geops).\nFor Vercel we have to add the nextjs and raw-loader modules in the dev dependencies of the main package.json.\nBut those 2 librairies are not needed to build the library.\n\n## Version 1.x.x\n\nThe master branch is now open for the version 2 development. The version 1 is still available in [1.x.x](https://github.com/geops/mobility-toolbox-js/tree/1.x.x) branch.\n",
    "longname": "/home/olivier/GIT/mobility-toolbox-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"mobility-toolbox-js\",\n  \"license\": \"MIT\",\n  \"description\": \"Toolbox for JavaScript applications in the domains of mobility and logistics.\",\n  \"version\": \"2.0.0-beta.71\",\n  \"homepage\": \"https://mobility-toolbox-js.geops.io/\",\n  \"module\": \"index.js\",\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./api\": \"./api/index.js\",\n    \"./mapbox\": \"./mapbox/index.js\",\n    \"./ol\": \"./ol/index.js\",\n    \"./types\": \"./types/index.d.ts\"\n  },\n  \"dependencies\": {\n    \"@turf/helpers\": \"6.5.0\",\n    \"@turf/transform-rotate\": \"6.5.0\",\n    \"lodash.debounce\": \"4.0.8\",\n    \"lodash.throttle\": \"4.1.1\",\n    \"uuid\": \"9.0.0\"\n  },\n  \"peerDependencies\": {\n    \"mapbox-gl\": \"1.13.2\",\n    \"maplibre-gl\": \"2.4.0\",\n    \"ol\": \"6.14.1\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"17.2.0\",\n    \"@commitlint/config-conventional\": \"17.2.0\",\n    \"@types/geojson\": \"7946.0.10\",\n    \"@types/lodash.debounce\": \"4.0.7\",\n    \"@types/lodash.throttle\": \"4.1.7\",\n    \"@types/mapbox-gl\": \"2.7.8\",\n    \"@types/offscreencanvas\": \"2019.7.0\",\n    \"@types/topojson\": \"3.2.3\",\n    \"@types/uuid\": \"8.3.4\",\n    \"@typescript-eslint/eslint-plugin\": \"5.43.0\",\n    \"@typescript-eslint/parser\": \"5.43.0\",\n    \"cypress\": \"11.1.0\",\n    \"deepmerge\": \"4.2.2\",\n    \"esbuild\": \"0.15.14\",\n    \"esbuild-jest\": \"0.5.0\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"1.0.0\",\n    \"esdoc-publish-html-plugin\": \"1.1.2\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"esdoc-typescript-plugin\": \"1.0.1\",\n    \"eslint\": \"8.27.0\",\n    \"eslint-config-airbnb\": \"19.0.4\",\n    \"eslint-config-airbnb-typescript\": \"17.0.0\",\n    \"eslint-config-prettier\": \"8.5.0\",\n    \"eslint-plugin-cypress\": \"2.12.1\",\n    \"eslint-plugin-import\": \"2.26.0\",\n    \"eslint-plugin-jsx-a11y\": \"6.6.1\",\n    \"eslint-plugin-prettier\": \"4.2.1\",\n    \"eslint-plugin-react\": \"7.31.10\",\n    \"fixpack\": \"4.0.0\",\n    \"husky\": \"8.0.2\",\n    \"is-ci\": \"3.0.1\",\n    \"jest\": \"29.3.1\",\n    \"jest-canvas-mock\": \"2.4.0\",\n    \"jest-environment-jsdom\": \"29.3.1\",\n    \"jest-fetch-mock\": \"3.0.3\",\n    \"jest-serializer-html\": \"7.1.0\",\n    \"jest-transformer-svg\": \"2.0.0\",\n    \"jest-websocket-mock\": \"2.4.0\",\n    \"lint-staged\": \"13.0.3\",\n    \"mapbox-gl\": \"1.13.2\",\n    \"maplibre-gl\": \"2.4.0\",\n    \"mock-socket\": \"9.1.5\",\n    \"next\": \"12.1.6\",\n    \"next-transpile-modules\": \"10.0.0\",\n    \"ol\": \"6.14.1\",\n    \"openapi-typescript\": \"6.0.3\",\n    \"prettier\": \"2.7.1\",\n    \"raw-loader\": \"4.0.2\",\n    \"sort-json\": \"2.0.1\",\n    \"standard-version\": \"9.5.0\",\n    \"start-server-and-test\": \"1.14.0\",\n    \"stylelint\": \"14.15.0\",\n    \"stylelint-config-recommended-scss\": \"8.0.0\",\n    \"stylelint-config-standard\": \"29.0.0\",\n    \"stylelint-scss\": \"4.3.0\",\n    \"typescript\": \"4.7.4\"\n  },\n  \"scripts\": {\n    \"apidoc\": \"esdoc && cp apidoc/index.json doc/src/components/Esdoc\",\n    \"build\": \"yarn build:tsc && yarn esbuild:iife\",\n    \"build:tsc\": \"rm -rf build && yarn tsc && cp package.json build/ && cp -R src/types build/ && find build -type f -name '*.test.*' -delete\",\n    \"coverage\": \"yarn test  --watchAll=false  --coverage --coverageDirectory=coverage\",\n    \"cy:open\": \"cypress open\",\n    \"cy:test\": \"start-server-and-test dev http://localhost:3000 'cypress run --browser chrome'\",\n    \"cy:test:chrome\": \"yarn build && start-server-and-test start http://localhost:3000 'cypress run --browser chrome'\",\n    \"cy:test:edge\": \"yarn build && start-server-and-test start http://localhost:3000 'cypress run --browser edge'\",\n    \"cy:test:firefox\": \"yarn build && start-server-and-test start http://localhost:3000 'cypress run --browser firefox'\",\n    \"dev\": \"rm -rf .next && rm -rf doc/.next && yarn doc && yarn dev:examples\",\n    \"dev:examples\": \"rm -rf .next && rm -rf doc/.next && yarn build && cd build && yarn link && cd ../doc && yarn link mobility-toolbox-js && yarn dev\",\n    \"doc\": \"yarn build && yarn apidoc && cd doc && rm -rf .next && rm -rf node_modules/mobility-toolbox-js && yarn install --force && yarn build\",\n    \"esbuild\": \"yarn esbuild:all && yarn esbuild:iife\",\n    \"esbuild:all\": \"esbuild src/index.js src/**/*.js src/**/*.ts src/**/**/*.js src/**/**/*.ts --target=chrome100 --outdir=build/ --loader:.js=jsx\",\n    \"esbuild:iife\": \"yarn esbuild:iife:unminify && yarn esbuild:iife:minify\",\n    \"esbuild:iife:base\": \"esbuild src/iife.js --bundle --sourcemap --target=chrome100\",\n    \"esbuild:iife:minify\": \"yarn esbuild:iife:base --minify --outfile=build/mbt.min.js\",\n    \"esbuild:iife:unminify\": \"yarn esbuild:iife:base --outfile=build/mbt.js\",\n    \"format\": \"prettier --write 'src/**/*.js' && eslint 'src/**/*.js' --fix && stylelint 'src/**/*.css' 'src/**/*.scss' --fix --allow-empty-input\",\n    \"lib\": \"REACT_APP_LIB_MODE=1  webpack --mode production\",\n    \"lib:dev\": \"REACT_APP_LIB_MODE=1  webpack --mode development\",\n    \"link2\": \"cmdToAdd=$(node ./scripts/read-pkg-json.js add) && $cmdToAdd && yarn build && cmdToRemove=$(node ./scripts/read-pkg-json.js remove) && $cmdToRemove && cd build && yarn link\",\n    \"lint\": \"eslint src/**/*.js src/**/*.ts && stylelint src/**/*.css src/**/*.scss --allow-empty-input\",\n    \"prepare\": \"is-ci || husky install\",\n    \"publish:beta\": \"HUSKY=0 yarn release -- --prerelease beta --skip.changelog && git push origin HEAD && yarn run build && cd build && HUSKY=0 yarn publish --tag beta && git push --tags \",\n    \"publish:beta:dryrun\": \"yarn release -- --prerelease beta --dry-run --skip.changelog\",\n    \"publish:public:dryrun\": \"yarn release --dry-run\",\n    \"release\": \"standard-version\",\n    \"start\": \"yarn doc && cd doc && yarn start\",\n    \"start:examples\": \"cd doc && yarn build && yarn start\",\n    \"test\": \"TZ='UTC' jest \",\n    \"test:watch\": \"yarn test --watchAll\",\n    \"tsc\": \"tsc\",\n    \"types:backend\": \"openapi-typescript https://developer.geops.io/swagger/routing.json --output src/types/routing.d.ts && openapi-typescript  https://developer.geops.io/swagger/stops.json --output src/types/stops.d.ts\"\n  },\n  \"browserslist\": [\n    \">0.2%\",\n    \"not dead\",\n    \"not op_mini all\",\n    \"not ie <= 11\",\n    \"not android < 5\"\n  ],\n  \"keywords\": [\n    \"mobility\",\n    \"toolbox\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/geops/mobility-toolbox-js\"\n  },\n  \"sideEffects\": false\n}\n",
    "longname": "/home/olivier/GIT/mobility-toolbox-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "member",
    "name": "url",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#url",
    "access": "public",
    "description": "Url of the service.",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "apiKey",
    "memberof": "build/common/api/HttpAPI.js~HttpAPI",
    "static": false,
    "longname": "build/common/api/HttpAPI.js~HttpAPI#apiKey",
    "access": "public",
    "description": "Api key to access the service.",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#map",
    "access": "public",
    "description": "The map which the control refers to.",
    "lineNumber": 13,
    "type": {
      "types": [
        "ol/Map~Map",
        "mapboxgl.Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "active",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#active",
    "access": "public",
    "description": "Active the control.",
    "lineNumber": 13,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "element",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#element",
    "access": "public",
    "description": "The HTML element used to render the control.",
    "lineNumber": 13,
    "type": {
      "types": [
        "HTMLElement"
      ]
    }
  },
  {
    "kind": "member",
    "name": "target",
    "memberof": "build/common/controls/ControlCommon.js~ControlCommon",
    "static": false,
    "longname": "build/common/controls/ControlCommon.js~ControlCommon#target",
    "access": "public",
    "description": "The HTML element where to render the element property. Default is the map's element. Read only.",
    "lineNumber": 13,
    "type": {
      "types": [
        "HTMLElement"
      ]
    }
  },
  {
    "kind": "member",
    "name": "key",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#key",
    "access": "public",
    "description": "Identifier of the layer. Must be unique.",
    "lineNumber": 23,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "name",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#name",
    "access": "public",
    "description": "Name of the layer",
    "lineNumber": 23,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "copyrights",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#copyrights",
    "access": "public",
    "description": "Array of copyrights.",
    "lineNumber": 23,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "kind": "member",
    "name": "children",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#children",
    "access": "public",
    "description": "List of children layers.",
    "lineNumber": 23,
    "type": {
      "types": [
        "Layer[]"
      ]
    }
  },
  {
    "kind": "member",
    "name": "visible",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#visible",
    "access": "public",
    "description": "Define if the layer is currently display on the map.",
    "lineNumber": 23,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "disabled",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#disabled",
    "access": "public",
    "description": "Define if the layer is currently display on the map but can't be seen (extent, zoom ,data restrictions).",
    "lineNumber": 23,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "hitTolerance",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#hitTolerance",
    "access": "public",
    "description": "Hit-detection tolerance in css pixels. Pixels inside the radius around the given position will be checked for features.",
    "lineNumber": 23,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "kind": "member",
    "name": "properties",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#properties",
    "access": "public",
    "description": "Custom properties.",
    "lineNumber": 23,
    "type": {
      "types": [
        "Object"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/common/layers/LayerCommon.js~Layer",
    "static": false,
    "longname": "build/common/layers/LayerCommon.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 23,
    "type": {
      "types": [
        "ol/Map~Map",
        "mapboxgl.Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/mapbox/layers/Layer.js~Layer",
    "static": false,
    "longname": "build/mapbox/layers/Layer.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 20,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "apiKey",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#apiKey",
    "access": "public",
    "description": "Key used for RoutingApi requests.",
    "lineNumber": 79,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "stopsApiKey",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#stopsApiKey",
    "access": "public",
    "description": "Key used for Stop lookup requests (defaults to apiKey).",
    "lineNumber": 79,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "stopsApiUrl",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#stopsApiUrl",
    "access": "public",
    "description": "Url used for Stop lookup requests (defaults to https://api.geops.io/stops/v1/lookup/).",
    "lineNumber": 79,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "graphs",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#graphs",
    "access": "public",
    "description": "Array of routing graphs and min/max zoom levels. If you use the control in combination with the [geOps Maps API](https://developer.geops.io/apis/maps/), you may want to use the optimal level of generalizations: \"[['gen4', 0, 8], ['gen3', 8, 9], ['gen2', 9, 11], ['gen1', 11, 13], ['osm', 13, 99]]\"",
    "lineNumber": 79,
    "type": {
      "types": [
        "Array.<Array<graph=\"osm\", minZoom=0, maxZoom=99>>"
      ]
    }
  },
  {
    "kind": "member",
    "name": "mot",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#mot",
    "access": "public",
    "description": "Mean of transport to be used for routing.",
    "lineNumber": 79,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "name": "routingApiParams",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#routingApiParams",
    "access": "public",
    "description": "object of additional parameters to pass to the routing api request.",
    "lineNumber": 79,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "member",
    "name": "snapToClosestStation",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#snapToClosestStation",
    "access": "public",
    "description": "If true, the routing will snap the coordinate to the closest station. Default to false.",
    "lineNumber": 79,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "member",
    "name": "useRawViaPoints",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#useRawViaPoints",
    "access": "public",
    "description": "Experimental property. Wen true, it allows the user to add via points using different kind of string. See \"via\" parameter defined by the [geOps Routing API](https://developer.geops.io/apis/routing/). Default to false, only array of coordinates and station's id are supported as via points.",
    "lineNumber": 79,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "routingLayer",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#routingLayer",
    "access": "public",
    "description": "Layer for adding route features.",
    "lineNumber": 79,
    "type": {
      "types": [
        "RoutingLayer",
        "Layer"
      ]
    }
  },
  {
    "kind": "member",
    "name": "onRouteError",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#onRouteError",
    "access": "public",
    "description": "Callback on error.",
    "lineNumber": 79,
    "type": {
      "types": [
        "function"
      ]
    }
  },
  {
    "kind": "member",
    "name": "loading",
    "memberof": "build/ol/controls/RoutingControl.js~RoutingControl",
    "static": false,
    "longname": "build/ol/controls/RoutingControl.js~RoutingControl#loading",
    "access": "public",
    "description": "True if the control is requesting the backend.",
    "lineNumber": 79,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/Layer.js~Layer",
    "static": false,
    "longname": "build/ol/layers/Layer.js~Layer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 19,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/MapboxLayer.js~MapboxLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxLayer.js~MapboxLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 19,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer",
    "static": false,
    "longname": "build/ol/layers/MapboxStyleLayer.js~MapboxStyleLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 20,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/MaplibreLayer.js~MaplibreLayer",
    "static": false,
    "longname": "build/ol/layers/MaplibreLayer.js~MaplibreLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 18,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/RoutingLayer.js~RoutingLayer",
    "static": false,
    "longname": "build/ol/layers/RoutingLayer.js~RoutingLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 60,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/VectorLayer.js~VectorLayer",
    "static": false,
    "longname": "build/ol/layers/VectorLayer.js~VectorLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 8,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  },
  {
    "kind": "member",
    "name": "map",
    "memberof": "build/ol/layers/WMSLayer.js~WMSLayer",
    "static": false,
    "longname": "build/ol/layers/WMSLayer.js~WMSLayer#map",
    "access": "public",
    "description": "The map where the layer is displayed.",
    "lineNumber": 9,
    "type": {
      "types": [
        "ol/Map~Map"
      ]
    }
  }
]